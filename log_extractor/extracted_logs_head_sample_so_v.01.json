[
    {
        "logs": "private var gcCount:int;\nprivate function startGCCycle():void{\n    gcCount = 0;\n    addEventListener(Event.ENTER_FRAME, doGC);\n}\nprivate function doGC(evt:Event):void{\n    flash.system.System.gc();\n    if(++gcCount > 1){\n        removeEventListener(Event.ENTER_FRAME, doGC);\n        setTimeout(lastGC, 40);\n    }\n}\nprivate function lastGC():void{\n    flash.system.System.gc();\n}"
    },
    {
        "logs": "private var gcCount:int;\nprivate function startGCCycle():void{\n    gcCount = 0;\n    addEventListener(Event.ENTER_FRAME, doGC);\n}\nprivate function doGC(evt:Event):void{\n    flash.system.System.gc();\n    if(++gcCount > 1){\n        removeEventListener(Event.ENTER_FRAME, doGC);\n        setTimeout(lastGC, 40);\n    }\n}\nprivate function lastGC():void{\n    flash.system.System.gc();\n}"
    },
    {
        "logs": "public static function RunSqlFromFile(fileName:String):void {\n    var file:File = File.applicationDirectory.resolvePath(fileName);\n    var stream:FileStream = new FileStream();\n    stream.open(file, FileMode.READ)\n    var strSql:String = stream.readUTFBytes(stream.bytesAvailable);\n    NonQuery(strSql);\n}\n\npublic static function NonQuery(strSQL:String):void {\n    var sqlConnection:SQLConnection = new SQLConnection();\n    sqlConnection.open(File.applicationStorageDirectory.resolvePath(DBPATH));\n    var sqlStatement:SQLStatement = new SQLStatement();\n    sqlStatement.text = strSQL;\n    sqlStatement.sqlConnection = sqlConnection;\n    try {\n        sqlStatement.execute();\n    } catch (error:SQLError) {\n        Alert.show(error.toString());\n    }\n}"
    },
    {
        "logs": "public static function RunSqlFromFile(fileName:String):void {\n    var file:File = File.applicationDirectory.resolvePath(fileName);\n    var stream:FileStream = new FileStream();\n    stream.open(file, FileMode.READ)\n    var strSql:String = stream.readUTFBytes(stream.bytesAvailable);\n    NonQuery(strSql);\n}\n\npublic static function NonQuery(strSQL:String):void {\n    var sqlConnection:SQLConnection = new SQLConnection();\n    sqlConnection.open(File.applicationStorageDirectory.resolvePath(DBPATH));\n    var sqlStatement:SQLStatement = new SQLStatement();\n    sqlStatement.text = strSQL;\n    sqlStatement.sqlConnection = sqlConnection;\n    try {\n        sqlStatement.execute();\n    } catch (error:SQLError) {\n        Alert.show(error.toString());\n    }\n}"
    },
    {
        "logs": "$var1 = \"foo\";\n$var2 = \"bar\";\n\nchangeThem($var1, $var2);\n\nprint \"var1: $var1, var2: $var2\";\n\nfunction changeThem($var1, &$var2){\n    $var1 = \"FOO\";\n    $var2 = \"BAR\";\n}"
    },
    {
        "logs": "public class DateParam {\n  private SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n\n  private Calendar date;\n\n  public DateParam(String in) throws WebApplicationException {\n    try {\n      date = Calendar.getInstance();\n      date.setTime(format.parse(in));\n    }\n    catch (ParseException exception) {\n      throw new WebApplicationException(400);\n    }\n  }\n  public Calendar getDate() {\n    return date;\n  }\n  public String format() {\n    return format.format(value.getTime());\n  }\n}"
    },
    {
        "logs": "public class DateParam {\n  private SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n\n  private Calendar date;\n\n  public DateParam(String in) throws WebApplicationException {\n    try {\n      date = Calendar.getInstance();\n      date.setTime(format.parse(in));\n    }\n    catch (ParseException exception) {\n      throw new WebApplicationException(400);\n    }\n  }\n  public Calendar getDate() {\n    return date;\n  }\n  public String format() {\n    return format.format(value.getTime());\n  }\n}"
    },
    {
        "logs": "try {               \n    IEditorPart part = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getActiveEditor();\n    if ( part instanceof ITextEditor ) {\n        final ITextEditor editor = (ITextEditor)part;\n        IDocumentProvider prov = editor.getDocumentProvider();\n        IDocument doc = prov.getDocument( editor.getEditorInput() );\n        ISelection sel = editor.getSelectionProvider().getSelection();\n        if ( sel instanceof TextSelection ) {\n            final TextSelection textSel = (TextSelection)sel;\n            String newText = \"/*\" + textSel.getText() + \"*/\";\n            doc.replace( textSel.getOffset(), textSel.getLength(), newText );\n        }\n    }\n} catch ( Exception ex ) {\n    ex.printStackTrace();\n}"
    },
    {
        "logs": "try {               \n    IEditorPart part = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getActiveEditor();\n    if ( part instanceof ITextEditor ) {\n        final ITextEditor editor = (ITextEditor)part;\n        IDocumentProvider prov = editor.getDocumentProvider();\n        IDocument doc = prov.getDocument( editor.getEditorInput() );\n        ISelection sel = editor.getSelectionProvider().getSelection();\n        if ( sel instanceof TextSelection ) {\n            final TextSelection textSel = (TextSelection)sel;\n            String newText = \"/*\" + textSel.getText() + \"*/\";\n            doc.replace( textSel.getOffset(), textSel.getLength(), newText );\n        }\n    }\n} catch ( Exception ex ) {\n    ex.printStackTrace();\n}"
    },
    {
        "logs": "validate :ensure_category_exists\n\n  def ensure_category_exists\n    errors.add('Category') unless self.blog.categories.find_by_id(self.category_id)\n  end"
    },
    {
        "logs": "Transmitting file data .svn: Commit failed (details follow):\nsvn: MERGE of '/svn/svn2': 409 Conflict (http://localhost)"
    },
    {
        "logs": "Transmitting file data .svn: Commit failed (details follow):\nsvn: MERGE of '/svn/svn2': 409 Conflict (http://localhost)"
    },
    {
        "logs": "public class RangedHttpWebStream : Stream\n{\n    private Stream realStream;\n    private long startPosition;\n    private long? requestedLength;\n    private HttpWebRequest request;\n\n    public RangedHttpWebStream(HttpWebRequest request)\n    {\n        if (request == null)\n            throw new ArgumentNullException(\"request\");\n        this.request = request;\n    }\n\n    public override bool CanRead\n    {\n        get { return true; }\n    }\n\n    public override bool CanSeek\n    {\n        get { return (realStream == null); }\n    }\n\n    public override bool CanWrite\n    {\n        get { return false; }\n    }\n\n    public override void Flush()\n    {\n    }\n\n    public override long Length\n    {\n        get { return requestedLength ?? -1; }\n    }\n\n    public override long Position\n    {\n        get { return startPosition; }\n        set { Seek(value, SeekOrigin.Begin); }\n    }\n\n    public override int Read(byte[] buffer, int offset, int count)\n    {\n        if (realStream == null)\n        {\n            UpdateRange();\n            WebResponse response = request.GetResponse();\n            realStream = response.GetResponseStream();\n        }\n        return realStream.Read(buffer, offset, count);\n    }\n\n    public override long Seek(long offset, SeekOrigin origin)\n    {\n        if (realStream != null)\n            throw new InvalidOperationException(\"Seek cannot be performed \" +\n                \"once reading has started.\");\n        switch (origin)\n        {\n            case SeekOrigin.Begin:\n                startPosition = offset;\n                break;\n            case SeekOrigin.Current:\n                startPosition += offset;\n                break;\n            default:\n                throw new NotSupportedException(\"Seek can only be performed \" +\n                    \"from the beginning of the stream or current position.\");\n        }\n        return startPosition;\n    }\n\n    public override void SetLength(long value)\n    {\n        if (value < 0)\n            throw new ArgumentOutOfRangeException(\"Parameter 'value' \" +\n                \"cannot be less than zero.\");\n        if (value > Int32.MaxValue)\n            throw new ArgumentOutOfRangeException(\"Parameter 'value' \" +\n                \"cannot be greater than Int32.MaxValue.\");\n        requestedLength = value;\n    }\n\n    public override void Write(byte[] buffer, int offset, int count)\n    {\n        throw new NotSupportedException(\"The stream does not support writing.\");\n    }\n\n    protected override void Dispose(bool disposing)\n    {\n        if ((disposing) && (realStream != null))\n            realStream.Dispose();\n        base.Dispose(disposing);\n    }\n\n    private void UpdateRange()\n    {\n        if (startPosition < 0)\n            throw new IOException(\"Attempted to seek before \" +\n                \"beginning of stream.\");\n        if (startPosition > Int32.MaxValue)\n            throw new IOException(\"Attempted to seek past Int32.MaxValue.  \" +\n                \"This is invalid for an HTTP stream.\");\n        if (requestedLength != null)\n        {\n            long endPosition = startPosition + requestedLength.Value;\n            if (endPosition > Int32.MaxValue)\n                throw new IOException(\"Attempted to read past \" +\n                    \"Int32.MaxValue.  This is invalid for an HTTP stream.\");\n            request.AddRange((int)startPosition, (int)endPosition);\n        }\n        else\n        {\n            request.AddRange((int)-startPosition);\n        }\n    }\n}"
    },
    {
        "logs": "public class RangedHttpWebStream : Stream\n{\n    private Stream realStream;\n    private long startPosition;\n    private long? requestedLength;\n    private HttpWebRequest request;\n\n    public RangedHttpWebStream(HttpWebRequest request)\n    {\n        if (request == null)\n            throw new ArgumentNullException(\"request\");\n        this.request = request;\n    }\n\n    public override bool CanRead\n    {\n        get { return true; }\n    }\n\n    public override bool CanSeek\n    {\n        get { return (realStream == null); }\n    }\n\n    public override bool CanWrite\n    {\n        get { return false; }\n    }\n\n    public override void Flush()\n    {\n    }\n\n    public override long Length\n    {\n        get { return requestedLength ?? -1; }\n    }\n\n    public override long Position\n    {\n        get { return startPosition; }\n        set { Seek(value, SeekOrigin.Begin); }\n    }\n\n    public override int Read(byte[] buffer, int offset, int count)\n    {\n        if (realStream == null)\n        {\n            UpdateRange();\n            WebResponse response = request.GetResponse();\n            realStream = response.GetResponseStream();\n        }\n        return realStream.Read(buffer, offset, count);\n    }\n\n    public override long Seek(long offset, SeekOrigin origin)\n    {\n        if (realStream != null)\n            throw new InvalidOperationException(\"Seek cannot be performed \" +\n                \"once reading has started.\");\n        switch (origin)\n        {\n            case SeekOrigin.Begin:\n                startPosition = offset;\n                break;\n            case SeekOrigin.Current:\n                startPosition += offset;\n                break;\n            default:\n                throw new NotSupportedException(\"Seek can only be performed \" +\n                    \"from the beginning of the stream or current position.\");\n        }\n        return startPosition;\n    }\n\n    public override void SetLength(long value)\n    {\n        if (value < 0)\n            throw new ArgumentOutOfRangeException(\"Parameter 'value' \" +\n                \"cannot be less than zero.\");\n        if (value > Int32.MaxValue)\n            throw new ArgumentOutOfRangeException(\"Parameter 'value' \" +\n                \"cannot be greater than Int32.MaxValue.\");\n        requestedLength = value;\n    }\n\n    public override void Write(byte[] buffer, int offset, int count)\n    {\n        throw new NotSupportedException(\"The stream does not support writing.\");\n    }\n\n    protected override void Dispose(bool disposing)\n    {\n        if ((disposing) && (realStream != null))\n            realStream.Dispose();\n        base.Dispose(disposing);\n    }\n\n    private void UpdateRange()\n    {\n        if (startPosition < 0)\n            throw new IOException(\"Attempted to seek before \" +\n                \"beginning of stream.\");\n        if (startPosition > Int32.MaxValue)\n            throw new IOException(\"Attempted to seek past Int32.MaxValue.  \" +\n                \"This is invalid for an HTTP stream.\");\n        if (requestedLength != null)\n        {\n            long endPosition = startPosition + requestedLength.Value;\n            if (endPosition > Int32.MaxValue)\n                throw new IOException(\"Attempted to read past \" +\n                    \"Int32.MaxValue.  This is invalid for an HTTP stream.\");\n            request.AddRange((int)startPosition, (int)endPosition);\n        }\n        else\n        {\n            request.AddRange((int)-startPosition);\n        }\n    }\n}"
    },
    {
        "logs": "public class ChatMessage :DependencyObject, INotifyPropertyChanged\n{\n    public event PropertyChangedEventHandler PropertyChanged;\n\n    public static DependencyProperty PlayerProperty = DependencyProperty.Register( \"Player\", typeof( string ), typeof( ChatMessage ),\n                                                                                         new PropertyMetadata(\n                                                                                            new PropertyChangedCallback( OnPlayerPropertyChanged ) ) );\n\n    public static DependencyProperty MessageProperty = DependencyProperty.Register( \"Message\", typeof( WrapPanel ), typeof( ChatMessage ),\n                                                                                         new PropertyMetadata(\n                                                                                            new PropertyChangedCallback( OnMessagePropertyChanged ) ) );\n\n    public static DependencyProperty ForeColorProperty = DependencyProperty.Register( \"ForeColor\", typeof( SolidColorBrush ), typeof( ChatMessage ),\n                                                                                         new PropertyMetadata(\n                                                                                            new PropertyChangedCallback( OnForeColorPropertyChanged ) ) );\n\n    private static void OnForeColorPropertyChanged( DependencyObject d, DependencyPropertyChangedEventArgs e )\n    {\n        ChatMessage c = d as ChatMessage;\n        c.ForeColor = ( SolidColorBrush ) e.NewValue;\n    }\n\n    public ChatMessage()\n    {\n        Message = new WrapPanel();\n        ForeColor = new SolidColorBrush( Colors.White );\n    }\n\n    private static void OnMessagePropertyChanged( DependencyObject d, DependencyPropertyChangedEventArgs e )\n    {\n        ChatMessage c = d as ChatMessage;\n        c.Message = ( WrapPanel ) e.NewValue;\n    }\n\n    private static void OnPlayerPropertyChanged( DependencyObject d, DependencyPropertyChangedEventArgs e )\n    {\n        ChatMessage c = d as ChatMessage;\n        c.Player = e.NewValue.ToString();\n    }\n\n    public SolidColorBrush ForeColor\n    {\n        get { return ( SolidColorBrush ) GetValue( ForeColorProperty ); }\n        set\n        {\n            SetValue( ForeColorProperty, value );\n            if(PropertyChanged != null)\n                PropertyChanged(this, new PropertyChangedEventArgs( \"ForeColor\" ));\n        }\n    }\n\n    public string Player\n    {\n        get { return ( string ) GetValue( PlayerProperty ); }\n        set\n        {\n            SetValue( PlayerProperty, value );\n            if ( PropertyChanged != null )\n                PropertyChanged( this, new PropertyChangedEventArgs( \"Player\" ) );\n        }\n    }\n\n    public WrapPanel Message\n    {\n        get { return ( WrapPanel ) GetValue( MessageProperty ); }\n        set\n        {\n            SetValue( MessageProperty, value );\n            if ( PropertyChanged != null )\n                PropertyChanged( this, new PropertyChangedEventArgs( \"Message\" ) );\n        }\n    }\n}"
    },
    {
        "logs": "setTimeout(function() {\ndocument.getElementById('audio_3').addEventListener('play', function(){\ndocument.getElementById('audio_4').currentTime = 0;\ndocument.getElementById('audio_4').pause();\n}, false);\n\ndocument.getElementById('audio_4').addEventListener('play', function(){\ndocument.getElementById('audio_3').currentTime = 0;\ndocument.getElementById('audio_3').pause();\n}, false);\n},1000);"
    },
    {
        "logs": "??? Attempt to reference field of non-structure array.\n\n    Error in ==> insertion_sort at 6\n        for j=2:original.length"
    },
    {
        "logs": "??? Attempt to reference field of non-structure array.\n\n    Error in ==> insertion_sort at 6\n        for j=2:original.length"
    },
    {
        "logs": "Try\n\n        With IOStructure\n            .overlap.hEvent = CreateEvent(Nothing, True, False, Nothing)\n            If .overlap.hEvent = 0 Then\n                writeSuccess = False\n            Else\n                writeSuccess = WriteFile(.hdevice, .writeBuf, .writeBuf.Length, .bytesWritten, .overlap)\n\n                'If the write didn't succeed, check to see if it's pending\n                If Not writeSuccess Then\n\n                    If Err.LastDllError <> ERROR_IO_PENDING Then 'The write failed\n                        writeSuccess = False\n                    Else ' Write is pending\n\n                        Select Case WaitForSingleObject(.overlap.hEvent, .timeout * 0.1) 'Wait for the write to complete\n\n                            Case 0 'The write completed, check the overlapped structure for the signalled event.\n                                writeSuccess = GetOverlappedResult(.hdevice, .overlap, .bytesWritten, 0)\n                            Case Else\n                                writeSuccess = False\n                        End Select\n                    End If\n\n                End If\n            End If\n            CloseHandle(.overlap.hEvent)\n        End With\n        '   Thread.Sleep(IOStructure.timeout * 0.3)\n        ' End While\n    Catch\n        writeSuccess = False\n    End Try"
    },
    {
        "logs": "Try\n\n        With IOStructure\n            .overlap.hEvent = CreateEvent(Nothing, True, False, Nothing)\n            If .overlap.hEvent = 0 Then\n                writeSuccess = False\n            Else\n                writeSuccess = WriteFile(.hdevice, .writeBuf, .writeBuf.Length, .bytesWritten, .overlap)\n\n                'If the write didn't succeed, check to see if it's pending\n                If Not writeSuccess Then\n\n                    If Err.LastDllError <> ERROR_IO_PENDING Then 'The write failed\n                        writeSuccess = False\n                    Else ' Write is pending\n\n                        Select Case WaitForSingleObject(.overlap.hEvent, .timeout * 0.1) 'Wait for the write to complete\n\n                            Case 0 'The write completed, check the overlapped structure for the signalled event.\n                                writeSuccess = GetOverlappedResult(.hdevice, .overlap, .bytesWritten, 0)\n                            Case Else\n                                writeSuccess = False\n                        End Select\n                    End If\n\n                End If\n            End If\n            CloseHandle(.overlap.hEvent)\n        End With\n        '   Thread.Sleep(IOStructure.timeout * 0.3)\n        ' End While\n    Catch\n        writeSuccess = False\n    End Try"
    },
    {
        "logs": "var delay = 200, t = 0;\n$(\"#rowOne\").children('li').css('display', 'none').each(function(){\n  t += delay;\n  var $li = $(this);\n  setTimeout(function(){\n    $li.fadeIn(1900);\n  },t);\n});\n\nt = delay * 2;\n\n$(\"#rowTwo\").children('li').css('display', 'none').each(function(){\n  t += delay;\n  var $li = $(this);\n  setTimeout(function(){\n    $li.fadeIn(1900);\n  },t);\n});"
    },
    {
        "logs": "var delay = 200, t = 0;\n$(\".row\").each(function() { \n  $(this).children('li').css('display', 'none').each(function(\n  {\n    t += delay;\n    var $li = $(this);\n    setTimeout(function(){\n      $li.fadeIn(1900);\n    },t);\n   });\n   t = delay * 2;\n});"
    },
    {
        "logs": "var delay = 200, t = 0;\n$(\"#rowOne\").children('li').css('display', 'none').each(function(){\n  t += delay;\n  var $li = $(this);\n  setTimeout(function(){\n    $li.fadeIn(1900);\n  },t);\n});\n\nt = delay * 2;\n\n$(\"#rowTwo\").children('li').css('display', 'none').each(function(){\n  t += delay;\n  var $li = $(this);\n  setTimeout(function(){\n    $li.fadeIn(1900);\n  },t);\n});"
    },
    {
        "logs": "var delay = 200, t = 0;\n$(\".row\").each(function() { \n  $(this).children('li').css('display', 'none').each(function(\n  {\n    t += delay;\n    var $li = $(this);\n    setTimeout(function(){\n      $li.fadeIn(1900);\n    },t);\n   });\n   t = delay * 2;\n});"
    },
    {
        "logs": "<?php\n\n    $target_path  = \"./upload/\";\n\n    $target_path = $target_path . basename( $_FILES['uploadedfile']['name']);\n\n    if(move_uploaded_file($_FILES['uploadedfile']['tmp_name'], $target_path))\n    {\n        echo \"The file \".basename( $_FILES['uploadedfile']['name']).\" has been uploaded\";\n    } \n    else\n    {\n        echo \"There was an error uploading the file, please try again!\";\n    }\n?>"
    },
    {
        "logs": "function FormatNumberBy3(num, decpoint, sep) {\n  // check for missing parameters and use defaults if so\n  if (arguments.length == 2) {\n    sep = \",\";\n  }\n  if (arguments.length == 1) {\n    sep = \",\";\n    decpoint = \".\";\n  }\n  // need a string for operations\n  num = num.toString();\n  // separate the whole number and the fraction if possible\n  a = num.split(decpoint);\n  x = a[0]; // decimal\n  y = a[1]; // fraction\n  z = \"\";\n\n\n  if (typeof(x) != \"undefined\") {\n    // reverse the digits. regexp works from left to right.\n    for (i=x.length-1;i>=0;i--)\n      z += x.charAt(i);\n    // add seperators. but undo the trailing one, if there\n    z = z.replace(/(\\d{3})/g, \"$1\" + sep);\n    if (z.slice(-sep.length) == sep)\n      z = z.slice(0, -sep.length);\n    x = \"\";\n    // reverse again to get back the number\n    for (i=z.length-1;i>=0;i--)\n      x += z.charAt(i);\n    // add the fraction back in, if it was there\n    if (typeof(y) != \"undefined\" && y.length > 0)\n      x += decpoint + y;\n  }\n  return x;\n}"
    },
    {
        "logs": "function FormatNumberBy3(num, decpoint, sep) {\n  // check for missing parameters and use defaults if so\n  if (arguments.length == 2) {\n    sep = \",\";\n  }\n  if (arguments.length == 1) {\n    sep = \",\";\n    decpoint = \".\";\n  }\n  // need a string for operations\n  num = num.toString();\n  // separate the whole number and the fraction if possible\n  a = num.split(decpoint);\n  x = a[0]; // decimal\n  y = a[1]; // fraction\n  z = \"\";\n\n\n  if (typeof(x) != \"undefined\") {\n    // reverse the digits. regexp works from left to right.\n    for (i=x.length-1;i>=0;i--)\n      z += x.charAt(i);\n    // add seperators. but undo the trailing one, if there\n    z = z.replace(/(\\d{3})/g, \"$1\" + sep);\n    if (z.slice(-sep.length) == sep)\n      z = z.slice(0, -sep.length);\n    x = \"\";\n    // reverse again to get back the number\n    for (i=z.length-1;i>=0;i--)\n      x += z.charAt(i);\n    // add the fraction back in, if it was there\n    if (typeof(y) != \"undefined\" && y.length > 0)\n      x += decpoint + y;\n  }\n  return x;\n}"
    },
    {
        "logs": "onChange: (function(self) {\n    return function() {\n        return modifyOnChange.apply(self, arguments);\n    }\n})(this),"
    },
    {
        "logs": "onChange: (function(self) {\n    return function() {\n        return modifyOnChange.apply(self, arguments);\n    }\n})(this),"
    },
    {
        "logs": "import multiprocessing\nimport sys\nimport traceback\n\ndef foo(pipe_to_parent):\n    try:\n        raise Exception('xxx')\n    except:\n        except_type, except_class, tb = sys.exc_info()\n        pipe_to_parent.send((except_type, except_class, traceback.extract_tb(tb)))\n\nto_child, to_self = multiprocessing.Pipe()\nprocess = multiprocessing.Process(target = foo, args = (to_self,))\nprocess.start()\nexc_info = to_child.recv()\nprocess.join()\nprint exc_info\nto_child.close()\nto_self.close()"
    },
    {
        "logs": "function serialize(node) {\n    if (typeof XMLSerializer != \"undefined\") {  // Firefox, etc.\n        return (new XMLSerializer()).serializeToString(node);\n    }\n    else if (node.xml) {  // IE\n        return node.xml;\n    }\n};\n\nfunction parseXMLString(xml) {\n    if (typeof DOMParser != \"undefined\") {  // Firefox, etc.\n       var dp = new DOMParser();\n       return dp.parseFromString(xml, \"application/xml\");\n    }\n    else if (typeof ActiveXObject != \"undefined\") {  // IE\n        var doc = XML.newDocument();\n        doc.loadXML(xml);\n        return doc;\n    }\n};\n\nvar contextNode = document.getElementById('container');\nvar xmlString = serialize(contextNode);\nvar doc = parseXMLString(xmlString);\n\n// Get elements from document using XPath\nvar xpathResult = doc.evaluate('//.', doc.firstChild, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);\n\n// Insert elements back into document (I used replace in order to show that the document is actually changed)\ncontextNode.parentNode.replaceChild(xpathResult.singleNodeValue.firstChild, contextNode);"
    },
    {
        "logs": "function serialize(node) {\n    if (typeof XMLSerializer != \"undefined\") {  // Firefox, etc.\n        return (new XMLSerializer()).serializeToString(node);\n    }\n    else if (node.xml) {  // IE\n        return node.xml;\n    }\n};\n\nfunction parseXMLString(xml) {\n    if (typeof DOMParser != \"undefined\") {  // Firefox, etc.\n       var dp = new DOMParser();\n       return dp.parseFromString(xml, \"application/xml\");\n    }\n    else if (typeof ActiveXObject != \"undefined\") {  // IE\n        var doc = XML.newDocument();\n        doc.loadXML(xml);\n        return doc;\n    }\n};\n\nvar contextNode = document.getElementById('container');\nvar xmlString = serialize(contextNode);\nvar doc = parseXMLString(xmlString);\n\n// Get elements from document using XPath\nvar xpathResult = doc.evaluate('//.', doc.firstChild, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);\n\n// Insert elements back into document (I used replace in order to show that the document is actually changed)\ncontextNode.parentNode.replaceChild(xpathResult.singleNodeValue.firstChild, contextNode);"
    },
    {
        "logs": "<T> void test1(List<T> a){}\n<T> void test2(List<T> a, List<T> b){}\n\nList<?> x = ...;\ntest1(x);    // ok\ntest2(x, x); // error"
    },
    {
        "logs": "<T> void test1(List<T> a){}\n<T> void test2(List<T> a, List<T> b){}\n\nList<?> x = ...;\ntest1(x);    // ok\ntest2(x, x); // error"
    },
    {
        "logs": "private void comboBox3_SelectedIndexChanged(object sender, EventArgs e)\n    {\n        if (comboBox3.SelectedIndex == 0)\n        {\n            panel9.Visible();\n\n        }\n    }"
    },
    {
        "logs": "-(NSFetchedResultsController *) fetchGroupedObjects:(NSString *)entityDescription \n                                      sortField:(NSString *)sortField \n                                     withPredicate:(NSPredicate *)predicate  {\n\nBPRAppDelegate *delegate = (BPRAppDelegate *)[UIApplication sharedApplication].delegate;\nNSManagedObjectContext *context = delegate.managedObjectContext;\n//NSError *error;\n\n//Fetch the data....\nNSFetchRequest *fetchRequest = [[NSFetchRequest alloc] init];\nNSEntityDescription *entity = [NSEntityDescription \n                               entityForName:entityDescription inManagedObjectContext:context];\n[fetchRequest setEntity:entity];\n\nNSSortDescriptor *groupDescription = [[NSSortDescriptor alloc]\n                                    initWithKey:GROUP_NAME ascending:YES];\n//Sort by Category Name\nNSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc]\n                                    initWithKey:sortField ascending:YES];\n\nNSMutableArray *sorts = [[[NSMutableArray alloc] init] autorelease];\n\n[sorts addObject:sortDescriptor];\n[sorts addObject:groupDescription];\n\n\n[fetchRequest setSortDescriptors:sorts];\n//[fetchRequest setResultType:NSDictionaryResultType];\n//[fetchRequest setPropertiesToGroupBy:[entity.propertiesByName valueForKey:CONTRACTOR_NAME];\n\n\nif (predicate != nil)\n  [fetchRequest setPredicate:predicate];\n\n\n//NSArray *fetchedObjects = [context executeFetchRequest:fetchRequest error:&error];\n\n//NSFetchResultsController\n\n[fetchRequest setFetchBatchSize:20];\n\nNSFetchedResultsController *fetchedResultsController = \n[[NSFetchedResultsController alloc] initWithFetchRequest:fetchRequest \n                                    managedObjectContext:context sectionNameKeyPath:GROUP_NAME \n                                               cacheName:nil]; //Don't use a cache\n [fetchRequest release];\n [sortDescriptor release];\n [groupDescription release];\n return fetchedResultsController; //You can't autorelease this thing... the requestor must  do that."
    },
    {
        "logs": "-(NSFetchedResultsController *) fetchGroupedObjects:(NSString *)entityDescription \n                                      sortField:(NSString *)sortField \n                                     withPredicate:(NSPredicate *)predicate  {\n\nBPRAppDelegate *delegate = (BPRAppDelegate *)[UIApplication sharedApplication].delegate;\nNSManagedObjectContext *context = delegate.managedObjectContext;\n//NSError *error;\n\n//Fetch the data....\nNSFetchRequest *fetchRequest = [[NSFetchRequest alloc] init];\nNSEntityDescription *entity = [NSEntityDescription \n                               entityForName:entityDescription inManagedObjectContext:context];\n[fetchRequest setEntity:entity];\n\nNSSortDescriptor *groupDescription = [[NSSortDescriptor alloc]\n                                    initWithKey:GROUP_NAME ascending:YES];\n//Sort by Category Name\nNSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc]\n                                    initWithKey:sortField ascending:YES];\n\nNSMutableArray *sorts = [[[NSMutableArray alloc] init] autorelease];\n\n[sorts addObject:sortDescriptor];\n[sorts addObject:groupDescription];\n\n\n[fetchRequest setSortDescriptors:sorts];\n//[fetchRequest setResultType:NSDictionaryResultType];\n//[fetchRequest setPropertiesToGroupBy:[entity.propertiesByName valueForKey:CONTRACTOR_NAME];\n\n\nif (predicate != nil)\n  [fetchRequest setPredicate:predicate];\n\n\n//NSArray *fetchedObjects = [context executeFetchRequest:fetchRequest error:&error];\n\n//NSFetchResultsController\n\n[fetchRequest setFetchBatchSize:20];\n\nNSFetchedResultsController *fetchedResultsController = \n[[NSFetchedResultsController alloc] initWithFetchRequest:fetchRequest \n                                    managedObjectContext:context sectionNameKeyPath:GROUP_NAME \n                                               cacheName:nil]; //Don't use a cache\n [fetchRequest release];\n [sortDescriptor release];\n [groupDescription release];\n return fetchedResultsController; //You can't autorelease this thing... the requestor must  do that."
    },
    {
        "logs": "public class Impersonation : IDisposable\n{\n    private WindowsImpersonationContext _impersonatedUserContext;\n\n    // Declare signatures for Win32 LogonUser and CloseHandle APIs\n    [DllImport(\"advapi32.dll\", SetLastError = true)]\n    static extern bool LogonUser(\n      string principal,\n      string authority,\n      string password,\n      LogonSessionType logonType,\n      LogonProvider logonProvider,\n      out IntPtr token);\n\n    [DllImport(\"kernel32.dll\", SetLastError = true)]\n    static extern bool CloseHandle(IntPtr handle);\n\n    [DllImport(\"advapi32.dll\", CharSet = CharSet.Auto, SetLastError = true)]\n    static extern int DuplicateToken(IntPtr hToken,\n        int impersonationLevel,\n        ref IntPtr hNewToken);\n\n    [DllImport(\"advapi32.dll\", CharSet = CharSet.Auto, SetLastError = true)]\n    static extern bool RevertToSelf();\n\n    // ReSharper disable UnusedMember.Local\n    enum LogonSessionType : uint\n    {\n        Interactive = 2,\n        Network,\n        Batch,\n        Service,\n        NetworkCleartext = 8,\n        NewCredentials\n    }\n    // ReSharper disable InconsistentNaming\n    enum LogonProvider : uint\n    {\n        Default = 0, // default for platform (use this!)\n        WinNT35,     // sends smoke signals to authority\n        WinNT40,     // uses NTLM\n        WinNT50      // negotiates Kerb or NTLM\n    }\n    // ReSharper restore InconsistentNaming\n    // ReSharper restore UnusedMember.Local\n\n    /// <summary>\n    /// Class to allow running a segment of code under a given user login context\n    /// </summary>\n    /// <param name=\"user\">domain\\user</param>\n    /// <param name=\"password\">user's domain password</param>\n    public Impersonation(string user, string password)\n    {\n        var token = ValidateParametersAndGetFirstLoginToken(user, password);\n\n        var duplicateToken = IntPtr.Zero;\n        try\n        {\n            if (DuplicateToken(token, 2, ref duplicateToken) == 0)\n            {\n                throw new Exception(\"DuplicateToken call to reset permissions for this token failed\");\n            }\n\n            var identityForLoggedOnUser = new WindowsIdentity(duplicateToken);\n            _impersonatedUserContext = identityForLoggedOnUser.Impersonate();\n            if (_impersonatedUserContext == null)\n            {\n                throw new Exception(\"WindowsIdentity.Impersonate() failed\");\n            }\n        }\n        finally\n        {\n            if (token != IntPtr.Zero)\n                CloseHandle(token);\n            if (duplicateToken != IntPtr.Zero)\n                CloseHandle(duplicateToken);\n        }\n    }\n\n    private static IntPtr ValidateParametersAndGetFirstLoginToken(string user, string password)\n    {\n        if (string.IsNullOrEmpty(user))\n        {\n            throw new ConfigurationErrorsException(\"No user passed into impersonation class\");\n        }\n        var userHaves = user.Split('\\\\');\n        if (userHaves.Length != 2)\n        {\n            throw new ConfigurationErrorsException(\"User must be formatted as follows: domain\\\\user\");\n        }\n        if (!RevertToSelf())\n        {\n            throw new Exception(\"RevertToSelf call to remove any prior impersonations failed\");\n        }\n\n        IntPtr token;\n\n        var result = LogonUser(userHaves[1], userHaves[0],\n                               password,\n                               LogonSessionType.Interactive,\n                               LogonProvider.Default,\n                               out token);\n        if (!result)\n        {\n            throw new ConfigurationErrorsException(\"Logon for user \" + user + \" failed.\");\n        }\n        return token;\n    }\n\n    public void Dispose()\n    {\n        // Stop impersonation and revert to the process identity\n        if (_impersonatedUserContext != null)\n        {\n            _impersonatedUserContext.Undo();\n            _impersonatedUserContext = null;\n        }\n    }\n}"
    },
    {
        "logs": "public class Impersonation : IDisposable\n{\n    private WindowsImpersonationContext _impersonatedUserContext;\n\n    // Declare signatures for Win32 LogonUser and CloseHandle APIs\n    [DllImport(\"advapi32.dll\", SetLastError = true)]\n    static extern bool LogonUser(\n      string principal,\n      string authority,\n      string password,\n      LogonSessionType logonType,\n      LogonProvider logonProvider,\n      out IntPtr token);\n\n    [DllImport(\"kernel32.dll\", SetLastError = true)]\n    static extern bool CloseHandle(IntPtr handle);\n\n    [DllImport(\"advapi32.dll\", CharSet = CharSet.Auto, SetLastError = true)]\n    static extern int DuplicateToken(IntPtr hToken,\n        int impersonationLevel,\n        ref IntPtr hNewToken);\n\n    [DllImport(\"advapi32.dll\", CharSet = CharSet.Auto, SetLastError = true)]\n    static extern bool RevertToSelf();\n\n    // ReSharper disable UnusedMember.Local\n    enum LogonSessionType : uint\n    {\n        Interactive = 2,\n        Network,\n        Batch,\n        Service,\n        NetworkCleartext = 8,\n        NewCredentials\n    }\n    // ReSharper disable InconsistentNaming\n    enum LogonProvider : uint\n    {\n        Default = 0, // default for platform (use this!)\n        WinNT35,     // sends smoke signals to authority\n        WinNT40,     // uses NTLM\n        WinNT50      // negotiates Kerb or NTLM\n    }\n    // ReSharper restore InconsistentNaming\n    // ReSharper restore UnusedMember.Local\n\n    /// <summary>\n    /// Class to allow running a segment of code under a given user login context\n    /// </summary>\n    /// <param name=\"user\">domain\\user</param>\n    /// <param name=\"password\">user's domain password</param>\n    public Impersonation(string user, string password)\n    {\n        var token = ValidateParametersAndGetFirstLoginToken(user, password);\n\n        var duplicateToken = IntPtr.Zero;\n        try\n        {\n            if (DuplicateToken(token, 2, ref duplicateToken) == 0)\n            {\n                throw new Exception(\"DuplicateToken call to reset permissions for this token failed\");\n            }\n\n            var identityForLoggedOnUser = new WindowsIdentity(duplicateToken);\n            _impersonatedUserContext = identityForLoggedOnUser.Impersonate();\n            if (_impersonatedUserContext == null)\n            {\n                throw new Exception(\"WindowsIdentity.Impersonate() failed\");\n            }\n        }\n        finally\n        {\n            if (token != IntPtr.Zero)\n                CloseHandle(token);\n            if (duplicateToken != IntPtr.Zero)\n                CloseHandle(duplicateToken);\n        }\n    }\n\n    private static IntPtr ValidateParametersAndGetFirstLoginToken(string user, string password)\n    {\n        if (string.IsNullOrEmpty(user))\n        {\n            throw new ConfigurationErrorsException(\"No user passed into impersonation class\");\n        }\n        var userHaves = user.Split('\\\\');\n        if (userHaves.Length != 2)\n        {\n            throw new ConfigurationErrorsException(\"User must be formatted as follows: domain\\\\user\");\n        }\n        if (!RevertToSelf())\n        {\n            throw new Exception(\"RevertToSelf call to remove any prior impersonations failed\");\n        }\n\n        IntPtr token;\n\n        var result = LogonUser(userHaves[1], userHaves[0],\n                               password,\n                               LogonSessionType.Interactive,\n                               LogonProvider.Default,\n                               out token);\n        if (!result)\n        {\n            throw new ConfigurationErrorsException(\"Logon for user \" + user + \" failed.\");\n        }\n        return token;\n    }\n\n    public void Dispose()\n    {\n        // Stop impersonation and revert to the process identity\n        if (_impersonatedUserContext != null)\n        {\n            _impersonatedUserContext.Undo();\n            _impersonatedUserContext = null;\n        }\n    }\n}"
    },
    {
        "logs": "$(function() {\n      $('.toggle-family').change(function() {\n         if ($(this).attr('checked')) {\n             $('.member-selection').removeClass('hide');\n         } else {\n             $('.member-selection').addClass('hide');\n         }\n      });\n });"
    },
    {
        "logs": "from cstr\nfrom dstr\n1\nfrom dstr\nbind_copy(73365) malloc: *** error for object 0x1001b0: double free\n*** set a breakpoint in malloc_error_break to debug\nfrom dstr\nbind_copy(73365) malloc: *** error for object 0x1001b0: double free\n*** set a breakpoint in malloc_error_break to debug\n2\nfrom dstr\nbind_copy(73365) malloc: *** error for object 0x1001b0: double free\n*** set a breakpoint in malloc_error_break to debug"
    },
    {
        "logs": "from cstr\nfrom dstr\n1\nfrom dstr\nbind_copy(73365) malloc: *** error for object 0x1001b0: double free\n*** set a breakpoint in malloc_error_break to debug\nfrom dstr\nbind_copy(73365) malloc: *** error for object 0x1001b0: double free\n*** set a breakpoint in malloc_error_break to debug\n2\nfrom dstr\nbind_copy(73365) malloc: *** error for object 0x1001b0: double free\n*** set a breakpoint in malloc_error_break to debug"
    },
    {
        "logs": "public class ShowAnim extends Animation {\n    int targetHeight;\n    View view;\n\n    public ShowAnim(View view, int targetHeight) {\n        this.view = view;\n        this.targetHeight = targetHeight;\n    }\n\n    @Override\n    protected void applyTransformation(float interpolatedTime, Transformation t) {\n        view.getLayoutParams().height = (int) (targetHeight * interpolatedTime);\n        view.requestLayout();\n    }\n\n    @Override\n    public void initialize(int width, int height, int parentWidth,\n            int parentHeight) {\n        super.initialize(width, height, parentWidth, parentHeight);\n    }\n\n    @Override\n    public boolean willChangeBounds() {\n        return true;\n    }\n}"
    },
    {
        "logs": "public class ShowAnim extends Animation {\n    int targetHeight;\n    View view;\n\n    public ShowAnim(View view, int targetHeight) {\n        this.view = view;\n        this.targetHeight = targetHeight;\n    }\n\n    @Override\n    protected void applyTransformation(float interpolatedTime, Transformation t) {\n        view.getLayoutParams().height = (int) (targetHeight * interpolatedTime);\n        view.requestLayout();\n    }\n\n    @Override\n    public void initialize(int width, int height, int parentWidth,\n            int parentHeight) {\n        super.initialize(width, height, parentWidth, parentHeight);\n    }\n\n    @Override\n    public boolean willChangeBounds() {\n        return true;\n    }\n}"
    },
    {
        "logs": "// Specific settings for the audio recording\nNSDictionary *recordSettings = [NSDictionary dictionaryWithObjectsAndKeys:\n    [NSNumber numberWithInt:AVAudioQualityMin],\n    AVEncoderAudioQualityKey,\n    [NSNumber numberWithInt:8], \n    AVEncoderBitRateKey,\n    [NSNumber numberWithInt: 2], \n    AVNumberOfChannelsKey,\n    [NSNumber numberWithFloat:22000.0], \n    AVSampleRateKey,\n    nil];\n\nNSError *error = nil;\naudioRecorder = [[AVAudioRecorder alloc]\n    initWithURL:contentURL\n    settings:recordSettings\n    error:&error];\naudioRecorder.delegate = self;"
    },
    {
        "logs": "- (void)addPin:(UILongPressGestureRecognizer*)recognizer { \n    if(UIGestureRecognizerStateBegan == recognizer.state) {\n\n\n        CGPoint tappedPoint = [recognizer locationInView:mapView];\n\n        CLLocationCoordinate2D locCoord= [mapView convertPoint:tappedPoint toCoordinateFromView:mapView];\n\n\n        MKPointAnnotation *annot = [[MKPointAnnotation alloc] init];\n        annot.coordinate = locCoord;\n        [self.mapView addAnnotation:annot];\n\n    }\n\n    if(UIGestureRecognizerStateChanged == recognizer.state) {\n        // Do repeated work here (repeats continuously) while finger is down\n    }\n\n    if(UIGestureRecognizerStateEnded == recognizer.state) {\n        // Do end work here when finger is lifted\n    }\n}"
    },
    {
        "logs": "- (void)addPin:(UILongPressGestureRecognizer*)recognizer { \n    if(UIGestureRecognizerStateBegan == recognizer.state) {\n\n\n        CGPoint tappedPoint = [recognizer locationInView:mapView];\n\n        CLLocationCoordinate2D locCoord= [mapView convertPoint:tappedPoint toCoordinateFromView:mapView];\n\n\n        MKPointAnnotation *annot = [[MKPointAnnotation alloc] init];\n        annot.coordinate = locCoord;\n        [self.mapView addAnnotation:annot];\n\n    }\n\n    if(UIGestureRecognizerStateChanged == recognizer.state) {\n        // Do repeated work here (repeats continuously) while finger is down\n    }\n\n    if(UIGestureRecognizerStateEnded == recognizer.state) {\n        // Do end work here when finger is lifted\n    }\n}"
    },
    {
        "logs": "ExchangeWebServiceClient client = new ExchangeWebServiceClient(\"https://exchange-server-host/ews/Exchange.asmx\", \"username\", \"password\", \"domain\");"
    },
    {
        "logs": "ExchangeWebServiceClient client = new ExchangeWebServiceClient(\"https://exchange-server-host/ews/Exchange.asmx\", \"username\", \"password\", \"domain\");"
    },
    {
        "logs": "$response = array(\n    'status' => 0,\n    'results' => 'something good ...',\n    'errors' => 'error message if status is -1'\n);\necho json_encode($response);"
    },
    {
        "logs": "public function loginCheck()\n    { \n\n       // set the validation rules\n        $this->form_validation->set_rules('username', 'Username', 'required|trim|encode_php_tags');\n        $this->form_validation->set_rules('password', 'Password', 'required|trim|encode_php_tags');\n        $this->form_validation->set_error_delimiters('<br /><p class=jsdiserr>', '</p><br />');\n        if ($this->form_validation->run() != FALSE) \n        {\n\n            $ids=array();\n            $ids[0]=$this->db->where('username', $this->input->post('username'));\n            $ids[1] = $this->db->where('password', md5($this->input->post('password')));\n            $query = $this->backOfficeUsersModel->get();\n\n            if($query)\n                {\n                    $data = array(\n                    'username'       => $this->input->post('username'),\n                    'isUserLoggedIn' => true\n                    ); \n                $isAuthenticated = true;\n                if ($isAuthenticated) {\n                 $return['status']  = true;\n                $return['message'] = 'You have successfully been logged in!'; \n                exit(json_encode($return)); \n                 $this->session->set_userdata($data);\n                $data['title'] = \"Welcome to dashboard!\";\n                $data['main_content'] = 'dashboard';\n                $this->load->vars($data);\n                $this->load->view('backOffice/template');\n\n\n                }\n\n        } else {   \n\n                $return = array(\n                'status'  => false,\n                'message' => 'Wrong Username or Password'\n                );\n                 exit(json_encode($return));\n\n        }\n        } else {\n\n             $errorMessage = \"Second Message Wrong username or pwd...!\";\n             $errorMessage = json_encode($errorMessage);\n\n        }\n\n\n\n    } // end of function loginCheck"
    },
    {
        "logs": "public function loginCheck()\n    { \n\n       // set the validation rules\n        $this->form_validation->set_rules('username', 'Username', 'required|trim|encode_php_tags');\n        $this->form_validation->set_rules('password', 'Password', 'required|trim|encode_php_tags');\n        $this->form_validation->set_error_delimiters('<br /><p class=jsdiserr>', '</p><br />');\n        if ($this->form_validation->run() != FALSE) \n        {\n\n            $ids=array();\n            $ids[0]=$this->db->where('username', $this->input->post('username'));\n            $ids[1] = $this->db->where('password', md5($this->input->post('password')));\n            $query = $this->backOfficeUsersModel->get();\n\n            if($query)\n                {\n                    $data = array(\n                    'username'       => $this->input->post('username'),\n                    'isUserLoggedIn' => true\n                    );\n\n\n                $this->session->set_userdata($data);\n                echo json_encode(array(\"success\" => true));\n                $data['title'] = \"Welcome to dashboard!\";\n                $data['main_content'] = 'dashboard';\n                $this->load->vars($data);\n                $this->load->view('backOffice/template');\n\n\n        } else {   \n\n                echo json_encode(array(\"success\" => false, \"error\" => \"Wrong credentials\"));\n\n        }\n        } else {\n\n             $errorMessage = \"Second Message Wrong username or pwd...!\";\n             $errorMessage = json_encode($errorMessage);\n\n        }\n\n\n\n    } // end of function loginCheck"
    },
    {
        "logs": "$(\"#formLogin\").submit(function(e){\n        e.preventDefault();\n        var username = $(this).find(\"#username\").val();\n        var password = $(this).find(\"#password\").val();\n        var obj = {username: username, password: password};\n        var url = $(this).attr(\"action\");\n        $.post(url, obj, function(r){\n            if(r.success) window.location.replace('http://www.linkedin.com');\n            else  $('#errorMessageTop').fadeIn();\n        }, 'json');\n    })"
    },
    {
        "logs": "public function loginCheck()\n    { \n\n       // set the validation rules\n        $this->form_validation->set_rules('username', 'Username', 'required|trim|encode_php_tags');\n        $this->form_validation->set_rules('password', 'Password', 'required|trim|encode_php_tags');\n        $this->form_validation->set_error_delimiters('<br /><p class=jsdiserr>', '</p><br />');\n        if ($this->form_validation->run() != FALSE) \n        {\n\n            $ids=array();\n            $ids[0]=$this->db->where('username', $this->input->post('username'));\n            $ids[1] = $this->db->where('password', md5($this->input->post('password')));\n            $query = $this->backOfficeUsersModel->get();\n\n            if($query)\n                {\n                    $data = array(\n                    'username'       => $this->input->post('username'),\n                    'isUserLoggedIn' => true\n                    ); \n                $isAuthenticated = true;\n                if ($isAuthenticated) {\n                 $return['status']  = true;\n                $return['message'] = 'You have successfully been logged in!'; \n                exit(json_encode($return)); \n                 $this->session->set_userdata($data);\n                $data['title'] = \"Welcome to dashboard!\";\n                $data['main_content'] = 'dashboard';\n                $this->load->vars($data);\n                $this->load->view('backOffice/template');\n\n\n                }\n\n        } else {   \n\n                $return = array(\n                'status'  => false,\n                'message' => 'Wrong Username or Password'\n                );\n                 exit(json_encode($return));\n\n        }\n        } else {\n\n             $errorMessage = \"Second Message Wrong username or pwd...!\";\n             $errorMessage = json_encode($errorMessage);\n\n        }\n\n\n\n    } // end of function loginCheck"
    },
    {
        "logs": "public function loginCheck()\n    { \n\n       // set the validation rules\n        $this->form_validation->set_rules('username', 'Username', 'required|trim|encode_php_tags');\n        $this->form_validation->set_rules('password', 'Password', 'required|trim|encode_php_tags');\n        $this->form_validation->set_error_delimiters('<br /><p class=jsdiserr>', '</p><br />');\n        if ($this->form_validation->run() != FALSE) \n        {\n\n            $ids=array();\n            $ids[0]=$this->db->where('username', $this->input->post('username'));\n            $ids[1] = $this->db->where('password', md5($this->input->post('password')));\n            $query = $this->backOfficeUsersModel->get();\n\n            if($query)\n                {\n                    $data = array(\n                    'username'       => $this->input->post('username'),\n                    'isUserLoggedIn' => true\n                    );\n\n\n                $this->session->set_userdata($data);\n                echo json_encode(array(\"success\" => true));\n                $data['title'] = \"Welcome to dashboard!\";\n                $data['main_content'] = 'dashboard';\n                $this->load->vars($data);\n                $this->load->view('backOffice/template');\n\n\n        } else {   \n\n                echo json_encode(array(\"success\" => false, \"error\" => \"Wrong credentials\"));\n\n        }\n        } else {\n\n             $errorMessage = \"Second Message Wrong username or pwd...!\";\n             $errorMessage = json_encode($errorMessage);\n\n        }\n\n\n\n    } // end of function loginCheck"
    },
    {
        "logs": "var params = $('#hiddenInputId').serialize();\n$.post('post.php', params, function(data){\n                if(data.match(/^[\\r\\n\\s]*OK=/)) {\n                    $('#listOut').html(data.slice(data.indexOf('OK=') + 3));\n                } \n                else if(data.match(/^[\\r\\n\\s]*ERRORS=/)) {\n                    alert(data.slice(data.indexOf('ERRORS=') + 7));\n                }\n});"
    },
    {
        "logs": "var params = $('#hiddenInputId').serialize();\n$.post('post.php', params, function(data){\n                if(data.match(/^[\\r\\n\\s]*OK=/)) {\n                    $('#listOut').html(data.slice(data.indexOf('OK=') + 3));\n                } \n                else if(data.match(/^[\\r\\n\\s]*ERRORS=/)) {\n                    alert(data.slice(data.indexOf('ERRORS=') + 7));\n                }\n});"
    },
    {
        "logs": "ObjectOutputStream out=new ObjectOutputStream(new ByteArrayOutputStream());\n    out.writeObject(ss3); \n    ss3.writeExternal(out);\n    try{\n         ByteInputStream bi=new ByteInputStream();\n         bi.setBuf(bb);\n         out.write(bb);\n         ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bb));\n         String s1=(String) in.readObject();\n        }\n        catch(Exception e){\n            e.printStackTrace();\n        }"
    },
    {
        "logs": "ObjectOutputStream out=new ObjectOutputStream(new ByteArrayOutputStream());\n    out.writeObject(ss3); \n    ss3.writeExternal(out);\n    try{\n         ByteInputStream bi=new ByteInputStream();\n         bi.setBuf(bb);\n         out.write(bb);\n         ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bb));\n         String s1=(String) in.readObject();\n        }\n        catch(Exception e){\n            e.printStackTrace();\n        }"
    },
    {
        "logs": "public class FlashResults extends Activity {\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        TextView tv = new TextView(this);\n        setContentView(tv);\n        readWebpage(tv);\n    }\n\n    public void readWebpage(View v) {\n        DownloadPage task = new DownloadPage(tv);\n        task.execute(new String[] { \"http://seznam.cz\" });\n    }\n\n    private static class DownloadPage extends AsyncTask<String, Void, String> {\n\n        private TextView textView;\n        public DownloadPage(TextView tv){\n            textView = tv;\n        }\n\n        protected String doInBackground(String... urls) {\n\n         String responseStr = null;\n\n          try {\n              for (String url : urls) {   \n              DefaultHttpClient httpClient = new DefaultHttpClient();\n              HttpGet get = new HttpGet(url);\n              HttpResponse httpResponse = httpClient.execute(get);\n              HttpEntity httpEntity = httpResponse.getEntity();\n              responseStr = EntityUtils.toString(httpEntity);\n              } \n          } catch (UnsupportedEncodingException e) {\n\n          } catch (ClientProtocolException e) {\n\n          } catch (IOException e) {\n\n          }\n            return responseStr;\n        }\n\n        protected void onPostExecute(String result) {           \n            if (textView != null) {\n                textView.setText(result);\n            }\n        }\n    }\n}"
    },
    {
        "logs": "function changepassword() {\n$this->db->select('id');\n$this->db->where('username', $this->session->userdata('username'));\n$this->db->where('password', $this->input->post('OldPassword'));\n$query = $this->db->get('mau_user');\nif ($query->num_rows() > 0) {\n    $row = $query->row();\n    if ($row->id === $this->session->userdata('id')) {\n        $data = array(\n            'password' => $this->input->post('password')\n        );\n        $this->db->where('username', $this->session->userdata('username'));\n        $this->db->where('password', $this->input->post('OldPassword'));\n        if ($this->db->update('mau_user', $data)) {\n            return \"Password Changed Successfully\";"
    },
    {
        "logs": "function changepassword() {\n$this->db->select('id');\n$this->db->where('username', $this->session->userdata('username'));\n$this->db->where('password', $this->input->post('OldPassword'));\n$query = $this->db->get('mau_user');\nif ($query->num_rows() > 0) {\n    $row = $query->row();\n    if ($row->id === $this->session->userdata('id')) {\n        $data = array(\n            'password' => $this->input->post('password')\n        );\n        $this->db->where('username', $this->session->userdata('username'));\n        $this->db->where('password', $this->input->post('OldPassword'));\n        if ($this->db->update('mau_user', $data)) {\n            return \"Password Changed Successfully\";"
    },
    {
        "logs": "function send_command_to_network(net, command) {\n    $.ajax({url: \"/networks/\" + net + \"/send?command=\" + command,\n    type: \"GET\",\n    async: true,\n    dataType: \"json\",\n    success: function(json_response) { \n         var err = json_response['error'];\n     if (err) {\n       show_alert('error', err);\n       return;\n     }\n     var success = json_response['success'];\n     if (success) {\n       show_alert('success', success);\n       return;\n     }\n     show_alert('alert', \"This should not happen!\");\n       }\n     }); \n   }"
    },
    {
        "logs": "function send_command_to_network(net, command) {\n    $.ajax({url: \"/networks/\" + net + \"/send?command=\" + command,\n    type: \"GET\",\n    async: true,\n    dataType: \"json\",\n    success: function(json_response) { \n         var err = json_response['error'];\n     if (err) {\n       show_alert('error', err);\n       return;\n     }\n     var success = json_response['success'];\n     if (success) {\n       show_alert('success', success);\n       return;\n     }\n     show_alert('alert', \"This should not happen!\");\n       }\n     }); \n   }"
    },
    {
        "logs": "01-29 12:30:40.805: I/BillingService(18895): Received action: com.android.vending.billing.RESPONSE_CODE\n01-29 12:30:40.805: I/BillingService(18895): checkResponseCode got requestId: 8646305544958370499\n01-29 12:30:40.805: I/BillingService(18895): checkResponseCode got responseCode: RESULT_OK\n01-29 12:30:40.805: I/BillingService(18895): Received action: com.android.vending.billing.PURCHASE_STATE_CHANGED\n\n01-29 12:30:41.155: I/BillingService(18895): Received action: com.android.vending.billing.RESPONSE_CODE\n01-29 12:30:41.155: I/BillingService(18895): checkResponseCode got requestId: 2207507822000358335\n01-29 12:30:41.155: I/BillingService(18895): checkResponseCode got responseCode: RESULT_OK"
    },
    {
        "logs": "$.ajax({type: \"GET\",async: false, cache: false, url: \"example.xml\",dataType: \"xml\",success: parseXml,  error: function(xhr, status, error) {alert(error)}});"
    },
    {
        "logs": "$.ajax({type: \"GET\",async: false, cache: false, url: \"example.xml\",dataType: \"xml\",success: parseXml,  error: function(xhr, status, error) {alert(error)}});"
    },
    {
        "logs": "private void BackgroundWorker1DoWork(object sender, DoWorkEventArgs e)\n{\n    SetDateStartEndTimeForReport();\n\n    try\n    {\n            PopulateGrid();\n\n    }\n    catch (Exception ex)\n    {\n            Logger.Error(ex.Message);\n            MessageBox.Show(ex.Message);\n            return;\n    }\n}"
    },
    {
        "logs": "private void BackgroundWorker1DoWork(object sender, DoWorkEventArgs e)\n{\n    SetDateStartEndTimeForReport();\n\n    try\n    {\n            PopulateGrid();\n\n    }\n    catch (Exception ex)\n    {\n            Logger.Error(ex.Message);\n            MessageBox.Show(ex.Message);\n            return;\n    }\n}"
    },
    {
        "logs": "Mode=TEST&CreateSecureToken=Y&SecureTokenID=1508D489FD8F4A0BB47CA541D7191427&User=########&Vendor=#######&Partner=PayPal&Pwd=#######&TrxType=S&Tender=C&FirstName=Test&LastName=User&Address=101 N. Wacker Dr.&City=Chicago&State=IL&Zip=60606&Country=US&Phone=312-000-0000&Email=test.user@testdomain.com&Amt=160.00&Currency=USD&User1=276&User2=C161168&Comment1=Tampa Spring Regional Training Event&Comment2=Current User PersonID: 690399, Effective Current User PersonID: 690399&CancelURL=http://localhost:5527/PaymentQueue/Registration/ProcessPayPalCancel&CSCRequired=True&CSCEdit=True&DisableReceipt=True&Template=TEMPLATEA&ErrorURL=http://localhost:5527/PaymentQueue/Registration/PaymentError&ReturnURL=http://localhost:5527/PaymentQueue/Registration/ProcessPayPalResponse&URLMethod=POST"
    },
    {
        "logs": "- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex\n{\nNSString *title = [alertView buttonTitleAtIndex:buttonIndex];\nif([title isEqualToString:@\"OK\"])\n{\n    //delete record from database...\n    NSEntityDescription *entityDesc = [NSEntityDescription entityForName:@\"Parameters\" inManagedObjectContext:context];\n    NSFetchRequest *request = [[NSFetchRequest alloc] init];\n    [request setEntity:entityDesc];\n\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"name like %@\", parameters.name];\n    [request setPredicate:predicate];\n\n    NSError *error;\n    NSArray *matchingData = [context executeFetchRequest:request error:&error];\n\n    for (NSManagedObject *obj in matchingData) {\n        [context deleteObject:obj];\n\n    }\n    [self dismissViewControllerAnimated:YES completion:nil];\n}\n\nelse if([title isEqualToString:@\"Cancel\"])\n{\n\n}\n}"
    },
    {
        "logs": "- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex\n{\nNSString *title = [alertView buttonTitleAtIndex:buttonIndex];\nif([title isEqualToString:@\"OK\"])\n{\n    //delete record from database...\n    NSEntityDescription *entityDesc = [NSEntityDescription entityForName:@\"Parameters\" inManagedObjectContext:context];\n    NSFetchRequest *request = [[NSFetchRequest alloc] init];\n    [request setEntity:entityDesc];\n\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"name like %@\", parameters.name];\n    [request setPredicate:predicate];\n\n    NSError *error;\n    NSArray *matchingData = [context executeFetchRequest:request error:&error];\n\n    for (NSManagedObject *obj in matchingData) {\n        [context deleteObject:obj];\n\n    }\n    [self dismissViewControllerAnimated:YES completion:nil];\n}\n\nelse if([title isEqualToString:@\"Cancel\"])\n{\n\n}\n}"
    },
    {
        "logs": "Ext.override(Ext.util.Scroller.Indicator, {\n    hide: function() {\n        var me = this;\n        if (this.hideTimer) {\n            clearTimeout(this.hideTimer);\n        }\n        return this;\n    }\n});"
    },
    {
        "logs": "Ext.override(Ext.util.Scroller.Indicator, {\n    hide: function() {\n        var me = this;\n        if (this.hideTimer) {\n            clearTimeout(this.hideTimer);\n        }\n        return this;\n    }\n});"
    },
    {
        "logs": "success: function(data) {\n    var obj = $.parseJSON(data.d);\n    var dt = new Date(obj.signupDate);\n    console.log(obj.signupDate); //Firefox & Chrome: 2011-01-29 02:21:02Z\n    console.log(dt); //Firefox: Invalid Date Chrome: Fri Jan 28 2011 18:21:02 GMT-0800 (Pacific Standard Time) \n    console.log(dt.toUTCString()); //Firefox: Invalid Date Chrome: 1/28/2011 6:21:02 PM \n}"
    },
    {
        "logs": "public class MainActivity extends SherlockFragmentActivity  {\n\n\n    //Declare Variables\n    //...\n     Fragment fragment1 = new Fragment1();\n     Fragment fragment2 = new Fragment2();\n     Fragment fragment3 = new Fragment3();\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        getSupportActionBar().setIcon(R.drawable.ic_launcher);\n        getSupportActionBar().setTitle(\"\");          \n        setContentView(R.layout.drawer_main);\n\n\n        // Generate title\n        title = new String[] { \"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\" };\n\n        // Generate icon\n        icon = new int[] { R.drawable.item1, R.drawable.item2,\n                R.drawable.item3, R.drawable.item4};\n\n        // Locate DrawerLayout in drawer_main.xml\n        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);\n\n        // Locate ListView in drawer_main.xml\n        mDrawerList = (ListView) findViewById(R.id.left_drawer);\n\n        // Set a custom shadow that overlays the main content when the drawer\n        // opens\n        mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow,\n                GravityCompat.START);\n\n        // Pass results to MenuListAdapter Class\n        mMenuAdapter = new MenuListAdapter(this, title, subtitle, icon);\n\n        // Set the MenuListAdapter to the ListView\n        mDrawerList.setAdapter(mMenuAdapter);\n\n        // Capture button clicks on side menu\n        mDrawerList.setOnItemClickListener(new DrawerItemClickListener());\n\n        // Enable ActionBar app icon to behave as action to toggle nav drawer\n        getSupportActionBar().setHomeButtonEnabled(true);\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\n        // ActionBarDrawerToggle ties together the the proper interactions\n        // between the sliding drawer and the action bar app icon\n        mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout,\n                R.drawable.ic_drawer, R.string.drawer_open,\n                R.string.drawer_close) {\n\n            public void onDrawerClosed(View view) {\n                // TODO Auto-generated method stub\n                super.onDrawerClosed(view);\n            }\n\n            public void onDrawerOpened(View drawerView) {\n                // TODO Auto-generated method stub\n                super.onDrawerOpened(drawerView);\n            }\n        };\n\n        mDrawerLayout.setDrawerListener(mDrawerToggle);\n\n        if (savedInstanceState == null) {\n            selectItem(0);\n        }\n\n\n\n    }\n\n\n    //FOR ABS y ND\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getSupportMenuInflater().inflate(R.menu.activity_main, menu);\n      //Define ActionBar buttons and actions \n\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        //Sliding lateral Menu\n        if (item.getItemId() == android.R.id.home) {\n\n            if (mDrawerLayout.isDrawerOpen(mDrawerList)) {\n                mDrawerLayout.closeDrawer(mDrawerList);\n            } else {\n                mDrawerLayout.openDrawer(mDrawerList);\n            }\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    // The click listener for ListView in the navigation drawer\n    private class DrawerItemClickListener implements\n            ListView.OnItemClickListener {\n        @Override\n        public void onItemClick(AdapterView<?> parent, View view, int position,\n                long id) {\n            selectItem(position);\n        }\n    }\n\n    private void selectItem(int position) {\n\n        FragmentTransaction ft = getSupportFragmentManager().beginTransaction();\n        // Locate Position\n        switch (position) {\n        case 0:\n            ft.replace(R.id.content_frame, fragment1);\n            break;\n        case 1:\n            ft.replace(R.id.content_frame, fragment2);\n            break;\n        case 2:\n            ft.replace(R.id.content_frame, fragment3);\n            break;\n        }\n        ft.commit();\n        mDrawerList.setItemChecked(position, true);\n        // Close drawer\n        mDrawerLayout.closeDrawer(mDrawerList);\n    }\n\n    @Override\n    protected void onPostCreate(Bundle savedInstanceState) {\n        super.onPostCreate(savedInstanceState);\n        // Sync the toggle state after onRestoreInstanceState has occurred.\n        mDrawerToggle.syncState();\n    }\n\n    @Override\n    public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        // Pass any configuration change to the drawer toggles\n        mDrawerToggle.onConfigurationChanged(newConfig);\n    }\n\n}"
    },
    {
        "logs": "public class MainActivity extends SherlockFragmentActivity  {\n\n\n    //Declare Variables\n    //...\n     Fragment fragment1 = new Fragment1();\n     Fragment fragment2 = new Fragment2();\n     Fragment fragment3 = new Fragment3();\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        getSupportActionBar().setIcon(R.drawable.ic_launcher);\n        getSupportActionBar().setTitle(\"\");          \n        setContentView(R.layout.drawer_main);\n\n\n        // Generate title\n        title = new String[] { \"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\" };\n\n        // Generate icon\n        icon = new int[] { R.drawable.item1, R.drawable.item2,\n                R.drawable.item3, R.drawable.item4};\n\n        // Locate DrawerLayout in drawer_main.xml\n        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);\n\n        // Locate ListView in drawer_main.xml\n        mDrawerList = (ListView) findViewById(R.id.left_drawer);\n\n        // Set a custom shadow that overlays the main content when the drawer\n        // opens\n        mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow,\n                GravityCompat.START);\n\n        // Pass results to MenuListAdapter Class\n        mMenuAdapter = new MenuListAdapter(this, title, subtitle, icon);\n\n        // Set the MenuListAdapter to the ListView\n        mDrawerList.setAdapter(mMenuAdapter);\n\n        // Capture button clicks on side menu\n        mDrawerList.setOnItemClickListener(new DrawerItemClickListener());\n\n        // Enable ActionBar app icon to behave as action to toggle nav drawer\n        getSupportActionBar().setHomeButtonEnabled(true);\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\n        // ActionBarDrawerToggle ties together the the proper interactions\n        // between the sliding drawer and the action bar app icon\n        mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout,\n                R.drawable.ic_drawer, R.string.drawer_open,\n                R.string.drawer_close) {\n\n            public void onDrawerClosed(View view) {\n                // TODO Auto-generated method stub\n                super.onDrawerClosed(view);\n            }\n\n            public void onDrawerOpened(View drawerView) {\n                // TODO Auto-generated method stub\n                super.onDrawerOpened(drawerView);\n            }\n        };\n\n        mDrawerLayout.setDrawerListener(mDrawerToggle);\n\n        if (savedInstanceState == null) {\n            selectItem(0);\n        }\n\n\n\n    }\n\n\n    //FOR ABS y ND\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getSupportMenuInflater().inflate(R.menu.activity_main, menu);\n      //Define ActionBar buttons and actions \n\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        //Sliding lateral Menu\n        if (item.getItemId() == android.R.id.home) {\n\n            if (mDrawerLayout.isDrawerOpen(mDrawerList)) {\n                mDrawerLayout.closeDrawer(mDrawerList);\n            } else {\n                mDrawerLayout.openDrawer(mDrawerList);\n            }\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    // The click listener for ListView in the navigation drawer\n    private class DrawerItemClickListener implements\n            ListView.OnItemClickListener {\n        @Override\n        public void onItemClick(AdapterView<?> parent, View view, int position,\n                long id) {\n            selectItem(position);\n        }\n    }\n\n    private void selectItem(int position) {\n\n        FragmentTransaction ft = getSupportFragmentManager().beginTransaction();\n        // Locate Position\n        switch (position) {\n        case 0:\n            ft.replace(R.id.content_frame, fragment1);\n            break;\n        case 1:\n            ft.replace(R.id.content_frame, fragment2);\n            break;\n        case 2:\n            ft.replace(R.id.content_frame, fragment3);\n            break;\n        }\n        ft.commit();\n        mDrawerList.setItemChecked(position, true);\n        // Close drawer\n        mDrawerLayout.closeDrawer(mDrawerList);\n    }\n\n    @Override\n    protected void onPostCreate(Bundle savedInstanceState) {\n        super.onPostCreate(savedInstanceState);\n        // Sync the toggle state after onRestoreInstanceState has occurred.\n        mDrawerToggle.syncState();\n    }\n\n    @Override\n    public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        // Pass any configuration change to the drawer toggles\n        mDrawerToggle.onConfigurationChanged(newConfig);\n    }\n\n}"
    },
    {
        "logs": "public List<Products> listOfProducts(String JSONString)\n  throws JsonParseException, JsonMappingException, IOException {\nbyte[] latin1 = JSONString.getBytes(\"ISO-8859-1\");\nString fromUtf8Bytes = new String(latin1);\nObjectMapper mapper = new ObjectMapper();\nProducts[] productsArray = mapper.readValue(fromUtf8Bytes,\n    Products[].class);\n\nList<Products> productsList= Arrays.asList(productsArray);\n\nreturn productsList;"
    },
    {
        "logs": "public List<Products> listOfProducts(String JSONString)\n  throws JsonParseException, JsonMappingException, IOException {\nbyte[] latin1 = JSONString.getBytes(\"ISO-8859-1\");\nString fromUtf8Bytes = new String(latin1);\nObjectMapper mapper = new ObjectMapper();\nProducts[] productsArray = mapper.readValue(fromUtf8Bytes,\n    Products[].class);\n\nList<Products> productsList= Arrays.asList(productsArray);\n\nreturn productsList;"
    },
    {
        "logs": "package com.example.aesalg;\n\nimport java.security.MessageDigest;\nimport java.security.spec.AlgorithmParameterSpec;\n\nimport javax.crypto.Cipher;\nimport javax.crypto.spec.IvParameterSpec;\nimport javax.crypto.spec.SecretKeySpec;\n\nimport android.util.Base64;\n\npublic class AESCrypt {\n\nprivate final Cipher cipher;\nprivate final SecretKeySpec key;\nprivate AlgorithmParameterSpec spec;\n\n\npublic AESCrypt(String password) throws Exception\n{\n    // hash password with SHA-256 and crop the output to 128-bit for key\n    MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n    digest.update(password.getBytes(\"UTF-8\"));\n    byte[] keyBytes = new byte[32];\n    System.arraycopy(digest.digest(), 0, keyBytes, 0, keyBytes.length);\n\n    cipher = Cipher.getInstance(\"AES/CBC/PKCS7Padding\");\n    key = new SecretKeySpec(keyBytes, \"AES\");\n    spec = getIV();\n}       \n\npublic AlgorithmParameterSpec getIV()\n{\n    byte[] iv = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, };\n    IvParameterSpec ivParameterSpec;\n    ivParameterSpec = new IvParameterSpec(iv);\n\n    return ivParameterSpec;\n}\n\npublic String encrypt(String plainText) throws Exception\n{\n    cipher.init(Cipher.ENCRYPT_MODE, key, spec);\n    byte[] encrypted = cipher.doFinal(plainText.getBytes(\"UTF-8\"));\n    String encryptedText = new String(Base64.encode(encrypted, Base64.DEFAULT), \"UTF-8\");\n    System.out.println(\"Encrypt Data\"+ encryptedText);\n    return encryptedText;\n}\n\npublic String decrypt(String cryptedText) throws Exception\n{\n    cipher.init(Cipher.DECRYPT_MODE, key, spec);\n    byte[] bytes = Base64.decode(cryptedText, Base64.DEFAULT);\n    byte[] decrypted = cipher.doFinal(bytes);\n    String decryptedText = new String(decrypted, \"UTF-8\");\n    System.out.println(\"Encrypt Data\"+ decryptedText);\n    return decryptedText;\n}\n}"
    },
    {
        "logs": "$scope.newGrid = gridService.gridSetup();\n$scope.copyGrid = angular.copy($scope.newGrid);\n\n\n$timeout(function() {\n   $scope.copyGrid.pageType = \"Fess\"; \n    gridService.setGridSetup($scope.copyGrid);   \n     $scope.newGrid = gridService.gridSetup();\n}, 3000);"
    },
    {
        "logs": "$scope.newGrid = gridService.gridSetup();\n$scope.copyGrid = angular.copy($scope.newGrid);\n\n\n$timeout(function() {\n   $scope.copyGrid.pageType = \"Fess\"; \n    gridService.setGridSetup($scope.copyGrid);   \n     $scope.newGrid = gridService.gridSetup();\n}, 3000);"
    },
    {
        "logs": "public class ServiceStatusUpdate extends Service {\n\n@Override\npublic IBinder onBind(Intent intent) {\n    // TODO Auto-generated method stub\n    return null;\n}\n\n@Override\npublic int onStartCommand(Intent intent, int flags, int startId) {\n    while(true)\n    {\n        try {\n            Thread.sleep(10000);\n        } catch (InterruptedException e) {\n            new DoBackgroundTask().execute(Utilities.QUERYstatus);\n            e.printStackTrace();\n        }\n        return START_STICKY;            \n    }\n}\n\nprivate class DoBackgroundTask extends AsyncTask<String, String, String> {\n\n    @Override\n    protected String doInBackground(String... params) {\n        String response = \"\";\n        String dataToSend = params[0];\n        Log.i(\"FROM STATS SERVICE DoBackgroundTask\", dataToSend);\n        HttpClient httpClient = new DefaultHttpClient();\n        HttpPost httpPost = new HttpPost(Utilities.AGENT_URL);\n\n        try {\n            httpPost.setEntity(new StringEntity(dataToSend, \"UTF-8\"));\n\n            // Set up the header types needed to properly transfer JSON\n            httpPost.setHeader(\"Content-Type\", \"application/json\");\n            httpPost.setHeader(\"Accept-Encoding\", \"application/json\");\n            httpPost.setHeader(\"Accept-Language\", \"en-US\");\n\n            // Execute POST\n            HttpResponse httpResponse = httpClient.execute(httpPost);\n            HttpEntity responseEntity = httpResponse.getEntity();\n            if (responseEntity != null) {\n                response = EntityUtils.toString(responseEntity);\n            } else {\n                response = \"{\\\"NO DATA:\\\"NO DATA\\\"}\";\n            }\n        } catch (ClientProtocolException e) {\n            response = \"{\\\"ERROR\\\":\" + e.getMessage().toString() + \"}\";\n        } catch (IOException e) {\n            response = \"{\\\"ERROR\\\":\" + e.getMessage().toString() + \"}\";\n        }\n        return response;\n    }\n\n    @Override\n    protected void onPostExecute(String result) {\n        Utilities.STATUS = result;\n        Log.i(\"FROM STATUS SERVICE: STATUS IS:\", Utilities.STATUS);\n        super.onPostExecute(result);\n    }\n}\n}"
    },
    {
        "logs": "public class ServiceStatusUpdate extends Service {\n\n@Override\npublic IBinder onBind(Intent intent) {\n    // TODO Auto-generated method stub\n    return null;\n}\n\n@Override\npublic int onStartCommand(Intent intent, int flags, int startId) {\n    while(true)\n    {\n        try {\n            Thread.sleep(10000);\n        } catch (InterruptedException e) {\n            new DoBackgroundTask().execute(Utilities.QUERYstatus);\n            e.printStackTrace();\n        }\n        return START_STICKY;            \n    }\n}\n\nprivate class DoBackgroundTask extends AsyncTask<String, String, String> {\n\n    @Override\n    protected String doInBackground(String... params) {\n        String response = \"\";\n        String dataToSend = params[0];\n        Log.i(\"FROM STATS SERVICE DoBackgroundTask\", dataToSend);\n        HttpClient httpClient = new DefaultHttpClient();\n        HttpPost httpPost = new HttpPost(Utilities.AGENT_URL);\n\n        try {\n            httpPost.setEntity(new StringEntity(dataToSend, \"UTF-8\"));\n\n            // Set up the header types needed to properly transfer JSON\n            httpPost.setHeader(\"Content-Type\", \"application/json\");\n            httpPost.setHeader(\"Accept-Encoding\", \"application/json\");\n            httpPost.setHeader(\"Accept-Language\", \"en-US\");\n\n            // Execute POST\n            HttpResponse httpResponse = httpClient.execute(httpPost);\n            HttpEntity responseEntity = httpResponse.getEntity();\n            if (responseEntity != null) {\n                response = EntityUtils.toString(responseEntity);\n            } else {\n                response = \"{\\\"NO DATA:\\\"NO DATA\\\"}\";\n            }\n        } catch (ClientProtocolException e) {\n            response = \"{\\\"ERROR\\\":\" + e.getMessage().toString() + \"}\";\n        } catch (IOException e) {\n            response = \"{\\\"ERROR\\\":\" + e.getMessage().toString() + \"}\";\n        }\n        return response;\n    }\n\n    @Override\n    protected void onPostExecute(String result) {\n        Utilities.STATUS = result;\n        Log.i(\"FROM STATUS SERVICE: STATUS IS:\", Utilities.STATUS);\n        super.onPostExecute(result);\n    }\n}\n}"
    },
    {
        "logs": "Error   1   error LNK2001: unresolved external symbol \"private: static class Foo * Foo::_firstInstance\" (?_firstInstance@Foo@@0PAV1@A)  c:\\Users\\Brans\\documents\\visual studio 2013\\Projects\\testSt\\testSt\\Foo.obj  testSt"
    },
    {
        "logs": "HTTP/1.1 200 OK\nDate: Thu, 02 Jan 2014 18:21:11 GMT\nServer: Apache/2.2.4 (Win32) mod_ssl/2.2.4 OpenSSL/0.9.8k PHP/5.2.12\nX-Powered-By: PHP/5.2.12\nContent-Length: 4\nKeep-Alive: timeout=5, max=100\nConnection: Keep-Alive\nContent-Type: text/html; charset=windows-1251"
    },
    {
        "logs": "HTTP/1.1 200 OK\nDate: Thu, 02 Jan 2014 18:21:11 GMT\nServer: Apache/2.2.4 (Win32) mod_ssl/2.2.4 OpenSSL/0.9.8k PHP/5.2.12\nX-Powered-By: PHP/5.2.12\nContent-Length: 4\nKeep-Alive: timeout=5, max=100\nConnection: Keep-Alive\nContent-Type: text/html; charset=windows-1251"
    },
    {
        "logs": "private void frm_agenda_Load(object sender, EventArgs e)\n    {\n        Thread t = new Thread(new ThreadStart(disparar_time));\n        t.Start();\n    }\n\n    private void disparar_time()\n    {\n        while (true)\n        {\n            time(lbl_time);\n            Thread.Sleep(1000);\n        }\n    }\n\n    public delegate void delegade_time(Label lbl);\n    private void time(Label lbl)\n    {\n        if (InvokeRequired)\n        {\n            try\n            {\n                Invoke(new delegade_time(time), lbl_time);\n            }\n\n            catch (Exception ex)\n            {\n                MessageBox.Show(ex.Message);\n            }\n        }\n        else\n        {\n            try\n            {\n                DateTime date = DateTime.Now;\n                lbl.Text = date.ToLongDateString() + \" \" + date.ToLongTimeString();\n            }\n\n            catch (Exception ex)\n            {\n                MessageBox.Show(ex.Message);\n            }\n        }\n    }\n\n    private void frm_agenda_FormClosing(object sender, FormClosingEventArgs e)\n    {\n        Application.ExitThread();\n    }"
    },
    {
        "logs": "private void frm_agenda_Load(object sender, EventArgs e)\n    {\n        Thread t = new Thread(new ThreadStart(disparar_time));\n        t.Start();\n    }\n\n    private void disparar_time()\n    {\n        while (true)\n        {\n            time(lbl_time);\n            Thread.Sleep(1000);\n        }\n    }\n\n    public delegate void delegade_time(Label lbl);\n    private void time(Label lbl)\n    {\n        if (InvokeRequired)\n        {\n            try\n            {\n                Invoke(new delegade_time(time), lbl_time);\n            }\n\n            catch (Exception ex)\n            {\n                MessageBox.Show(ex.Message);\n            }\n        }\n        else\n        {\n            try\n            {\n                DateTime date = DateTime.Now;\n                lbl.Text = date.ToLongDateString() + \" \" + date.ToLongTimeString();\n            }\n\n            catch (Exception ex)\n            {\n                MessageBox.Show(ex.Message);\n            }\n        }\n    }\n\n    private void frm_agenda_FormClosing(object sender, FormClosingEventArgs e)\n    {\n        Application.ExitThread();\n    }"
    },
    {
        "logs": "<?php\n    if (!empty($_FILES['file'])) {\n        foreach ($_FILES['file']['name'] as $key => $name) {\n            if ($_FILES['file']['error'][$key] == 0 && move_uploaded_file($_FILES['file']['tmp_name'][$key], \"files/{$name}\")) {\n                $uploaded[] = $name;\n            }\n        }\n        print_r($uploaded);\n    }\n?>\n\n<!doctype html>\n\n    <body>\n        <div>\n            <form action=\"\" method=\"post\" encype=\"multipart/form-data\">\n                <div>\n                    <input type=\"file\" name=\"file[]\" multiple=\"multiple\">\n                    <input type=\"submit\" value=\"Upload\">\n                </div>\n            </form>\n        </div>  \n    </body>"
    },
    {
        "logs": "$('#ddl').change(function() {\n document.getElementById(\"results\").innerHTML = \"<div class='collapseJs'>11<br />12<br />13<br />14<br />15<br /></div>\";\n});\n\n$(document).ready(function(){$('.collapse').collapser({\nmode: 'lines',\ntruncate: 3,\nellipsis: '...',\nhideText: 'Hide',\nshowText: 'Show all',\natStart: 'show'\n});\n});\n\n$(document).ready(function(){$('.collapseJs').collapser({\nmode: 'lines',\ntruncate: 3,\nellipsis: '...',\nhideText: 'Hide',\nshowText: 'Show all',\natStart: 'show'\n});\n});"
    },
    {
        "logs": "$('#ddl').change(function() {\n document.getElementById(\"results\").innerHTML = \"<div class='collapseJs'>11<br />12<br />13<br />14<br />15<br /></div>\";\n});\n\n$(document).ready(function(){$('.collapse').collapser({\nmode: 'lines',\ntruncate: 3,\nellipsis: '...',\nhideText: 'Hide',\nshowText: 'Show all',\natStart: 'show'\n});\n});\n\n$(document).ready(function(){$('.collapseJs').collapser({\nmode: 'lines',\ntruncate: 3,\nellipsis: '...',\nhideText: 'Hide',\nshowText: 'Show all',\natStart: 'show'\n});\n});"
    },
    {
        "logs": "[FMWGEN][DB2 JDBC Driver][DB2]INSERT/UPDATE INVALID; INDEX 1 RESTRICTS COLUMNS WITH SAME VALUES; \nnested exception is java.sql.SQLIntegrityConstraintViolationException: \n[FMWGEN][DB2 JDBC Driver][DB2]INSERT/UPDATE INVALID; INDEX 1 RESTRICTS COLUMNS WITH SAME VALUES"
    },
    {
        "logs": "[FMWGEN][DB2 JDBC Driver][DB2]INSERT/UPDATE INVALID; INDEX 1 RESTRICTS COLUMNS WITH SAME VALUES; \nnested exception is java.sql.SQLIntegrityConstraintViolationException: \n[FMWGEN][DB2 JDBC Driver][DB2]INSERT/UPDATE INVALID; INDEX 1 RESTRICTS COLUMNS WITH SAME VALUES"
    },
    {
        "logs": "public ActionResult DoesUserNameExist(string username)\n{\n    if (Exists(uasername))\n    {\n        string errorMessage = \"Some dynamic error message\";\n        return Json(errorMessage, JsonRequestBehavior.AllowGet);\n    }\n\n    return Json(true, JsonRequestBehavior.AllowGet);\n}"
    },
    {
        "logs": "if(total=0)\nthen signal sqlstate '45000' set message_text='Error. Database is empty';**\n\n**elseif**(id_client<min_id or id_client > max_id)\nthen signal sqlstate '45000' set message_text='Error. Client not found';\n\nelse\nSELECT * FROM CLIENTS WHERE ID=ID_CLIENT;\n\nEND IF;\nEND"
    },
    {
        "logs": "if(total=0)\nthen signal sqlstate '45000' set message_text='Error. Database is empty';**\n\n**elseif**(id_client<min_id or id_client > max_id)\nthen signal sqlstate '45000' set message_text='Error. Client not found';\n\nelse\nSELECT * FROM CLIENTS WHERE ID=ID_CLIENT;\n\nEND IF;\nEND"
    },
    {
        "logs": "import java.util.Random;\nimport java.util.Scanner; \nclass TotalSales\n{\n    public static void main( String args[] )\n    {\n        Scanner input = new Scanner( System.in );\n\n        double sales[][] = new double [ 5 ] [ 4 ];\n\n        double productTotal = 0.0;\n        double salesPersonTotal [] = new double[ 4 ];\n\n        System.out.print( \"Enter salesperson number (-1 to end): \" );\n        int person = input.nextInt();\n\n        while ( person != -1 )\n        {\n            System.out.print( \"Enter product number: \");\n            int product = input.nextInt();\n\n            while ( person != -1 )\n            {\n                System.out.print( \"Enter product number: \" );\n                product = input.nextInt();\n                System.out.print( \"Enter sales amount: \");\n                double amount = input.nextDouble();\n\n                if ( person >= 1 && person <5 &&\n                product >= 1 && product <6 && amount >=0 )\n                    sales[ product - 1 ] [ person -1 ] += amount;\n                else\n                    System.out.println(\"Invalid input!\" );\n\n                System.out.print( \"Enter slaesperson number (-1 to end): \" );\n                person = input.nextInt();\n            }\n\n\n\n            for (int column = 0; column < 4; column++ )\n                salesPersonTotal[ column ] = 0;\n            System.out.printf( \"%8s%14s%14s%14s%14s%10s\\n\",\n                    \"Product\", \"Salesperson 1\", \"Salesperson 2\",\n                    \"Salesperson 3\", \"Salesperson 4\", \"Total\" );\n            for ( int row = 0; row < 5; row++ )\n            {\n                System.out.printf( \"%8d\", (row+1));\n\n                for ( int column = 0; column < 4; column ++ ) {\n                    System.out.printf( \"%14.2f\", sales[row] [column]);\n                    productTotal += sales[row][column];\n                    salesPersonTotal[column] += sales[row][column];\n                }\n                System.out.printf( \"%10.2f\\n\", productTotal );\n            }\n\n            System.out.printf( \"%10.2f\\n\",  productTotal );\n        }\n\n        System.out.printf( \"%8s\", \"Total\" );\n\n        for (int column = 0; column < 4; column++ )\n            System.out.printf( \"%14.2f\",  salesPersonTotal[ column ]);\n\n        System.out.println();\n    }\n}"
    },
    {
        "logs": "import java.util.Random;\nimport java.util.Scanner; \nclass TotalSales\n{\n    public static void main( String args[] )\n    {\n        Scanner input = new Scanner( System.in );\n\n        double sales[][] = new double [ 5 ] [ 4 ];\n\n        double productTotal = 0.0;\n        double salesPersonTotal [] = new double[ 4 ];\n\n        System.out.print( \"Enter salesperson number (-1 to end): \" );\n        int person = input.nextInt();\n\n        while ( person != -1 )\n        {\n            System.out.print( \"Enter product number: \");\n            int product = input.nextInt();\n\n            while ( person != -1 )\n            {\n                System.out.print( \"Enter product number: \" );\n                product = input.nextInt();\n                System.out.print( \"Enter sales amount: \");\n                double amount = input.nextDouble();\n\n                if ( person >= 1 && person <5 &&\n                product >= 1 && product <6 && amount >=0 )\n                    sales[ product - 1 ] [ person -1 ] += amount;\n                else\n                    System.out.println(\"Invalid input!\" );\n\n                System.out.print( \"Enter slaesperson number (-1 to end): \" );\n                person = input.nextInt();\n            }\n\n\n\n            for (int column = 0; column < 4; column++ )\n                salesPersonTotal[ column ] = 0;\n            System.out.printf( \"%8s%14s%14s%14s%14s%10s\\n\",\n                    \"Product\", \"Salesperson 1\", \"Salesperson 2\",\n                    \"Salesperson 3\", \"Salesperson 4\", \"Total\" );\n            for ( int row = 0; row < 5; row++ )\n            {\n                System.out.printf( \"%8d\", (row+1));\n\n                for ( int column = 0; column < 4; column ++ ) {\n                    System.out.printf( \"%14.2f\", sales[row] [column]);\n                    productTotal += sales[row][column];\n                    salesPersonTotal[column] += sales[row][column];\n                }\n                System.out.printf( \"%10.2f\\n\", productTotal );\n            }\n\n            System.out.printf( \"%10.2f\\n\",  productTotal );\n        }\n\n        System.out.printf( \"%8s\", \"Total\" );\n\n        for (int column = 0; column < 4; column++ )\n            System.out.printf( \"%14.2f\",  salesPersonTotal[ column ]);\n\n        System.out.println();\n    }\n}"
    },
    {
        "logs": "Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/healpy/__init__.py\", line 47, in <module>\n    from sphtfunc import (anafast, map2alm,\n  File \"/usr/local/lib/python2.7/dist-packages/healpy/sphtfunc.py\", line 26, in <module>\n    import _sphtools as _sphtools\nImportError: /usr/local/lib/python2.7/dist-packages/healpy/_sphtools.so: undefined symbol: PyUnicodeUCS4_DecodeUTF8"
    },
    {
        "logs": "Parse.Cloud.define(\"hello\", function(request, response) {Parse.Push.send({  channels: [\"blue\"],data: {alert: \"The Giants won against the Mets 2-3. Test\"}}, {  success: function() {response.success(\"Hello world!\"); },error: function(error) {   response.fail(\"Hello world!\");}});});"
    },
    {
        "logs": "Parse.Cloud.define(\"hello\", function(request, response) {Parse.Push.send({  channels: [\"blue\"],data: {alert: \"The Giants won against the Mets 2-3. Test\"}}, {  success: function() {response.success(\"Hello world!\"); },error: function(error) {   response.fail(\"Hello world!\");}});});"
    },
    {
        "logs": "@RequestMapping(value=\"/people/def/add\" , method = RequestMethod.GET)\npublic String personAdd(@ModelAttribute(\"person\") Person person,Model map) {        \n    map.addAttribute(\"mode\", \"add\");\n    //DO SOME LOGIC\n    return \"personAdd\";\n}\n\n@RequestMapping(value=\"/people/def/add\" , method = RequestMethod.POST)\npublic String processSubmit(@ModelAttribute(\"person\") Person person,BindingResult result) { \n    personValidator.validate(person, result);\n    if (result.hasErrors()) {\n        //MODE ATTRIBUTE IS LOST\n        return \"personAdd\";"
    },
    {
        "logs": "@RequestMapping(value=\"/people/def/add\" , method = RequestMethod.GET)\npublic String personAdd(@ModelAttribute(\"person\") Person person,Model map) {        \n    map.addAttribute(\"mode\", \"add\");\n    //DO SOME LOGIC\n    return \"personAdd\";\n}\n\n@RequestMapping(value=\"/people/def/add\" , method = RequestMethod.POST)\npublic String processSubmit(@ModelAttribute(\"person\") Person person,BindingResult result) { \n    personValidator.validate(person, result);\n    if (result.hasErrors()) {\n        //MODE ATTRIBUTE IS LOST\n        return \"personAdd\";"
    },
    {
        "logs": " method\n        of file-like objects.  The delta generated also consists of newline-\n        terminated strings, ready to be printed as-is via the writeline()\n        method of a file-like object.\n\n        Example:\n\n        >>> print ''.join(Differ().unified_diff('one\\ntwo\\nthree\\n'.splitlines(1),\n        ...                                'ore\\ntree\\nemu\\n'.splitlines(1)),\n        ...                                'old.txt', 'new.txt', 'old-date', 'new-date'),\n        --- old.txt    old-date\n        +++ new.txt    new-date\n        @@ -1,5 +1,5 @@\n          context1\n        - one\n        ?  ^\n        + ore\n        ?  ^\n        - two\n        - three\n        ?  -\n        + tree\n        + emu\n          context2\n        \"\"\"\n\n        started = False\n        for group in SequenceMatcher(None,a,b).get_grouped_opcodes(n):\n            if not started:\n                fromdate = '\\t%s' % fromfiledate if fromfiledate else ''\n                todate = '\\t%s' % tofiledate if tofiledate else ''\n                yield '--- %s%s%s' % (fromfile, fromdate, lineterm)\n                yield '+++ %s%s%s' % (tofile, todate, lineterm)\n                started = True\n            i1, i2, j1, j2 = group[0][1], group[-1][2], group[0][3], group[-1][4]\n            yield \"@@ -%d,%d +%d,%d @@%s\" % (i1+1, i2-i1, j1+1, j2-j1, lineterm)\n            for tag, i1, i2, j1, j2 in group:\n                if tag == 'replace':\n                    for line in a[i1:i2]:\n                        g = self._fancy_replace(a, i1, i2, b, j1, j2)\n                elif tag == 'equal':\n                    for line in a[i1:i2]:\n                        g = self._dump(' ', a, i1, i2)\n                    if n > 0:\n                        for line in g:\n                            yield line\n                    continue\n                elif tag == 'delete':\n                    for line in a[i1:i2]:\n                        g = self._dump('-', a, i1, i2)\n                elif tag == 'insert':\n                    for line in b[j1:j2]:\n                        g = self._dump('+', b, j1, j2)\n                else:\n                    raise ValueError, 'unknown tag %r' % (tag,)\n\n                for line in g:\n                    yield line\n\n\ndef main():\n    # Test\n    a ='context1\\none\\ntwo\\nthree\\ncontext2\\n'.splitlines(1)\n    b = 'context1\\nore\\ntree\\nemu\\ncontext2\\n'.splitlines(1)\n    x = UnifiedDiffer().unified_diff(a, b, 'old.txt', 'new.txt', 'old-date', 'new-date', n=1)\n    print ''.join(x)\n\nif __name__ == '__main__':          \n    main()"
    },
    {
        "logs": "FileInputStream fis =null;\n        try{\n        fis= new FileInputStream(new File(\"/home/amar/Desktop/new/abc.xls\"));\n\n        Workbook wb = new org.apache.poi.xssf.usermodel.XSSFWorkbook(fis);\n                int numOfSheets = wb.getNumberOfSheets();\nSystem.out.println(\"bhargo num of sheets is \" + numOfSheets);\n        for(int i=0; i<numOfSheets; i++){\n            org.apache.poi.ss.usermodel.Sheet sheet = wb.getSheetAt(i);\n            Iterator<Row> rowIterator = sheet.iterator();\n            while (rowIterator.hasNext())\n            {\n                Row row = rowIterator.next();\n                Iterator<Cell> cellIterator = row.cellIterator();\n                while (cellIterator.hasNext()) {\n                    Cell cell = (Cell) cellIterator.next();\n                    if (cell.getCellType() == cell.CELL_TYPE_STRING) {\n                        System.out.println(\"bhargo cell value is \" + cell.getStringCellValue().trim());\n                    }\n                }\n            }\n            }\n    } catch (Exception e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n    finally{\n        System.out.println(\"bhargo, closing the stream\");\n    try {\n        fis.close();\n    } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n    }"
    },
    {
        "logs": "FileInputStream fis =null;\n        try{\n        fis= new FileInputStream(new File(\"/home/amar/Desktop/new/abc.xls\"));\n\n        Workbook wb = new org.apache.poi.xssf.usermodel.XSSFWorkbook(fis);\n                int numOfSheets = wb.getNumberOfSheets();\nSystem.out.println(\"bhargo num of sheets is \" + numOfSheets);\n        for(int i=0; i<numOfSheets; i++){\n            org.apache.poi.ss.usermodel.Sheet sheet = wb.getSheetAt(i);\n            Iterator<Row> rowIterator = sheet.iterator();\n            while (rowIterator.hasNext())\n            {\n                Row row = rowIterator.next();\n                Iterator<Cell> cellIterator = row.cellIterator();\n                while (cellIterator.hasNext()) {\n                    Cell cell = (Cell) cellIterator.next();\n                    if (cell.getCellType() == cell.CELL_TYPE_STRING) {\n                        System.out.println(\"bhargo cell value is \" + cell.getStringCellValue().trim());\n                    }\n                }\n            }\n            }\n    } catch (Exception e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n    finally{\n        System.out.println(\"bhargo, closing the stream\");\n    try {\n        fis.close();\n    } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n    }"
    },
    {
        "logs": "message ServerResponse {\noptional string ReferenceCode = 1;\noptional NestedMessageProto.NestedMessage NestedMessage = 2;//Huge size data in response\noptional bool Success = 3 [default = false];\nrepeated Errors Errors = 4;\n}"
    },
    {
        "logs": "String apiResponse = Server Response\n    protoResponseClass.parseFrom(apiResponse.getBytes())\n\nits failing when reading the NestedMessage  response on below bold line\n\n    public int pushLimit(int byteLimit) throws InvalidProtocolBufferException {\n    if (byteLimit < 0) {\n        throw InvalidProtocolBufferException.negativeSize();\n    }\n    byteLimit += totalBytesRetired + bufferPos;\n    if (byteLimit > currentLimit) {\n        currentLimit = byteLimit + currentLimit;\n    }\n    final int oldLimit = currentLimit;\n    **if (byteLimit > oldLimit) {\n        throw InvalidProtocolBufferException.truncatedMessage();\n    }**\n    currentLimit = byteLimit;\n    recomputeBufferSizeAfterLimit();\n    return oldLimit;\n}"
    },
    {
        "logs": "message ServerResponse {\noptional string ReferenceCode = 1;\noptional NestedMessageProto.NestedMessage NestedMessage = 2;//Huge size data in response\noptional bool Success = 3 [default = false];\nrepeated Errors Errors = 4;\n}"
    },
    {
        "logs": "Sub ExtractUniqueEntries()\n Const ProductSheetName = \"Sheet1\" ' change as appropriate\n Const ProductRange = \"B2:B\"\n Const ResultsCol = \"E\"\n Dim productWS As Worksheet\n Dim uniqueList() As String\n Dim productsList As Range\n Dim anyProduct\n Dim LC As Integer\n\n ReDim uniqueList(1 To 1)\n Set productWS = Worksheets(ProductSheetName)\n Set productsList = productWS.Range(ProductRange)\n Application.ScreenUpdating = False\n For Each anyProduct In productsList\n   If Not IsEmpty(anyProduct) Then\n     If Trim(anyProduct) <> \"\" Then\n       For LC = LBound(uniqueList) To UBound(uniqueList)\n         If Trim(anyProduct) = uniqueList(LC) Then\n           Exit For ' found match, exit\n         End If\n       Next\n       If LC > UBound(uniqueList) Then\n         'new item, add it\n         uniqueList(UBound(uniqueList)) = Trim(anyProduct)\n         'make room for another\n         ReDim Preserve uniqueList(1 To UBound(uniqueList) + 1)\n       End If\n     End If\n   End If\n Next ' end anyProduct loop\n If UBound(uniqueList) > 1 Then\n   'remove empty element\n   ReDim Preserve uniqueList(1 To UBound(uniqueList) - 1)\n End If\n 'clear out any previous entries in results column\n   If productWS.Range(ResultsCol & Rows.Count).End(xlUp).Row > 1 Then\n   productWS.Range(ResultsCol & 2 & \":\" & _\n    productWS.Range(ResultsCol & Rows.Count).Address).ClearContents\n End If\n 'list the unique items found\n For LC = LBound(uniqueList) To UBound(uniqueList)\n   productWS.Range(ResultsCol & Rows.Count).End(xlUp).Offset(1, 0) = _\n    uniqueList(LC)\n Next\n    'housekeeping cleanup\n    Set productsList = Nothing\n    Set productWS = Nothing\nEnd Sub"
    },
    {
        "logs": "Sub ExtractUniqueEntries()\n Const ProductSheetName = \"Sheet1\" ' change as appropriate\n Const ProductRange = \"B2:B\"\n Const ResultsCol = \"E\"\n Dim productWS As Worksheet\n Dim uniqueList() As String\n Dim productsList As Range\n Dim anyProduct\n Dim LC As Integer\n\n ReDim uniqueList(1 To 1)\n Set productWS = Worksheets(ProductSheetName)\n Set productsList = productWS.Range(ProductRange)\n Application.ScreenUpdating = False\n For Each anyProduct In productsList\n   If Not IsEmpty(anyProduct) Then\n     If Trim(anyProduct) <> \"\" Then\n       For LC = LBound(uniqueList) To UBound(uniqueList)\n         If Trim(anyProduct) = uniqueList(LC) Then\n           Exit For ' found match, exit\n         End If\n       Next\n       If LC > UBound(uniqueList) Then\n         'new item, add it\n         uniqueList(UBound(uniqueList)) = Trim(anyProduct)\n         'make room for another\n         ReDim Preserve uniqueList(1 To UBound(uniqueList) + 1)\n       End If\n     End If\n   End If\n Next ' end anyProduct loop\n If UBound(uniqueList) > 1 Then\n   'remove empty element\n   ReDim Preserve uniqueList(1 To UBound(uniqueList) - 1)\n End If\n 'clear out any previous entries in results column\n   If productWS.Range(ResultsCol & Rows.Count).End(xlUp).Row > 1 Then\n   productWS.Range(ResultsCol & 2 & \":\" & _\n    productWS.Range(ResultsCol & Rows.Count).Address).ClearContents\n End If\n 'list the unique items found\n For LC = LBound(uniqueList) To UBound(uniqueList)\n   productWS.Range(ResultsCol & Rows.Count).End(xlUp).Offset(1, 0) = _\n    uniqueList(LC)\n Next\n    'housekeeping cleanup\n    Set productsList = Nothing\n    Set productWS = Nothing\nEnd Sub"
    },
    {
        "logs": "@Override\npublic void onWindowFocusChanged(boolean hasFocus)\n{\n    super.onWindowFocusChanged(hasFocus);\n    animationDrawable.start();\n}"
    },
    {
        "logs": "@Override\npublic void onWindowFocusChanged(boolean hasFocus)\n{\n    super.onWindowFocusChanged(hasFocus);\n    animationDrawable.start();\n}"
    },
    {
        "logs": "session_start();\nini_set( \"session.bug_compat_warn\", \"off\" );\nrequire_once(\"paypalfunctions.php\");\n\nif ( isset( $_GET['token'] ) ) {\n    $token = $_GET['token'];\n    }\n\nif ( $token != \"\" ) {\n    $resArray = GetShippingDetails( $token );\n    echo \"<pre>\";\n    var_dump( $resArray );\n    echo \"</pre>\";\n    } else {\n    echo \"Error: Transaction Incomplete\";\n    }"
    },
    {
        "logs": "var foo = document.getElementsByTagName(\"li\");\nfunction Food(url) {\n    var xmlhttp;\n    if (window.XMLHttpRequest) { // code for IE7+, Firefox, Chrome, Opera, Safari\n        xmlhttp = new XMLHttpRequest();\n    } else { // code for IE6, IE5\n        xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n    xmlhttp.onreadystatechange = function () {\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n            document.getElementById('text').innerHTML = xmlhttp.responseText;\n            history.pushState({}, 'foo', url);\n        }\n    }\n    xmlhttp.open(\"GET\", url, true);\n    xmlhttp.send();\n\n}\n\nfoo.addEventListener('click', function (e) {\n    e.preventDefault();\n    Food(this.href);\n    return false;\n}, true);"
    },
    {
        "logs": "var foo = document.getElementsByTagName(\"li\");\nfunction Food(url) {\n    var xmlhttp;\n    if (window.XMLHttpRequest) { // code for IE7+, Firefox, Chrome, Opera, Safari\n        xmlhttp = new XMLHttpRequest();\n    } else { // code for IE6, IE5\n        xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n    xmlhttp.onreadystatechange = function () {\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n            document.getElementById('text').innerHTML = xmlhttp.responseText;\n            history.pushState({}, 'foo', url);\n        }\n    }\n    xmlhttp.open(\"GET\", url, true);\n    xmlhttp.send();\n\n}\n\nfoo.addEventListener('click', function (e) {\n    e.preventDefault();\n    Food(this.href);\n    return false;\n}, true);"
    },
    {
        "logs": "<!DOCTYPE html>\r\n<html>\r\n <head> \r\n  <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\"> \r\n  <meta http-equiv=\"cache-control\" content=\"max-age=0\"> \r\n  <meta http-equiv=\"cache-control\" content=\"no-cache\"> \r\n  <meta http-equiv=\"expires\" content=\"0\"> \r\n  <meta http-equiv=\"expires\" content=\"Tue, 01 Jan 1980 1:00:00 GMT\"> \r\n  <meta http-equiv=\"pragma\" content=\"no-cache\"> \r\n  <meta http-equiv=\"refresh\" content=\"10; url=/distil_r_blocked.html?Ref=/link/?listingId=1862997071&amp;listingTypeId=2&amp;sessionUID=893a4035-a985-4321-bb47-575fe281f266&amp;visitorUID=9aad070b-3f42-4c4a-82d9-9fd92ca407d3&amp;searchUID=a8f2e487-999f-47eb-bb46-4b945115f732&amp;webRequestUID=101f1af8-956d-4723-bc26-b2df55155ce9&amp;userId=marchex&amp;siteId=40&amp;website=1&amp;distil_RID=6296EE6C-B808-11E4-A524-C2F8C9906A54&amp;distil_TID=20150219072448\"> \r\n  <script type=\"text/javascript\" src=\"/ga.965296210610.js?PID=6D4E4D1D-7094-375D-A439-0568A6A70836\" defer></script>\r\n  <style type=\"text/css\">#d__fFH{position:absolute;top:-5000px;left:-5000px}#d__fF{font-family:serif;font-size:200px;visibility:hidden}#hurriedea1b9a9d,#persuaded1ada68fe,#variable60a06b50,#persuaded1ada68fe{display:none!important}</style>\r\n </head> \r\n <body> \r\n  <div id=\"distil_ident_block\">\r\n   &nbsp;\r\n  </div> \r\n  <div id=\"d__fFH\">\r\n   <object id=\"d_dlg\" classid=\"clsid:3050f819-98b5-11cf-bb82-00aa00bdce0b\" width=\"0px\" height=\"0px\"></object>\r\n   <span id=\"d__fF\"></span>\r\n  </div>  \r\n </body>\r\n</html>"
    },
    {
        "logs": "<!DOCTYPE html>\r\n<html>\r\n <head> \r\n  <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\"> \r\n  <meta http-equiv=\"cache-control\" content=\"max-age=0\"> \r\n  <meta http-equiv=\"cache-control\" content=\"no-cache\"> \r\n  <meta http-equiv=\"expires\" content=\"0\"> \r\n  <meta http-equiv=\"expires\" content=\"Tue, 01 Jan 1980 1:00:00 GMT\"> \r\n  <meta http-equiv=\"pragma\" content=\"no-cache\"> \r\n  <meta http-equiv=\"refresh\" content=\"10; url=/distil_r_blocked.html?Ref=/link/?listingId=1862997071&amp;listingTypeId=2&amp;sessionUID=893a4035-a985-4321-bb47-575fe281f266&amp;visitorUID=9aad070b-3f42-4c4a-82d9-9fd92ca407d3&amp;searchUID=a8f2e487-999f-47eb-bb46-4b945115f732&amp;webRequestUID=101f1af8-956d-4723-bc26-b2df55155ce9&amp;userId=marchex&amp;siteId=40&amp;website=1&amp;distil_RID=6296EE6C-B808-11E4-A524-C2F8C9906A54&amp;distil_TID=20150219072448\"> \r\n  <script type=\"text/javascript\" src=\"/ga.965296210610.js?PID=6D4E4D1D-7094-375D-A439-0568A6A70836\" defer></script>\r\n  <style type=\"text/css\">#d__fFH{position:absolute;top:-5000px;left:-5000px}#d__fF{font-family:serif;font-size:200px;visibility:hidden}#hurriedea1b9a9d,#persuaded1ada68fe,#variable60a06b50,#persuaded1ada68fe{display:none!important}</style>\r\n </head> \r\n <body> \r\n  <div id=\"distil_ident_block\">\r\n   &nbsp;\r\n  </div> \r\n  <div id=\"d__fFH\">\r\n   <object id=\"d_dlg\" classid=\"clsid:3050f819-98b5-11cf-bb82-00aa00bdce0b\" width=\"0px\" height=\"0px\"></object>\r\n   <span id=\"d__fF\"></span>\r\n  </div>  \r\n </body>\r\n</html>"
    },
    {
        "logs": "import java.io.IOException;\n\n\npublic class Mkdir {\n\n  public static void main(String[] args){\n    try {\n        //The magic is here...\n        Process proc = Runtime.getRuntime().exec(\"mkdir /path/to/subdirectory/test\");\n        System.out.println(\"DONE\");\n    } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n  }\n}"
    },
    {
        "logs": "// Initialize Winsock\nWSAData winSockData;\nWORD dllVersion = MAKEWORD(2, 1);\nlong iResult = WSAStartup(dllVersion, &winSockData);\nif (iResult != NO_ERROR)\n    return;\n\naddrinfo* serverAddress = nullptr;\naddrinfo* ptr = nullptr, hints;\nZeroMemory(&hints, sizeof(hints));\nhints.ai_family = AF_INET;\nhints.ai_socktype = SOCK_STREAM;\nhints.ai_protocol = IPPROTO_TCP;\n\niResult = getaddrinfo(\"127.0.0.1\", \"10011\", &hints, &serverAddress);\nif (iResult != 0)\n    return;\n\n// Create communication socket\nSOCKET connectSocket = socket(AF_INET, SOCK_STREAM, /*IPPROTO_TCP*/0);\nif (connectSocket == INVALID_SOCKET)\n    return;\n\n// Establish connection to server\niResult = connect(connectSocket, serverAddress->ai_addr, (int)serverAddress->ai_addrlen);\nif (iResult == SOCKET_ERROR)\n    return;\n\n// Set socket to non-blocking\nULONG mode = 1;\nm_iResult = ioctlsocket(m_connectSocket, FIONBIO, &mode);\nif (m_iResult == SOCKET_ERROR)\n    return;\n\n// server address info not needed anymore\nfreeaddrinfo(serverAddress);"
    },
    {
        "logs": "int CommCenter::fetchMessage(SOCKET socket, char* buffer, int bufSize, int flags)\n{\n    int result = recv(socket, buffer, bufSize, flags);\n    // if operation couldn't be executed (e.g. because server is down),\n    // throw according exception\n    if (result == SOCKET_ERROR)\n    {\n        if (WSAGetLastError() == WSAEWOULDBLOCK)\n            throw CommException(\"delay in connection.\", CommProblem::Delay);\n        else throw;\n    }\n    return result;\n}"
    },
    {
        "logs": "// Initialize Winsock\nWSAData winSockData;\nWORD dllVersion = MAKEWORD(2, 1);\nlong iResult = WSAStartup(dllVersion, &winSockData);\nif (iResult != NO_ERROR)\n    return;\n\naddrinfo* serverAddress = nullptr;\naddrinfo* ptr = nullptr, hints;\nZeroMemory(&hints, sizeof(hints));\nhints.ai_family = AF_INET;\nhints.ai_socktype = SOCK_STREAM;\nhints.ai_protocol = IPPROTO_TCP;\n\niResult = getaddrinfo(\"127.0.0.1\", \"10011\", &hints, &serverAddress);\nif (iResult != 0)\n    return;\n\n// Create communication socket\nSOCKET connectSocket = socket(AF_INET, SOCK_STREAM, /*IPPROTO_TCP*/0);\nif (connectSocket == INVALID_SOCKET)\n    return;\n\n// Establish connection to server\niResult = connect(connectSocket, serverAddress->ai_addr, (int)serverAddress->ai_addrlen);\nif (iResult == SOCKET_ERROR)\n    return;\n\n// Set socket to non-blocking\nULONG mode = 1;\nm_iResult = ioctlsocket(m_connectSocket, FIONBIO, &mode);\nif (m_iResult == SOCKET_ERROR)\n    return;\n\n// server address info not needed anymore\nfreeaddrinfo(serverAddress);"
    },
    {
        "logs": "int CommCenter::fetchMessage(SOCKET socket, char* buffer, int bufSize, int flags)\n{\n    int result = recv(socket, buffer, bufSize, flags);\n    // if operation couldn't be executed (e.g. because server is down),\n    // throw according exception\n    if (result == SOCKET_ERROR)\n    {\n        if (WSAGetLastError() == WSAEWOULDBLOCK)\n            throw CommException(\"delay in connection.\", CommProblem::Delay);\n        else throw;\n    }\n    return result;\n}"
    },
    {
        "logs": "$filenames = @(1..600);    \ninvoke-parallel -InputObject $servers -throttle 200 -runspaceTimeout 30 -ScriptBlock { & wget --no-check-certificate --content-disposition  --load-cookies cookies.txt -p https://username:password@website.APICall.com/download/$_}"
    },
    {
        "logs": "{\n    \"access_token\": \"N1FL606bmDkZyLplpkLAihaviMQhB042z-rhY262M_W5nSWIv8fDOQiYkEn6GCuDnrxpdOWBS7lpxlBazHYlwnP1RvpDFED1i_ml89QNspyGOWB6TcMkT1MmfUAZ617k9MNvl5UJh2jKzUwvDDeXMURG9tEtmE3UX2L2D-1VA9kqYOzOB1UYbpMAfdTi84jsbR0lhLkNkReQ5fqg4B3IFbbWNGWu5ONb1uuf00ixL-BIMqSvEaNn58_zCyAVFWVzcH2tayYTGT5p_AItKfYiWaYHKC0pDoZ_OBdlpB7Odc7ScwjwFM5vtpBZE81rpk8yjXnrTEk_j9n0eiloJnpWwA\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": 899,\n    \"refresh_token\": \"60da311d10f043b892c703c7fb7ab061\",\n    \"as:client_id\": \"Erp\",\n    \"userName\": \"bbauer\",\n    \".issued\": \"Tue, 30 Jun 2015 17:56:10 GMT\",\n    \".expires\": \"Tue, 30 Jun 2015 18:11:10 GMT\"\n}"
    },
    {
        "logs": "{\n    \"access_token\": \"N1FL606bmDkZyLplpkLAihaviMQhB042z-rhY262M_W5nSWIv8fDOQiYkEn6GCuDnrxpdOWBS7lpxlBazHYlwnP1RvpDFED1i_ml89QNspyGOWB6TcMkT1MmfUAZ617k9MNvl5UJh2jKzUwvDDeXMURG9tEtmE3UX2L2D-1VA9kqYOzOB1UYbpMAfdTi84jsbR0lhLkNkReQ5fqg4B3IFbbWNGWu5ONb1uuf00ixL-BIMqSvEaNn58_zCyAVFWVzcH2tayYTGT5p_AItKfYiWaYHKC0pDoZ_OBdlpB7Odc7ScwjwFM5vtpBZE81rpk8yjXnrTEk_j9n0eiloJnpWwA\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": 899,\n    \"refresh_token\": \"60da311d10f043b892c703c7fb7ab061\",\n    \"as:client_id\": \"Erp\",\n    \"userName\": \"bbauer\",\n    \".issued\": \"Tue, 30 Jun 2015 17:56:10 GMT\",\n    \".expires\": \"Tue, 30 Jun 2015 18:11:10 GMT\"\n}"
    },
    {
        "logs": "public class TestClass<K, V> {\n    Entry[] entry;\n\n    private TestClass() {\n        entry = new Entry[10]; // <--- this line gives generic array creation error\n    }\n\n    private class Entry {\n        public Entry() {\n\n        }\n    }\n}"
    },
    {
        "logs": "public class TestClass<K, V> {\n    Entry[] entry;\n\n    private TestClass() {\n        entry = new Entry[10]; // <--- this line gives generic array creation error\n    }\n\n    private class Entry {\n        public Entry() {\n\n        }\n    }\n}"
    },
    {
        "logs": "error #5276: Unbalanced parentheses\n  alpha2 = r * Mp(:,iter) / (Mp(iter,:)) * (Mp(:,iter)))\n-------------------------------------------------------^"
    },
    {
        "logs": "--- populating Dropdown and and creates button\n\n                success: function (data) {\n                    $.each(data.d, function (key, value) {\n                        $(\"#ddlLecturer\").append($(\"<option></option>\").val(value.LecturerId).html(value.LecturerName));\n                        var r = '<input class=\"btns\" type=\"button\" id=\"'+value.LecturerId+'\"+ value=\"' + value.LecturerName + '\"/>';\n                        $(\"#btn_list\").append(r);\n                    });\n                },\n\n                error: function (result) {\n                    alert(\"Error\");\n                }\n            });"
    },
    {
        "logs": "--- populating Dropdown and and creates button\n\n                success: function (data) {\n                    $.each(data.d, function (key, value) {\n                        $(\"#ddlLecturer\").append($(\"<option></option>\").val(value.LecturerId).html(value.LecturerName));\n                        var r = '<input class=\"btns\" type=\"button\" id=\"'+value.LecturerId+'\"+ value=\"' + value.LecturerName + '\"/>';\n                        $(\"#btn_list\").append(r);\n                    });\n                },\n\n                error: function (result) {\n                    alert(\"Error\");\n                }\n            });"
    },
    {
        "logs": "app.run(function($rootScope, $state, $location, UserService){\n    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams){\n        let loggedIn = UserService.isLoggedIn();\n        if  (toState.name !== 'app.login' && !loggedIn){\n            $location.url('/login');\n        }\n    });\n});"
    },
    {
        "logs": "app.run(function($rootScope, $state, $location, UserService){\n    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams){\n        let loggedIn = UserService.isLoggedIn();\n        if  (toState.name !== 'app.login' && !loggedIn){\n            $location.url('/login');\n        }\n    });\n});"
    },
    {
        "logs": "- (NSData *)jsonData {\n\nNSDictionary *root = @{@\"Sport\" : @(_sportID),          // I\u00b4m using literals here for brevity\u2019s sake\n                       @\"Skill\" : @(_skillLevel),\n                       @\"Visibility\" : @(_visibility),\n                       @\"NotificationRange\" : @(_notificationRange)};\n\nif ([NSJSONSerialization isValidJSONObject:root]) {\n    NSData *jsonData = [NSJSONSerialization dataWithJSONObject:root\n                                    options:0\n                                      error:nil];\n    return jsonData;\n}\nreturn nil;"
    },
    {
        "logs": "// (other code unchanged) ...\nReactDOM.render(<HelloWorld />, document.getElementById(\"hello\"));\nReactDOM.render(<Button options={options}/>, document.getElementById(\"btn\"));"
    },
    {
        "logs": "// (other code unchanged) ...\nReactDOM.render(<HelloWorld />, document.getElementById(\"hello\"));\nReactDOM.render(<Button options={options}/>, document.getElementById(\"btn\"));"
    },
    {
        "logs": "public partial class App : Application\n{\n    public static void Main(string[] args)\n    {\n        try\n        {\n            // Application stuff            \n            SomeMethod();\n        }\n        catch (Exception ex)\n        {\n            if (ex.Data['logged'] == false)\n            {\n                logger.Error(ex, \"A unhandled exception occured.\")\n                ex.Data['logged'] = true;\n            }\n\n            // Show error dialog\n        }\n    }\n\n    public static void SomeMethod()\n    {\n        try\n        {\n            // Method stuff\n        }\n        catch (Exception ex)\n        {\n            logger.Error(ex, \"A handled exception occured.\")\n            ex.Data['logged'] = true;\n            throw;\n        }\n    }\n}"
    },
    {
        "logs": "public partial class App : Application\n{\n    public static void Main(string[] args)\n    {\n        try\n        {\n            // Application stuff            \n            SomeMethod();\n        }\n        catch (Exception ex)\n        {\n            if (ex.Data['logged'] == false)\n            {\n                logger.Error(ex, \"A unhandled exception occured.\")\n                ex.Data['logged'] = true;\n            }\n\n            // Show error dialog\n        }\n    }\n\n    public static void SomeMethod()\n    {\n        try\n        {\n            // Method stuff\n        }\n        catch (Exception ex)\n        {\n            logger.Error(ex, \"A handled exception occured.\")\n            ex.Data['logged'] = true;\n            throw;\n        }\n    }\n}"
    },
    {
        "logs": "2015-11-12 16:06:44.476 AppNAME[30186:18560579] Google Maps SDK for iOS version: 1.10.20339.0\n2015-11-12 16:06:44.476 AppNAME[30186:18560579] New version of Google Maps SDK for iOS available: 1.10.21020.0\n2015-11-12 16:06:44.485 AppNAME[30186:18560579] ClientParametersRequest failed, 3 attempts remaining (0 vs 6). Error Domain=com.google.HTTPStatus Code=400 \"(null)\" UserInfo={data=<CFData 0x7c149760 [0x4dcc098]>{length = 145, capacity = 256, bytes = 0x3c48544d4c3e0a3c484541443e0a3c54 ... 3c2f48544d4c3e0a}}\n2015-11-12 16:06:44.683 AppNAME[30186:18560579] ClientParametersRequest failed, 2 attempts remaining (0 vs 6). Error Domain=com.google.HTTPStatus Code=400 \"(null)\" UserInfo={data=<CFData 0x7c60ecf0 [0x4dcc098]>{length = 145, capacity = 256, bytes = 0x3c48544d4c3e0a3c484541443e0a3c54 ... 3c2f48544d4c3e0a}}"
    },
    {
        "logs": "ImportError                               Traceback (most recent call last)\n<ipython-input-1-417274a1ae6c> in <module>()\n      1 get_ipython().system(u'conda install seaborn')\n      2 get_ipython().system(u'pip install seaborn')\n----> 3 import seaborn as sb\n      4 \n\nImportError: No module named seaborn"
    },
    {
        "logs": "ImportError                               Traceback (most recent call last)\n<ipython-input-1-417274a1ae6c> in <module>()\n      1 get_ipython().system(u'conda install seaborn')\n      2 get_ipython().system(u'pip install seaborn')\n----> 3 import seaborn as sb\n      4 \n\nImportError: No module named seaborn"
    },
    {
        "logs": "Shape.findOrCreate({\n where: shapeCondition\n})\n.spread(function (Shape, created) {\n if (created == false) {\n  (write update query)\n  return callback(err);\n } else {\n\n  return callback(null, data);\n }\n\n}).catch(function (err) {\n err.exception = \"error message\";\n return callback(err);\n});"
    },
    {
        "logs": "Shape.findOrCreate({\n where: shapeCondition\n})\n.spread(function (Shape, created) {\n if (created == false) {\n  (write update query)\n  return callback(err);\n } else {\n\n  return callback(null, data);\n }\n\n}).catch(function (err) {\n err.exception = \"error message\";\n return callback(err);\n});"
    },
    {
        "logs": "#include <unistd.h>\n#include <fcntl.h>\n#include <stdio.h>\n#include <stdlib.h>\n\n// ...\n\nfilename = \"foo.txt\";\nint fd;\nif ((fd = open(filename, O_RDONLY)) == -1) {\n    perror(\"open %s: %s\\n\", filename, strerror(errno));\n    exit(EXIT_FAILURE);\n}\nif (dup2(fd, STDIN_FILENO) == -1) {\n    perror(\"dup2: %s -> stdin: %s\\n\", filename, strerror(errno));\n    exit(EXIT_FAILURE);\n}\nif (close(fd) == -1) {\n    perror(\"close %s: %s\\n\", filename, strerror(errno));\n    exit(EXIT_FAILURE);\n}\n\n// Now, reading from stdin will read from the file.\n// Do the normal pipe operations here.\n\nint pipes[2];\n// ..."
    },
    {
        "logs": "Route::group(['middleware' => 'web'],function(){ \n     Route::get('/page', function () {\n         return redirect('/')->withMessage([\"warning\"=> [\"yeah\",\"test\"]]); // According official docs, this should work.\n     }); \n     Route::get('/', 'Page@front');\n});"
    },
    {
        "logs": "Route::group(['middleware' => 'web'],function(){ \n     Route::get('/page', function () {\n         return redirect('/')->withMessage([\"warning\"=> [\"yeah\",\"test\"]]); // According official docs, this should work.\n     }); \n     Route::get('/', 'Page@front');\n});"
    },
    {
        "logs": "import time\nimport sys\nfrom selenium import webdriver\ndriver = webdriver.PhantomJS(executable_path='$HOME/env/bin/phantomjs')\ndriver.set_window_size(2000,2000)\nstart_time = time.time()\ndef url_test(first_id, last_id):\n    for id in range(first_id, last_id):\n        url = \"http://espn.go.com/nba/boxscore?gameId=\" + str(id)\n        print(driver.current_url)\n        driver.get(url)\n        time.sleep(5)\n        print(driver.current_url)\n        if driver.current_url != url:\n            print('URL failed to load: ' + url + ' at ' + str(time.time() - start_time) + ' elapsed seconds')\n            driver.close()\n            sys.exit()\n\nurl_test(400828768, 400828968)"
    },
    {
        "logs": "import time\nimport sys\nfrom selenium import webdriver\ndriver = webdriver.PhantomJS(executable_path='$HOME/env/bin/phantomjs')\ndriver.set_window_size(2000,2000)\nstart_time = time.time()\ndef url_test(first_id, last_id):\n    for id in range(first_id, last_id):\n        url = \"http://espn.go.com/nba/boxscore?gameId=\" + str(id)\n        print(driver.current_url)\n        driver.get(url)\n        time.sleep(5)\n        print(driver.current_url)\n        if driver.current_url != url:\n            print('URL failed to load: ' + url + ' at ' + str(time.time() - start_time) + ' elapsed seconds')\n            driver.close()\n            sys.exit()\n\nurl_test(400828768, 400828968)"
    },
    {
        "logs": "var React = require('react-native');\n  var {\n    PropTypes,\n    requireNativeComponent,\n    View,\n  } = React;\n\n  class SignatureCapture extends React.Component {\n\n    constructor() {\n      super();\n      this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(event) {\n      console.log(\"Signature  ON Change Event\");\n      if (!this.props.onSaveEvent) {\n        return;\n      }\n\n      this.props.onSaveEvent({\n        pathName: event.nativeEvent.pathName,\n        encoded: event.nativeEvent.encoded,\n      });\n    }\n\n    render() {\n      return (\n        <SignatureView {...this.props} style={{flex: 1}} onChange={this.onChange} />\n      );\n    }\n\n    save(){\n\n    }\n  }\n\n  SignatureCapture.propTypes = {\n    ...View.propTypes,\n    saveImageFileInExtStorage: PropTypes.bool,\n    viewMode:PropTypes.string\n  };\n\n  var SignatureView = requireNativeComponent('SignatureView', SignatureCapture, {\n    nativeOnly: {onChange: true}\n  });\n\n  module.exports = SignatureCapture;"
    },
    {
        "logs": "> M = matrix(c(0,1,1,0), nrow = 2)\n> M\n     [,1] [,2]\n[1,]    0    1\n[2,]    1    0\n> G = matrix\n> G\nfunction (data = NA, nrow = 1, ncol = 1, byrow = FALSE, dimnames = NULL) \n{\n    if (is.object(data) || !is.atomic(data)) \n        data <- as.vector(data)\n    .Internal(matrix(data, nrow, ncol, byrow, dimnames, missing(nrow), \n        missing(ncol)))\n}\n<bytecode: 0x000000001434fab0>\n<environment: namespace:base>\n> G%*%M\nError in G %*% M : requires numeric/complex matrix/vector arguments"
    },
    {
        "logs": "> M = matrix(c(0,1,1,0), nrow = 2)\n> M\n     [,1] [,2]\n[1,]    0    1\n[2,]    1    0\n> G = matrix\n> G\nfunction (data = NA, nrow = 1, ncol = 1, byrow = FALSE, dimnames = NULL) \n{\n    if (is.object(data) || !is.atomic(data)) \n        data <- as.vector(data)\n    .Internal(matrix(data, nrow, ncol, byrow, dimnames, missing(nrow), \n        missing(ncol)))\n}\n<bytecode: 0x000000001434fab0>\n<environment: namespace:base>\n> G%*%M\nError in G %*% M : requires numeric/complex matrix/vector arguments"
    },
    {
        "logs": "warning: pointer targets in passing argument 1 of \u2018snprintf\u2019 differ in signedness [-Wpointer-sign]\n     bytes_written = snprintf(buf, 8, \"%\" PRId8, 2);\n     ^\n/usr/include/stdio.h:386:12: note: expected \u2018char * __restrict__\u2019 but argument is of type \u2018int8_t *\u2019\n extern int snprintf (char *__restrict __s, size_t __maxlen,"
    },
    {
        "logs": "warning: pointer targets in passing argument 1 of \u2018snprintf\u2019 differ in signedness [-Wpointer-sign]\n     bytes_written = snprintf(buf, 8, \"%\" PRId8, 2);\n     ^\n/usr/include/stdio.h:386:12: note: expected \u2018char * __restrict__\u2019 but argument is of type \u2018int8_t *\u2019\n extern int snprintf (char *__restrict __s, size_t __maxlen,"
    },
    {
        "logs": "<dict>\n<key>NSAllowsArbitraryLoads</key>\n<true/>\n<key>NSExceptionDomains</key>\n<dict>\n<key>google.com</key>\n<dict>\n    <key>NSExceptionAllowsInsecureHTTPLoads</key>\n    <true/>\n    <key>NSIncludesSubdomains</key>\n    <true/>\n</dict>\n</dict>"
    },
    {
        "logs": "{% block body %}\n<div class=\"container\" style=\"width:800px;\">\n\n    <div align=\"center\">\n        <input type=\"range\" min=\"10000\" max=\"55000\" step=\"1000\" value=\"10000\" id=\"min_price\" name=\"min_price\" />\n        <span id=\"price_range\"></span>\n    </div>\n    <br /><br /><br />\n    <div id=\"product_loading\">\n        <div class=\"col-md-9\">\n            <div class=\"row\">\n                {% for x in Hotels %}\n                    <div class=\"col-sm-4 col-lg-4 col-md-4\">\n                        <div class=\"thumbnail\">\n                            <img src=\"{{ asset('uploads/brochures/'~x.brochure) }}\" alt=\"\">\n                            <div class=\"caption\">\n                                <h4 class=\"pull-right\">{{ x.price }}</h4>\n                                <h4><a href=\"#\">{{ x.titre }}</a>\n                                </h4>\n                            </div>\n\n                        </div>\n                    </div>\n\n                {% endfor %}\n            </div>\n        </div>\n    </div>\n</div>\n<script>\n    $(document).ready(function(){\n        $('#min_price').change(function(){\n            var price = $(this).val();\n            $(\"#price_range\").text(\"Product under Price Rs.\" + price);\n            $.ajax({\n                url:\" {{ path('Hotel__') }},\n                data:'price' +price ,\n                method:\"POST\",\n                success:function(data){\n                    $(\"#product_loading\").fadeIn(500).html(data);\n                }\n            });\n        });\n    });\n</script>\n{% endblock %}"
    },
    {
        "logs": "{% block body %}\n<div class=\"container\" style=\"width:800px;\">\n\n    <div align=\"center\">\n        <input type=\"range\" min=\"10000\" max=\"55000\" step=\"1000\" value=\"10000\" id=\"min_price\" name=\"min_price\" />\n        <span id=\"price_range\"></span>\n    </div>\n    <br /><br /><br />\n    <div id=\"product_loading\">\n        <div class=\"col-md-9\">\n            <div class=\"row\">\n                {% for x in Hotels %}\n                    <div class=\"col-sm-4 col-lg-4 col-md-4\">\n                        <div class=\"thumbnail\">\n                            <img src=\"{{ asset('uploads/brochures/'~x.brochure) }}\" alt=\"\">\n                            <div class=\"caption\">\n                                <h4 class=\"pull-right\">{{ x.price }}</h4>\n                                <h4><a href=\"#\">{{ x.titre }}</a>\n                                </h4>\n                            </div>\n\n                        </div>\n                    </div>\n\n                {% endfor %}\n            </div>\n        </div>\n    </div>\n</div>\n<script>\n    $(document).ready(function(){\n        $('#min_price').change(function(){\n            var price = $(this).val();\n            $(\"#price_range\").text(\"Product under Price Rs.\" + price);\n            $.ajax({\n                url:\" {{ path('Hotel__') }},\n                data:'price' +price ,\n                method:\"POST\",\n                success:function(data){\n                    $(\"#product_loading\").fadeIn(500).html(data);\n                }\n            });\n        });\n    });\n</script>\n{% endblock %}"
    },
    {
        "logs": "static {\n    final SSLSocketFactory sslSocketFactory;\n    try {\n        sslSocketFactory = new TLSSocketFactory();\n        HttpsURLConnection.setDefaultSSLSocketFactory(sslSocketFactory);\n    } catch (KeyManagementException ignored) {\n\n    } catch (NoSuchAlgorithmException e) {\n        e.printStackTrace();\n    }\n}"
    },
    {
        "logs": "import java.io.IOException;\nimport java.net.InetAddress;\nimport java.net.Socket;\nimport java.net.UnknownHostException;\nimport java.security.KeyManagementException;\nimport java.security.NoSuchAlgorithmException;\n\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.SSLSocket;\nimport javax.net.ssl.SSLSocketFactory;\n\n/**\n * @author fkrauthan\n * http://blog.dev-area.net/2015/08/13/android-4-1-enable-tls-1-1-and-tls-1-2/\n *\n *\n// IMPORTANT: Pre-lollipop devices do not support SSL TLSv1.1, TLSv1.2\n// so I've included a TLSSocketFactory wrapper class that enables these SSL\n// protocols.\n */\npublic class TLSSocketFactory extends SSLSocketFactory {\n\n    private SSLSocketFactory internalSSLSocketFactory;\n\n    public TLSSocketFactory() throws KeyManagementException, NoSuchAlgorithmException {\n        SSLContext context = SSLContext.getInstance(\"TLS\");\n        context.init(null, null, null);\n        internalSSLSocketFactory = context.getSocketFactory();\n    }\n\n    @Override\n    public String[] getDefaultCipherSuites() {\n        return internalSSLSocketFactory.getDefaultCipherSuites();\n    }\n\n    @Override\n    public String[] getSupportedCipherSuites() {\n        return internalSSLSocketFactory.getSupportedCipherSuites();\n    }\n\n    @Override\n    public Socket createSocket(Socket s, String host, int port, boolean autoClose) throws IOException {\n        return enableTLSOnSocket(internalSSLSocketFactory.createSocket(s, host, port, autoClose));\n    }\n\n    @Override\n    public Socket createSocket(String host, int port) throws IOException, UnknownHostException {\n        return enableTLSOnSocket(internalSSLSocketFactory.createSocket(host, port));\n    }\n\n    @Override\n    public Socket createSocket(String host, int port, InetAddress localHost, int localPort) throws IOException, UnknownHostException {\n        return enableTLSOnSocket(internalSSLSocketFactory.createSocket(host, port, localHost, localPort));\n    }\n\n    @Override\n    public Socket createSocket(InetAddress host, int port) throws IOException {\n        return enableTLSOnSocket(internalSSLSocketFactory.createSocket(host, port));\n    }\n\n    @Override\n    public Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {\n        return enableTLSOnSocket(internalSSLSocketFactory.createSocket(address, port, localAddress, localPort));\n    }\n\n    private Socket enableTLSOnSocket(Socket socket) {\n        if(socket != null && (socket instanceof SSLSocket)) {\n            ((SSLSocket)socket).setEnabledProtocols(new String[] {\"TLSv1.1\", \"TLSv1.2\"});\n        }\n        return socket;\n    }\n}"
    },
    {
        "logs": "static {\n    final SSLSocketFactory sslSocketFactory;\n    try {\n        sslSocketFactory = new TLSSocketFactory();\n        HttpsURLConnection.setDefaultSSLSocketFactory(sslSocketFactory);\n    } catch (KeyManagementException ignored) {\n\n    } catch (NoSuchAlgorithmException e) {\n        e.printStackTrace();\n    }\n}"
    },
    {
        "logs": "public function store($userId, Request $request)\n{\n        $buy = User::findOrFail($userId)->buy()->create($request->all());\n        $buy->codec()->attach([codec_ids]);\n        return view('buy.index');\n}"
    },
    {
        "logs": "public function store($userId, Request $request)\n{\n        $buy = User::findOrFail($userId)->buy()->create($request->all());\n        $buy->codec()->attach([codec_ids]);\n        return view('buy.index');\n}"
    },
    {
        "logs": "window.onload = function(){\r\n        var percentile = [0,10, 20, 30, 40, 50, 60, 70, 80, 90];\r\n        document.getElementById(\"rawScore\").onchange = function () {\r\n            var index = document.getElementById(\"rawScore\").value;\r\n            document.getElementById(\"percentile\").innerHTML = percentile[index];\r\n        }\r\n    }"
    },
    {
        "logs": "window.onload = function(){\r\n        var percentile = [0,10, 20, 30, 40, 50, 60, 70, 80, 90];\r\n        document.getElementById(\"rawScore\").onchange = function () {\r\n            var index = document.getElementById(\"rawScore\").value;\r\n            document.getElementById(\"percentile\").innerHTML = percentile[index];\r\n        }\r\n    }"
    },
    {
        "logs": "Testing19.java:136: error: cannot find symbol\r\n      return current.getData();\r\n                    ^\r\n  symbol:   method getData()\r\n  location: variable current of type HawaiiNativeForestBirdsNode\r\n1 error"
    },
    {
        "logs": "$this.bind(\"update\", function () {\n  var me = this;\n  setTimeout(function () {\n    // rebuild parsers.\n    me.config.parsers = buildParserCache(\n    me, $headers);\n    // rebuild the cache map\n    cache = buildCache(me);\n}, 1);"
    },
    {
        "logs": "$this.bind(\"update\", function () {\n  var me = this;\n  setTimeout(function () {\n    // rebuild parsers.\n    me.config.parsers = buildParserCache(\n    me, $headers);\n    // rebuild the cache map\n    cache = buildCache(me);\n}, 1);"
    },
    {
        "logs": "Traceback (most recent call last):\n\n  File \"<ipython-input-51-7586a536b1c0>\", line 5, in <module>\n    cnt_len = cv2.arcLength(cnt, True)\n\nerror: /Users/jenkins/miniconda/1/x64/conda-bld/work/opencv-3.1.0/modules/imgproc/src/shapedescr.cpp:281: error: (-215) count >= 0 && (depth == CV_32F || depth == CV_32S) in function arcLength"
    },
    {
        "logs": "Traceback (most recent call last):\n\n  File \"<ipython-input-51-7586a536b1c0>\", line 5, in <module>\n    cnt_len = cv2.arcLength(cnt, True)\n\nerror: /Users/jenkins/miniconda/1/x64/conda-bld/work/opencv-3.1.0/modules/imgproc/src/shapedescr.cpp:281: error: (-215) count >= 0 && (depth == CV_32F || depth == CV_32S) in function arcLength"
    },
    {
        "logs": "Error: error: {\n    \"ok\" : 0,\n    \"errmsg\" : \"Executor error during find command: OperationFailed: Sort operation used more than the maximum 33554432 bytes of RAM. Add an index, or specify a smaller limit.\",\n    \"code\" : 96,\n    \"codeName\" : \"OperationFailed\"\n}"
    },
    {
        "logs": " = ?\");\n            $stmt->execute([$username]);\n\n            $row = $stmt->fetch(PDO::FETCH_ASSOC);\n\n            $blocked = $this->run(\"SELECT count(*) FROM "
    },
    {
        "logs": " = ?\");\n            $blocked->execute([$ip]);\n            $re = $blocked->fetchColumn();\n\n\n            $ipBlock = $this->run(\"SELECT * FROM "
    },
    {
        "logs": "Protected Sub ddlRole_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlRole.SelectedIndexChanged\n    Using context As New AGIP_dbModel.AGIP_dbEntities()\n        For Each oItem As ListItem In ckSection.Items()\n            Dim objPerm As tbl_permission = New tbl_permission()\n            oItem.Value = objPerm.pre_status\n        Next\n\n    End Using\nEnd Sub"
    },
    {
        "logs": "Protected Sub btnSubmit_Click(sender As Object, e As EventArgs) Handles btnSubmit.Click\n    Using context As New AGIP_dbModel.AGIP_dbEntities()\n\n        Dim id As Integer = ddlRole.SelectedValue\n\n        Try\n\n            Dim obj = context.tbl_permission.Where(Function(u) u.role_id = id)\n            For Each permission As tbl_permission In obj.ToList\n                context.tbl_permission.DeleteObject(permission)\n                context.SaveChanges()\n            Next\n\n\n        Catch ex As Exception\n\n\n        End Try\n        For Each oItem As ListItem In ckSection.Items()\n            Dim objPerm As tbl_permission = New tbl_permission()\n            objPerm.role_id = ddlRole.SelectedValue\n            objPerm.pre_status = oItem.Selected\n            objPerm.section_id = oItem.Value\n            context.tbl_permission.AddObject(objPerm)\n            context.SaveChanges()\n\n        Next\n        Response.Redirect(\"permission.aspx\")\n    End Using\nEnd Sub"
    },
    {
        "logs": "Protected Sub ddlRole_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlRole.SelectedIndexChanged\n    Using context As New AGIP_dbModel.AGIP_dbEntities()\n        For Each oItem As ListItem In ckSection.Items()\n            Dim objPerm As tbl_permission = New tbl_permission()\n            oItem.Value = objPerm.pre_status\n        Next\n\n    End Using\nEnd Sub"
    },
    {
        "logs": "this.timeoutWithAPromise = function(msec) {\n  let defer = q.defer();\n  setTimeout(() => defer.resolve(), msec);\n  return defer.promise;\n};"
    },
    {
        "logs": "let self = this;\nself.timeoutWithAPromise(1000).then(()=> {\n    console.log('1000msec have passed');\n    return self.timeoutWithAPromise(1000);\n}).then(()=> {\n    console.log('now, another 1000msec have passed');\n    // ..."
    },
    {
        "logs": "this.timeoutWithAPromise = function(msec) {\n  let defer = q.defer();\n  setTimeout(() => defer.resolve(), msec);\n  return defer.promise;\n};"
    },
    {
        "logs": "let self = this;\nself.timeoutWithAPromise(1000).then(()=> {\n    console.log('1000msec have passed');\n    return self.timeoutWithAPromise(1000);\n}).then(()=> {\n    console.log('now, another 1000msec have passed');\n    // ..."
    },
    {
        "logs": "static func post(image: UIImage, for username: String) {\n\n    let imageData = UIImagePNGRepresentation(image)\n    let base64Image = imageData?.base64EncodedString(options: .lineLength64Characters)\n\n    let url = \"https://api.imgur.com/3/upload\"\n\n    let parameters = [\n        \"image\": base64Image\n    ]\n\n    Alamofire.upload(multipartFormData: { multipartFormData in\n        if let imageData = UIImageJPEGRepresentation(image, 1) {\n            multipartFormData.append(imageData, withName: username, fileName: \"\\(username).png\", mimeType: \"image/png\")\n        }\n\n        for (key, value) in parameters {\n            multipartFormData.append((value?.data(using: .utf8))!, withName: key)\n        }}, to: url, method: .post, headers: [\"Authorization\": \"Client-ID \" + Constants.IMGUR_CLIENT_ID],\n            encodingCompletion: { encodingResult in\n                switch encodingResult {\n                case .success(let upload, _, _):\n                    upload.response { response in\n                        print(response) // url nowhere to be found\n                    }\n                case .failure(let encodingError):\n                    print(\"error:\\(encodingError)\")\n                }\n    })\n\n}"
    },
    {
        "logs": "table(LW1108[,6])\nModule 1h  2.1  2.2  3.1 Fail Pass test \nLW1101 54  196  122   21   23   15    7 \nLW1102 54  196  122   21   23   15    7 \n.\n.\n.\nLW6601 54  196  122   21   23   15    7"
    },
    {
        "logs": "table(LW1108[,6])\nModule 1h  2.1  2.2  3.1 Fail Pass test \nLW1101 54  196  122   21   23   15    7 \nLW1102 54  196  122   21   23   15    7 \n.\n.\n.\nLW6601 54  196  122   21   23   15    7"
    },
    {
        "logs": "features <- colnames(iris)\ntop <- data.frame()\nfor (i in 1:length(features)) {\n  label <- features[[i]]\n  iris %>%\n    select(label, Species) %>%\n    arrange(desc(label)) %>%\n    top_n(3) %>%\n    rbind(top)\n}\n# Error in arrange_impl(.data, dots) : \n# incorrect size (1) at position 1, expecting : 150"
    },
    {
        "logs": "features <- colnames(iris)\ntop <- data.frame()\nfor (i in 1:length(features)) {\n  label <- features[[i]]\n  iris %>%\n    select(label, Species) %>%\n    arrange(desc(label)) %>%\n    top_n(3) %>%\n    rbind(top)\n}\n# Error in arrange_impl(.data, dots) : \n# incorrect size (1) at position 1, expecting : 150"
    },
    {
        "logs": "describe('BackgroundLoadedDirective', () => {\n\n  let component: UnitTestComponent;\n  let fixture: ComponentFixture<UnitTestComponent>;\n  let spy: any;\n\n  beforeEach(() => {\n\n    TestBed.configureTestingModule({\n      declarations: [\n        UnitTestComponent,\n        BackgroundLoadedDirective\n      ],\n      schemas: [NO_ERRORS_SCHEMA],\n      providers: [\n        {provide: ComponentFixtureAutoDetect, useValue: true}\n      ]\n    });\n\n    fixture = TestBed.createComponent(UnitTestComponent);\n    component = fixture.componentInstance;\n  });\n\n  it('should create a fake img tag', () => {\n\n    spy = spyOn(component.backgroundLoaded, 'createImage').and.callThrough();\n\n    expect(component.backgroundLoaded.img).toBeTruthy();\n    expect(spy).toHaveBeenCalled();\n  });\n});"
    },
    {
        "logs": ":~# /usr/local/bin/supervisorctl status\nTraceback (most recent call last):\n  File \"/usr/local/bin/supervisorctl\", line 7, in <module>\n    from supervisor.supervisorctl import main\n  File \"/usr/local/lib/python2.7/dist-packages/supervisor/supervisorctl.py\", line 36, in <module>\n    from supervisor.options import ClientOptions\n  File \"/usr/local/lib/python2.7/dist-packages/supervisor/options.py\", line 23, in <module>\n    from supervisor.datatypes import process_or_group_name\nImportError: cannot import name process_or_group_name"
    },
    {
        "logs": "---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n/usr/lib/python2.7/dist-packages/IPython/utils/py3compat.pyc in execfile(fname, *where)\n    202             else:\n    203                 filename = fname\n--> 204             __builtin__.execfile(filename, *where)\n\n/usr/local/lib/python2.7/dist-packages/supervisor/options.py in <module>()\n     24 from supervisor.medusa import asyncore_25 as asyncore\n     25\n---> 26 from supervisor.datatypes import process_or_group_name\n     27 from supervisor.datatypes import boolean\n     28 from supervisor.datatypes import integer\n\nImportError: cannot import name process_or_group_name\n> /usr/local/lib/python2.7/dist-packages/supervisor/options.py(26)<module>()\n     25\n---> 26 from supervisor.datatypes import process_or_group_name\n     27 from supervisor.datatypes import boolean\n\nipdb> supervisor.datatypes.__file__\n'/usr/lib/python2.7/dist-packages/supervisor/datatypes.pyc'\nipdb> sys.path\n['/usr/local/lib/python2.7/dist-packages/supervisor', '', '/usr/bin', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/usr/lib/python2.7/lib-old', '/usr/lib/python2.7/lib-dynload', '/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages/IPython/extensions']"
    },
    {
        "logs": ":~# /usr/local/bin/supervisorctl status\nTraceback (most recent call last):\n  File \"/usr/local/bin/supervisorctl\", line 7, in <module>\n    from supervisor.supervisorctl import main\n  File \"/usr/local/lib/python2.7/dist-packages/supervisor/supervisorctl.py\", line 36, in <module>\n    from supervisor.options import ClientOptions\n  File \"/usr/local/lib/python2.7/dist-packages/supervisor/options.py\", line 23, in <module>\n    from supervisor.datatypes import process_or_group_name\nImportError: cannot import name process_or_group_name"
    },
    {
        "logs": "---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n/usr/lib/python2.7/dist-packages/IPython/utils/py3compat.pyc in execfile(fname, *where)\n    202             else:\n    203                 filename = fname\n--> 204             __builtin__.execfile(filename, *where)\n\n/usr/local/lib/python2.7/dist-packages/supervisor/options.py in <module>()\n     24 from supervisor.medusa import asyncore_25 as asyncore\n     25\n---> 26 from supervisor.datatypes import process_or_group_name\n     27 from supervisor.datatypes import boolean\n     28 from supervisor.datatypes import integer\n\nImportError: cannot import name process_or_group_name\n> /usr/local/lib/python2.7/dist-packages/supervisor/options.py(26)<module>()\n     25\n---> 26 from supervisor.datatypes import process_or_group_name\n     27 from supervisor.datatypes import boolean\n\nipdb> supervisor.datatypes.__file__\n'/usr/lib/python2.7/dist-packages/supervisor/datatypes.pyc'\nipdb> sys.path\n['/usr/local/lib/python2.7/dist-packages/supervisor', '', '/usr/bin', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/usr/lib/python2.7/lib-old', '/usr/lib/python2.7/lib-dynload', '/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages/IPython/extensions']"
    },
    {
        "logs": "private void informUser(){\n//create message title\n//create message contents\nSendEmail email = new SendEmail();\nemail.sendMail(title, contents); // <- it crashes here\n}"
    },
    {
        "logs": "<input type=\"text\" class=\"form-control input-lg ng-pristine ng-empty ng-invalid ng-invalid-required ng-touched\" capitalize-full=\"\" ng-model=\"user.ENDERECO\" required=\"\" placeholder=\"Digite seu endere\u00e7o\" autocomplete=\"off\" name=\"street\" style=\"opacity: 1; text-transform: uppercase;\">"
    },
    {
        "logs": "<input type=\"text\" class=\"form-control input-lg ng-pristine ng-empty ng-invalid ng-invalid-required ng-touched\" capitalize-full=\"\" ng-model=\"user.ENDERECO\" required=\"\" placeholder=\"Digite seu endere\u00e7o\" autocomplete=\"off\" name=\"street\" style=\"opacity: 1; text-transform: uppercase;\">"
    },
    {
        "logs": "Object[][][] containerTemp = new Object[zDim][yDim][xDim];\nfor (int z = 0; z < zDim; z++) {\n   for (int y = yDim - 1; y >= 0; y--) {\n      for (int x = 0; x < xDim; x++) {\n         containerTemp[z][y][xDim - (x + 1)] = container[z][x][y]; // change x target.\n      }\n   }"
    },
    {
        "logs": "Object[][][] containerTemp = new Object[zDim][yDim][xDim];\nfor (int z = 0; z < zDim; z++) {\n   for (int y = yDim - 1; y >= 0; y--) {\n      for (int x = 0; x < xDim; x++) {\n         containerTemp[z][y][xDim - (x + 1)] = container[z][x][y]; // change x target.\n      }\n   }"
    },
    {
        "logs": "import React, {Component} from 'react';\nimport {\n    Platform,\n    StyleSheet,\n    Text,\n    View,\n    TextInput, Button\n} from 'react-native';\n\nexport default class LoginForm extends Component<{}> {\n    constructor(props) {\n        super(props);\n        this._onLogInPressed = this._onLogInPressed.bind(this);\n        this._response_recognizer = this._response_recognizer.bind(this);\n        this.state = {\n            phone_number: '',\n            password: '',\n            data: {}\n        };\n    }\n    _response_recognizer(data: string ){\n\n    }\n\n    _onLogInPressed = () => {\n\n        var data = {\n            'phone_number': this.state.phone_number,\n            'password': this.state.password\n        }\n\n\n        fetch(\"http://192.168.1.12:5000/login\", {\n            method: \"POST\",\n            headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n            body:  JSON.stringify(data)\n        }).then(function(response){\n                return response.json();\n            }).then(function(data){\n                console.log(data)\n            this._response_recognizer(data)\n            }) .catch((error) => {\n            console.log(\"Error\" + error);\n        });\n    };\n\n    render() {\n        return (\n            <View style={styles.flow}>\n                <Text style={styles.text}>phone number:</Text>\n                <TextInput keyboardType='numeric'\n                           style={styles.input}\n                           ref=\"phone_number\"\n                           onChangeText={(phone_number) => this.setState({phone_number})}\n                           maxLengt={11}\n                           value={this.state.phone_number}\n                />\n                <Text style={styles.text}>password:</Text>\n                <TextInput style={styles.input} secureTextEntry={true} ref=\"password\"\n                           onChangeText={(password) => this.setState({password})}\n                           value={this.state.password}/>\n                <Button style={styles.button} onPress={this._onLogInPressed} title='login'/>\n            </View>\n        );\n    }\n}"
    },
    {
        "logs": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond"
    },
    {
        "logs": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond"
    },
    {
        "logs": "KeyError                                  Traceback (most recent call last)\n<ipython-input-9-560c2e877b57> in <module>()\n      4          layer_vertical_shift=0.2,\n      5          layer_horizontal_shift=0.0,                                                     \n----> 6                       proj_angle=50)\n  7 mx.draw_networkx(mg,pos=pos,node_size=50,with_labels=False,\n  8                                  edge_color=[mg[a][b]['weight'] for a,b in mg.edges()],\n\n C:\\Users\\wenzh\\multinetx\\draw.py in get_position(G, base_pos, \n       layer_vertical_shift, layer_horizontal_shift, proj_angle)\n      70 \n      71     for j in range(N):\n ---> 72         pos[j][0] *= math.cos(proj_angle)\n      73         pos[j][1] *= math.sin(proj_angle)\n      74 \n\n KeyError: 0"
    },
    {
        "logs": "KeyError                                  Traceback (most recent call last)\n<ipython-input-9-560c2e877b57> in <module>()\n      4          layer_vertical_shift=0.2,\n      5          layer_horizontal_shift=0.0,                                                     \n----> 6                       proj_angle=50)\n  7 mx.draw_networkx(mg,pos=pos,node_size=50,with_labels=False,\n  8                                  edge_color=[mg[a][b]['weight'] for a,b in mg.edges()],\n\n C:\\Users\\wenzh\\multinetx\\draw.py in get_position(G, base_pos, \n       layer_vertical_shift, layer_horizontal_shift, proj_angle)\n      70 \n      71     for j in range(N):\n ---> 72         pos[j][0] *= math.cos(proj_angle)\n      73         pos[j][1] *= math.sin(proj_angle)\n      74 \n\n KeyError: 0"
    },
    {
        "logs": "error: no matching function for call to 'LibraryBFunction'\ncandidate function not viable: no known conversion from 'const string' (aka 'const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >') to 'const string' (aka 'const std::basic_string<char, std::char_traits<char>, std::allocator<char> >') for 2nd argument"
    },
    {
        "logs": "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <title>Register</title>\r\n  <style>\r\n  body {\r\n    background-color: silver;\r\n  }\r\n  .welcome {\r\n    text-align: center;\r\n    font-family: \"Arial\";\r\n    font-size: 30px;\r\n    text-shadow: 2px 2px lightgrey;\r\n    color: white;\r\n    padding-top: 15px;\r\n  }\r\n  .form-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n  input[name=username], input[name=first_name], input[name=last_name], input[name=email],\r\n  input[name=password], input[name=confirm_password] {\r\n    border: 3px solid lightgrey;\r\n    padding: 10px;\r\n    background: white;\r\n    margin: 0 0 10px 0;\r\n    width: 250px;\r\n    outline:0 !important;\r\n  }\r\n  .help-block {\r\n    font-family: \"Arial\";\r\n    font-size: 12pt;\r\n    color: white;\r\n    padding-bottom: 10px;\r\n  }\r\n  input[type=submit] {\r\n    color: grey;\r\n    border: 3px solid lightgrey;\r\n    padding: 5px;\r\n    width: 100px;\r\n    text-align: center;\r\n  }\r\n  input[type=submit]:focus {\r\n    outline:0 !important;\r\n  }\r\n  input[type=submit]:hover {\r\n    background-color: #ddd;\r\n  }\r\n  input[type=submit]:active {\r\n    background-color: #aaa;\r\n    color: lightgrey;\r\n  }\r\n  </style>\r\n</head>\r\n<div class=\"welcome\">\r\n  <h1>Register</h1>\r\n</div>\r\n<form action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?>\" method=\"post\">\r\n  <div class=\"form-group <?php echo (!empty($username_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $username_err; ?></span>\r\n    <input type=\"text\" name=\"username\" class=\"form-control\" value=\"<?php echo $username; ?>\" placeholder=\"Username\">\r\n  </div>\r\n  <div class=\"form-group <?php echo (!empty($first_name_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $first_name_err; ?></span>\r\n    <input type=\"text\" name=\"first_name\" class=\"form-control\" value=\"<?php echo $first_name; ?>\" placeholder=\"First Name\">\r\n  </div>\r\n  <div class=\"form-group <?php echo (!empty($last_name_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $last_name_err; ?></span>\r\n    <input type=\"text\" name=\"last_name\" class=\"form-control\" value=\"<?php echo $last_name; ?>\" placeholder=\"Last Name\">\r\n  </div>\r\n  <div class=\"form-group <?php echo (!empty($email_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $email_err; ?></span>\r\n    <input type=\"text\" name=\"email\" class=\"form-control\" value=\"<?php echo $email; ?>\" placeholder=\"Email\">\r\n  </div>\r\n  <div class=\"form-group <?php echo (!empty($password_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $password_err; ?></span>\r\n    <input type=\"password\" name=\"password\" class=\"form-control\" value=\"<?php echo $password; ?>\" placeholder=\"Password\">\r\n  </div>\r\n  <div class=\"form-group <?php echo (!empty($confirm_password_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $confirm_password_err; ?></span>\r\n    <input type=\"password\" name=\"confirm_password\" class=\"form-control\" value=\"<?php echo $confirm_password; ?>\" placeholder=\"Confirm Password\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\r\n  </div>\r\n</form>\r\n</html>"
    },
    {
        "logs": "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <title>Register</title>\r\n  <style>\r\n  body {\r\n    background-color: silver;\r\n  }\r\n  .welcome {\r\n    text-align: center;\r\n    font-family: \"Arial\";\r\n    font-size: 30px;\r\n    text-shadow: 2px 2px lightgrey;\r\n    color: white;\r\n    padding-top: 15px;\r\n  }\r\n  .form-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n  input[name=username], input[name=first_name], input[name=last_name], input[name=email],\r\n  input[name=password], input[name=confirm_password] {\r\n    border: 3px solid lightgrey;\r\n    padding: 10px;\r\n    background: white;\r\n    margin: 0 0 10px 0;\r\n    width: 250px;\r\n    outline:0 !important;\r\n  }\r\n  .help-block {\r\n    font-family: \"Arial\";\r\n    font-size: 12pt;\r\n    color: white;\r\n    padding-bottom: 10px;\r\n  }\r\n  input[type=submit] {\r\n    color: grey;\r\n    border: 3px solid lightgrey;\r\n    padding: 5px;\r\n    width: 100px;\r\n    text-align: center;\r\n  }\r\n  input[type=submit]:focus {\r\n    outline:0 !important;\r\n  }\r\n  input[type=submit]:hover {\r\n    background-color: #ddd;\r\n  }\r\n  input[type=submit]:active {\r\n    background-color: #aaa;\r\n    color: lightgrey;\r\n  }\r\n  </style>\r\n</head>\r\n<div class=\"welcome\">\r\n  <h1>Register</h1>\r\n</div>\r\n<form action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?>\" method=\"post\">\r\n  <div class=\"form-group <?php echo (!empty($username_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $username_err; ?></span>\r\n    <input type=\"text\" name=\"username\" class=\"form-control\" value=\"<?php echo $username; ?>\" placeholder=\"Username\">\r\n  </div>\r\n  <div class=\"form-group <?php echo (!empty($first_name_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $first_name_err; ?></span>\r\n    <input type=\"text\" name=\"first_name\" class=\"form-control\" value=\"<?php echo $first_name; ?>\" placeholder=\"First Name\">\r\n  </div>\r\n  <div class=\"form-group <?php echo (!empty($last_name_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $last_name_err; ?></span>\r\n    <input type=\"text\" name=\"last_name\" class=\"form-control\" value=\"<?php echo $last_name; ?>\" placeholder=\"Last Name\">\r\n  </div>\r\n  <div class=\"form-group <?php echo (!empty($email_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $email_err; ?></span>\r\n    <input type=\"text\" name=\"email\" class=\"form-control\" value=\"<?php echo $email; ?>\" placeholder=\"Email\">\r\n  </div>\r\n  <div class=\"form-group <?php echo (!empty($password_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $password_err; ?></span>\r\n    <input type=\"password\" name=\"password\" class=\"form-control\" value=\"<?php echo $password; ?>\" placeholder=\"Password\">\r\n  </div>\r\n  <div class=\"form-group <?php echo (!empty($confirm_password_err)) ? 'has-error' : ''; ?>\">\r\n    <span class=\"help-block\"><?php echo $confirm_password_err; ?></span>\r\n    <input type=\"password\" name=\"confirm_password\" class=\"form-control\" value=\"<?php echo $confirm_password; ?>\" placeholder=\"Confirm Password\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\r\n  </div>\r\n</form>\r\n</html>"
    },
    {
        "logs": "void hostname_to_ip(char *hostname, int *connection_socket,\n                    unsigned short port_number)\n{\n    int check_sfd;\n    struct addrinfo hints, *p, *servinfo;\n    char port_number_s[sizeof(\"65535\")];\n\n    memset(&hints, 0, sizeof(struct addrinfo));\n    hints.ai_family = AF_UNSPEC;\n    hints.ai_socktype = SOCK_STREAM;\n    hints.ai_flags = AI_NUMERICSERV;\n    hints.ai_protocol = 0;\n\n    snprintf(port_number_s, sizeof port_number_s, \"%u\", port_number);\n\n    int res = getaddrinfo(hostname, port_number_s, &hints, &servinfo);\n    if (res == EAI_SYSTEM) {\n        fprintf(stderr, \"Error looking up %s: %s\\n\",\n                hostname, strerror(errno));\n        exit(1);\n    } else if (res != 0) {\n        fprintf(stderr, \"Error looking up %s: %s\\n\",\n                hostname, gai_strerror(res));\n        exit(1);\n    } else if (servinfo == NULL) {\n        fprintf(stderr, \"Error looking up %s: No addresses found\\n\",\n                hostname);\n        exit(1);\n    }\n\n    // getaddrinfo returned a linked list of relevant addresses\n    // loop through the addresses and return the first one we can connect to\n    for (p = servinfo; p != NULL; p = p->ai_next) {\n        check_sfd = socket(p->ai_family, p->ai_socktype, p->ai_protocol);\n        if (check_sfd == -1)\n            continue;\n\n        if (connect(check_sfd, p->ai_addr, p->ai_addrlen)) {\n            *connection_socket = check_sfd;\n            freeaddrinfo(servinfo);\n            return;\n        }\n        close(check_sfd);\n    }\n    // If we get here, we couldn't connect to any of the addresses.\n    fprintf(stderr, \"Couldn't connect to %s: %s\\n\", hostname, strerror(errno));\n    exit(1);\n}"
    },
    {
        "logs": "void hostname_to_ip(char *hostname, int *connection_socket,\n                    unsigned short port_number)\n{\n    int check_sfd;\n    struct addrinfo hints, *p, *servinfo;\n    char port_number_s[sizeof(\"65535\")];\n\n    memset(&hints, 0, sizeof(struct addrinfo));\n    hints.ai_family = AF_UNSPEC;\n    hints.ai_socktype = SOCK_STREAM;\n    hints.ai_flags = AI_NUMERICSERV;\n    hints.ai_protocol = 0;\n\n    snprintf(port_number_s, sizeof port_number_s, \"%u\", port_number);\n\n    int res = getaddrinfo(hostname, port_number_s, &hints, &servinfo);\n    if (res == EAI_SYSTEM) {\n        fprintf(stderr, \"Error looking up %s: %s\\n\",\n                hostname, strerror(errno));\n        exit(1);\n    } else if (res != 0) {\n        fprintf(stderr, \"Error looking up %s: %s\\n\",\n                hostname, gai_strerror(res));\n        exit(1);\n    } else if (servinfo == NULL) {\n        fprintf(stderr, \"Error looking up %s: No addresses found\\n\",\n                hostname);\n        exit(1);\n    }\n\n    // getaddrinfo returned a linked list of relevant addresses\n    // loop through the addresses and return the first one we can connect to\n    for (p = servinfo; p != NULL; p = p->ai_next) {\n        check_sfd = socket(p->ai_family, p->ai_socktype, p->ai_protocol);\n        if (check_sfd == -1)\n            continue;\n\n        if (connect(check_sfd, p->ai_addr, p->ai_addrlen)) {\n            *connection_socket = check_sfd;\n            freeaddrinfo(servinfo);\n            return;\n        }\n        close(check_sfd);\n    }\n    // If we get here, we couldn't connect to any of the addresses.\n    fprintf(stderr, \"Couldn't connect to %s: %s\\n\", hostname, strerror(errno));\n    exit(1);\n}"
    },
    {
        "logs": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Register</title>\n  <style>\n  body {\n    background-color: silver;\n  }\n  .welcome {\n    text-align: center;\n    font-family: \"Arial\";\n    font-size: 30px;\n    text-shadow: 2px 2px lightgrey;\n    color: white;\n    padding-top: 15px;\n  }\n  form{                               /* added this */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n  }\n\n\n  .form-group {\n    display: flex;\n    flex-direction: row;             /* change flex-direction to row */\n    align-items: center;\n    text-align: center;\n  }\n  input[name=username], input[name=first_name], input[name=last_name], input[name=email],\n  input[name=password], input[name=confirm_password] {\n    border: 3px solid lightgrey;\n    padding: 10px;\n    background: white;\n    margin: 0 0 10px 0;\n    width: 250px;\n    outline:0 !important;\n  }\n  .help-block {\n    font-family: \"Arial\";\n    font-size: 12pt;\n    color: white;\n    padding-bottom: 10px;\n  }\n  input[type=submit] {\n    color: grey;\n    border: 3px solid lightgrey;\n    padding: 5px;\n    width: 100px;\n    text-align: center;\n  }\n  input[type=submit]:focus {\n    outline:0 !important;\n  }\n  input[type=submit]:hover {\n    background-color: #ddd;\n  }\n  input[type=submit]:active {\n    background-color: #aaa;\n    color: lightgrey;\n  }\n  </style>\n</head>\n<div class=\"welcome\">\n  <h1>Register</h1>\n</div>\n<form action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?>\" method=\"post\">\n  <div class=\"form-group <?php echo (!empty($username_err)) ? 'has-error' : ''; ?>\">\n    <span class=\"help-block\"><?php echo $username_err; ?></span>\n    <input type=\"text\" name=\"username\" class=\"form-control\" value=\"<?php echo $username; ?>\" placeholder=\"Username\">\n  </div>\n  <div class=\"form-group <?php echo (!empty($first_name_err)) ? 'has-error' : ''; ?>\">\n    <span class=\"help-block\"><?php echo $first_name_err; ?></span>\n    <input type=\"text\" name=\"first_name\" class=\"form-control\" value=\"<?php echo $first_name; ?>\" placeholder=\"First Name\">\n  </div>\n  <div class=\"form-group <?php echo (!empty($last_name_err)) ? 'has-error' : ''; ?>\">\n    <span class=\"help-block\"><?php echo $last_name_err; ?></span>\n    <input type=\"text\" name=\"last_name\" class=\"form-control\" value=\"<?php echo $last_name; ?>\" placeholder=\"Last Name\">\n  </div>\n  <div class=\"form-group <?php echo (!empty($email_err)) ? 'has-error' : ''; ?>\">\n    <input type=\"text\" name=\"email\" class=\"form-control\" value=\"<?php echo $email; ?>\" placeholder=\"Email\">\n    <span class=\"help-block\">Error Message</span>\n  </div>\n\n  <div class=\"form-group <?php echo (!empty($email_err)) ? 'has-error' : ''; ?>\">\n    <input type=\"text\" name=\"email\" class=\"form-control\" value=\"<?php echo $email; ?>\" placeholder=\"Email\">\n    <span class=\"help-block\">Error Message</span>\n  </div>\n\n  <div class=\"form-group <?php echo (!empty($password_err)) ? 'has-error' : ''; ?>\">\n    <span class=\"help-block\"><?php echo $password_err; ?></span>\n    <input type=\"password\" name=\"password\" class=\"form-control\" value=\"<?php echo $password; ?>\" placeholder=\"Password\">\n  </div>\n  <div class=\"form-group <?php echo (!empty($confirm_password_err)) ? 'has-error' : ''; ?>\">\n    <span class=\"help-block\"><?php echo $confirm_password_err; ?></span>\n    <input type=\"password\" name=\"confirm_password\" class=\"form-control\" value=\"<?php echo $confirm_password; ?>\" placeholder=\"Confirm Password\">\n  </div>\n  <div class=\"form-group\">\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n  </div>\n</form>\n</html>"
    },
    {
        "logs": "def printlen(x): print(len(x))\n\ndef argslist(x): return list(x.args)\n\ndef add(value_error, arg): raise Exception(*value_error, *arg)\n\ndef fibonacci(a, b, x):\n    try:\n        assert b<x\n        printlen(b)\n        try:\n            add(a,b)\n        except Exception as e:\n            fibonacci(argslist(e), a, x)\n    except AssertionError as e:\n        print(e)\n\nthreshold = 1000\nfibonacci([[]],[[]],[[]]*threshold)"
    },
    {
        "logs": "def printlen(x): print(len(x))\n\ndef argslist(x): return list(x.args)\n\ndef add(value_error, arg): raise Exception(*value_error, *arg)\n\ndef fibonacci(a, b, x):\n    try:\n        assert b<x\n        printlen(b)\n        try:\n            add(a,b)\n        except Exception as e:\n            fibonacci(argslist(e), a, x)\n    except AssertionError as e:\n        print(e)\n\nthreshold = 1000\nfibonacci([[]],[[]],[[]]*threshold)"
    },
    {
        "logs": "FROM fedora:28\n\nENV ANDROID_COMPILE_SDK=28\nENV ANDROID_BUILD_TOOLS=28.0.1\nENV ANDROID_SDK_TOOLS=4333796\nENV FLUTTER_VERSION=0.7.3-beta\n\nRUN dnf update -y \\\n    && dnf install -y wget tar unzip ruby ruby-devel make autoconf automake redhat-rpm-config lcov\\\n           gcc gcc-c++ libstdc++.i686 java-1.8.0-openjdk-devel xz git mesa-libGL mesa-libGLU\\\n    && dnf clean all\n\nRUN wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip \\\n    && unzip android-sdk.zip -d /opt/android-sdk-linux/ \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"platforms;android-${ANDROID_COMPILE_SDK}\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"platform-tools\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"build-tools;${ANDROID_BUILD_TOOLS}\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"extras;android;m2repository\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"extras;google;google_play_services\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"extras;google;m2repository\" \\\n    && yes | /opt/android-sdk-linux/tools/bin/sdkmanager  --licenses || echo \"Failed\" \\\n    && rm android-sdk.zip\n\nENV ANDROID_HOME=/opt/android-sdk-linux\nENV PATH=$PATH:/opt/android-sdk-linux/platform-tools/\n\nRUN wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/beta/linux/flutter_linux_v${FLUTTER_VERSION}.tar.xz \\\n    && tar xf flutter.tar.xz -C /opt \\\n    && rm flutter.tar.xz\n\nENV PATH=$PATH:/opt/flutter/bin\n\nRUN echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"emulator\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"system-images;android-18;google_apis;x86\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"system-images;android-27;google_apis_playstore;x86\"\n\nRUN dnf update -y \\\n    && dnf install -y pulseaudio-libs mesa-libGL  mesa-libGLES mesa-libEGL \\\n    && dnf clean all"
    },
    {
        "logs": "FROM fedora:28\n\nENV ANDROID_COMPILE_SDK=28\nENV ANDROID_BUILD_TOOLS=28.0.1\nENV ANDROID_SDK_TOOLS=4333796\nENV FLUTTER_VERSION=0.7.3-beta\n\nRUN dnf update -y \\\n    && dnf install -y wget tar unzip ruby ruby-devel make autoconf automake redhat-rpm-config lcov\\\n           gcc gcc-c++ libstdc++.i686 java-1.8.0-openjdk-devel xz git mesa-libGL mesa-libGLU\\\n    && dnf clean all\n\nRUN wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip \\\n    && unzip android-sdk.zip -d /opt/android-sdk-linux/ \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"platforms;android-${ANDROID_COMPILE_SDK}\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"platform-tools\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"build-tools;${ANDROID_BUILD_TOOLS}\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"extras;android;m2repository\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"extras;google;google_play_services\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"extras;google;m2repository\" \\\n    && yes | /opt/android-sdk-linux/tools/bin/sdkmanager  --licenses || echo \"Failed\" \\\n    && rm android-sdk.zip\n\nENV ANDROID_HOME=/opt/android-sdk-linux\nENV PATH=$PATH:/opt/android-sdk-linux/platform-tools/\n\nRUN wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/beta/linux/flutter_linux_v${FLUTTER_VERSION}.tar.xz \\\n    && tar xf flutter.tar.xz -C /opt \\\n    && rm flutter.tar.xz\n\nENV PATH=$PATH:/opt/flutter/bin\n\nRUN echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"emulator\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"system-images;android-18;google_apis;x86\" \\\n    && echo \"y\" | /opt/android-sdk-linux/tools/bin/sdkmanager \"system-images;android-27;google_apis_playstore;x86\"\n\nRUN dnf update -y \\\n    && dnf install -y pulseaudio-libs mesa-libGL  mesa-libGLES mesa-libEGL \\\n    && dnf clean all"
    },
    {
        "logs": "import autoprefixer from 'autoprefixer';\nimport babel from 'gulp-babel';\nimport cssdeclarationsorter from 'css-declaration-sorter';\nimport cssnano from 'cssnano';\nimport gulp from 'gulp';\nimport postcss from 'gulp-postcss';\nimport rename from 'gulp-rename';\nimport sass from 'gulp-sass';\nimport uglify from 'gulp-uglify';\n\nconst paths = {\n    'styles': {\n        'base': 'src/styles/',\n        'src': 'src/styles/main.scss',\n        'dest': 'dist/styles/',\n        'watch': 'src/styles/**/*.scss',\n    },\n    'scripts': {\n        'base': 'src/scripts/',\n        'src': 'src/scripts/**/*.js',\n        'dest': 'dist/scripts/',\n        'watch': 'src/scripts/**/*.js',\n    },\n};\n\nexport const styles = function () {\n    const plugins = [\n        autoprefixer(),\n        cssdeclarationsorter(),\n        cssnano(),\n    ];\n\n    return gulp.src(\n        paths.styles.src,\n        {\n            'base': paths.styles.base,\n        }\n    ).\n        pipe(sass().on(\n            'error',\n            sass.logError\n        )).\n        pipe(postcss(plugins)).\n        pipe(rename({\n            'basename': 'styles',\n            'suffix': '.min',\n        })).\n        pipe(gulp.dest(paths.styles.dest));\n};\n\nexport const scripts = function () {\n    return gulp.src(\n        paths.scripts.src,\n        {\n            'base': paths.scripts.base,\n        }\n    ).\n        pipe(babel()).\n        pipe(uglify()).\n        pipe(rename({\n            'suffix': '.min',\n        })).\n        pipe(gulp.dest(paths.scripts.dest));\n};\n\nexport const watch = function () {\n    gulp.watch(\n        paths.scripts.watch,\n        scripts\n    );\n    gulp.watch(\n        paths.styles.watch,\n        styles\n    );\n};\n\nconst build = gulp.parallel(\n    styles,\n    scripts,\n    gulp.series(watch)\n);\n\nexport default build;"
    },
    {
        "logs": "search = new Bloodhound(\n    remote:\n      url: '/applications.json'\n      prepare: (query, settings) ->\n        settings.url = settings.url + '?query=' + query + '&search=true'\n        settings.beforeSend = (e) ->\n          if query.substr(0,3).toLowerCase() == 'oc-'\n            e.abort()\n        return settings\n)"
    },
    {
        "logs": "search = new Bloodhound(\n    remote:\n      url: '/applications.json'\n      prepare: (query, settings) ->\n        settings.url = settings.url + '?query=' + query + '&search=true'\n        settings.beforeSend = (e) ->\n          if query.substr(0,3).toLowerCase() == 'oc-'\n            e.abort()\n        return settings\n)"
    },
    {
        "logs": "// app.js\n\nangular.module(\"starter\", [dependencies]).config(function () {\n    window.addEventListener(\"error\", function (event) {\n        console.error(\"Error caught\", event);\n    });\n});"
    },
    {
        "logs": "// controllers.js\n\nangular.module('starter.controllers', [dependencies]).controller(\"HomeCtrl\", function ($scope, $http) {\n    var nullVariable = null;\n    var assignmentTarget;\n\n    $scope.testClick = function () {\n        setTimeout(function () {\n            assignmentTarget = nullVariable.testClickTimeout; // handled\n        }, 0);\n\n        assignmentTarget = nullVariable.testClick; // unhandled\n    };\n\n    $scope.$on('$ionicView.beforeEnter', function () {\n        setTimeout(function () {\n            assignmentTarget = nullVariable.homeCtrlBeforeEnterTimeout; // handled\n        }, 0);\n\n        assignmentTarget = nullVariable.homeCtrlBeforeEnter; // unhandled\n    });\n\n    $http({\n        method: \"GET\",\n        responseType: \"json\",\n        url: \"comeurl\"\n    }).then(function (response) {\n        setTimeout(function () {\n            assignmentTarget = nullVariable.ajaxResponseTimeout; // handled\n        }, 0);\n\n        assignmentTarget = nullVariable.ajaxResponse; // unhandled\n    });\n\n    setTimeout(function () {\n        assignmentTarget = nullVariable.homeCtrlTimeout; // handled\n    }, 0);\n\n    assignmentTarget = nullVariable.homeCtrl; // unhandled\n\n});"
    },
    {
        "logs": "// app.js\n\nangular.module(\"starter\", [dependencies]).config(function () {\n    window.addEventListener(\"error\", function (event) {\n        console.error(\"Error caught\", event);\n    });\n});"
    },
    {
        "logs": "Traceback (most recent call last):\n  File \"test_hilton.py\", line 1, in <module>\n    import hello\nModuleNotFoundError: No module named 'hello'"
    },
    {
        "logs": "Traceback (most recent call last):\n  File \"test_hilton.py\", line 1, in <module>\n    import hello\nModuleNotFoundError: No module named 'hello'"
    },
    {
        "logs": "url := \"https://test-as.sgx.trustedservices.intel.com:443/attestation/sgx/v2/report\"\n    pair, e := tls.LoadX509KeyPair(\"client.crt\", \"client.key\")\n    if e != nil {\n        log.Fatal(\"LoadX509KeyPair:\", e)\n    }\n\n    client := &http.Client{\n        Transport: &http.Transport{\n            TLSClientConfig: &tls.Config{\n                InsecureSkipVerify: true,\n                Certificates: []tls.Certificate{pair},\n            },\n        }}\n\n    resp, e := client.Post(url, \"application/json\", bytes.NewBufferString(payload))"
    },
    {
        "logs": "Post: dial tcp connectex: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond."
    },
    {
        "logs": "url := \"https://test-as.sgx.trustedservices.intel.com:443/attestation/sgx/v2/report\"\n    pair, e := tls.LoadX509KeyPair(\"client.crt\", \"client.key\")\n    if e != nil {\n        log.Fatal(\"LoadX509KeyPair:\", e)\n    }\n\n    client := &http.Client{\n        Transport: &http.Transport{\n            TLSClientConfig: &tls.Config{\n                InsecureSkipVerify: true,\n                Certificates: []tls.Certificate{pair},\n            },\n        }}\n\n    resp, e := client.Post(url, \"application/json\", bytes.NewBufferString(payload))"
    },
    {
        "logs": "from selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\n\nlink = \"https://nationen.ebcomments.dk/embed/stream?asset_id=7627366\"\n\nwith webdriver.Chrome() as driver:\n    wait = WebDriverWait(driver,10)\n    driver.get(link)\n    while True:\n        try:\n            wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,\".talk-load-more > button\"))).click()\n        except Exception: break\n\n    for item in wait.until(EC.presence_of_all_elements_located((By.CSS_SELECTOR,\"[data-slot-name='commentContent'] > .CommentContent__content___ZGv1q\"))):\n        print(item.text)"
    },
    {
        "logs": "from selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\n\nlink = \"https://nationen.ebcomments.dk/embed/stream?asset_id=7627366\"\n\nwith webdriver.Chrome() as driver:\n    wait = WebDriverWait(driver,10)\n    driver.get(link)\n    while True:\n        try:\n            wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,\".talk-load-more > button\"))).click()\n        except Exception: break\n\n    for item in wait.until(EC.presence_of_all_elements_located((By.CSS_SELECTOR,\"[data-slot-name='commentContent'] > .CommentContent__content___ZGv1q\"))):\n        print(item.text)"
    },
    {
        "logs": "def send_video(self, frame):\n        if not self.TCP.pauseCall or not self.TCP.endCall:\n            try:\n                header = \"{}#{}#{}#{}#\".format(self.counter, time.time(), '640x480', self.fps).encode(\"utf-8\")\n                ratio = self.get_compress_ratio(self.fps_friend)\n                frame = self.rescale_by_height(frame, 320)\n                self.frame_sent = frame\n                frame_compressed = self.compress(frame, 1)\n                self.socket.sendto(header +  frame_compressed, self.dest)\n                self.counter += 1\n            except Exception as e:\n                print(e)\n                return"
    },
    {
        "logs": "def send_video(self, frame):\n        if not self.TCP.pauseCall or not self.TCP.endCall:\n            try:\n                header = \"{}#{}#{}#{}#\".format(self.counter, time.time(), '640x480', self.fps).encode(\"utf-8\")\n                ratio = self.get_compress_ratio(self.fps_friend)\n                frame = self.rescale_by_height(frame, 320)\n                self.frame_sent = frame\n                frame_compressed = self.compress(frame, 1)\n                self.socket.sendto(header +  frame_compressed, self.dest)\n                self.counter += 1\n            except Exception as e:\n                print(e)\n                return"
    },
    {
        "logs": "private FloatingActionButton fabUpdateInfo;\n\nfabUpdateInfo = getActivity().findViewById(R.id.fab_update);\n\nfabUpdateInfo.setVisibility(View.GONE); //This is where the error message gets triggered"
    },
    {
        "logs": "android.os.NetworkOnMainThreadException\n    at android.os.StrictMode$AndroidBlockGuardPolicy.onNetwork(StrictMode.java:1513)\n    at java.net.Inet6AddressImpl.lookupHostByName(Inet6AddressImpl.java:117)\n    at java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:105)\n    at java.net.InetAddress.getAllByName(InetAddress.java:1154)\n    at okhttp3.Dns$1.lookup(Dns.java:40)\n    at okhttp3.internal.connection.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:185)\n    at okhttp3.internal.connection.RouteSelector.nextProxy(RouteSelector.java:149)\n    at okhttp3.internal.connection.RouteSelector.next(RouteSelector.java:84)\n    at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:214)\n    at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\n    at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\n    at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\n    at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\n    at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\n    at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:213)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\n    at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\n    at okhttp3.RealCall.execute(RealCall.java:77)\n    at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\n    at retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:41)\n    at io.reactivex.Observable.subscribe(Observable.java:10700)\n    at retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\n    at io.reactivex.Observable.subscribe(Observable.java:10700)\n    at io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver.subscribeInner(ObservableFlatMap.java:162)\n    at io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver.onNext(ObservableFlatMap.java:139)\n    at io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver.onSuccess(SingleToObservable.java:59)\n    at io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.onSuccess(SingleMap.java:63)\n    at io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver.onSuccess(SingleFlatMap.java:111)\n    at io.reactivex.internal.operators.single.SingleJust.subscribeActual(SingleJust.java:30)\n    at io.reactivex.Single.subscribe(Single.java:2692)\n    at io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback.onSuccess(SingleFlatMap.java:84)\n    at io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver.run(SingleObserveOn.java:81)"
    },
    {
        "logs": "android.os.NetworkOnMainThreadException\n    at android.os.StrictMode$AndroidBlockGuardPolicy.onNetwork(StrictMode.java:1513)\n    at java.net.Inet6AddressImpl.lookupHostByName(Inet6AddressImpl.java:117)\n    at java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:105)\n    at java.net.InetAddress.getAllByName(InetAddress.java:1154)\n    at okhttp3.Dns$1.lookup(Dns.java:40)\n    at okhttp3.internal.connection.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:185)\n    at okhttp3.internal.connection.RouteSelector.nextProxy(RouteSelector.java:149)\n    at okhttp3.internal.connection.RouteSelector.next(RouteSelector.java:84)\n    at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:214)\n    at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\n    at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\n    at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\n    at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\n    at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\n    at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:213)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\n    at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\n    at okhttp3.RealCall.execute(RealCall.java:77)\n    at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\n    at retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:41)\n    at io.reactivex.Observable.subscribe(Observable.java:10700)\n    at retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\n    at io.reactivex.Observable.subscribe(Observable.java:10700)\n    at io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver.subscribeInner(ObservableFlatMap.java:162)\n    at io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver.onNext(ObservableFlatMap.java:139)\n    at io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver.onSuccess(SingleToObservable.java:59)\n    at io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.onSuccess(SingleMap.java:63)\n    at io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver.onSuccess(SingleFlatMap.java:111)\n    at io.reactivex.internal.operators.single.SingleJust.subscribeActual(SingleJust.java:30)\n    at io.reactivex.Single.subscribe(Single.java:2692)\n    at io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback.onSuccess(SingleFlatMap.java:84)\n    at io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver.run(SingleObserveOn.java:81)"
    },
    {
        "logs": "// ClassLoaderTest.java\n\nimport java.net.URLClassLoader;\nimport java.net.URL;\n\npublic class ClassLoaderTest {\n\n    public static void main(String[] args) throws Exception {\n        URL[] urls = new URL[1];\n        urls[0] = new URL(\"file:./untrusted/\"); // untrusted/ could be anywhere; for the purpose of the test, it is in the working directory\n        URLClassLoader loader = new URLClassLoader(urls);\n        Class<?> cl = loader.loadClass(\"Untrusted\"); // one tries to load: untrusted/Untrusted.class\n        cl.getConstructor().newInstance(); // or cl.getDeclaredConstructor().newInstance()\n        System.exit(0);\n    }\n}"
    },
    {
        "logs": "$ java -Djava.security.manager -Djava.security.policy=security.policy ClassLoaderTest\nException in thread \"main\" java.lang.ClassNotFoundException: Untrusted\n    at java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:436)\n    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:588)\n    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\n    at ClassLoaderTest.main(ClassLoaderTest.java:10)"
    },
    {
        "logs": "// ClassLoaderTest.java\n\nimport java.net.URLClassLoader;\nimport java.net.URL;\n\npublic class ClassLoaderTest {\n\n    public static void main(String[] args) throws Exception {\n        URL[] urls = new URL[1];\n        urls[0] = new URL(\"file:./untrusted/\"); // untrusted/ could be anywhere; for the purpose of the test, it is in the working directory\n        URLClassLoader loader = new URLClassLoader(urls);\n        Class<?> cl = loader.loadClass(\"Untrusted\"); // one tries to load: untrusted/Untrusted.class\n        cl.getConstructor().newInstance(); // or cl.getDeclaredConstructor().newInstance()\n        System.exit(0);\n    }\n}"
    },
    {
        "logs": ".rvm/rubies/ruby-2.6.2/lib/ruby/site_ruby/2.6.0/rubygems.rb:284:in `find_spec_for_exe': can't find gem appname (>= 0.a) with executable vcdm (Gem::GemNotFoundException)"
    },
    {
        "logs": "Map<String,Object> result = /*result of parsing JSON input*/;\n\n@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\nMap<String, List<String>> errors = (Map) result.get(\"errors\");                                                       \nfor (Entry<String, List<String>> error : errors.entrySet()) {\n    String name = error.getKey();\n    List<String> messages = entry.getValue();\n\n    Log.p(name);\n    for (String message : messages)\n        Log.p(\"  \" + message);\n}"
    },
    {
        "logs": "Map<String,Object> result = /*result of parsing JSON input*/;\n\n@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\nMap<String, List<String>> errors = (Map) result.get(\"errors\");                                                       \nfor (Entry<String, List<String>> error : errors.entrySet()) {\n    String name = error.getKey();\n    List<String> messages = entry.getValue();\n\n    Log.p(name);\n    for (String message : messages)\n        Log.p(\"  \" + message);\n}"
    },
    {
        "logs": ".InputMargin:not(.has-error) {\n  margin-bottom: 16px;\n}\n\n.InputPadding:not(.has-error) {\n  position: relative;\n  padding-bottom: 16px;\n}\n\n.InputPadding:not(.has-error) span {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n}"
    },
    {
        "logs": "--------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n/usr/local/lib/python3.6/dist-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance)\n   2896             try:\n-> 2897                 return self._engine.get_loc(key)\n   2898             except KeyError:\n\npandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\n\npandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\n\npandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\n\npandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\n\nKeyError: 'Date'\n\nDuring handling of the above exception, another exception occurred:\n\nKeyError                                  Traceback (most recent call last)\n8 frames\n/usr/local/lib/python3.6/dist-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance)\n   2897                 return self._engine.get_loc(key)\n   2898             except KeyError:\n-> 2899                 return self._engine.get_loc(self._maybe_cast_indexer(key))\n   2900         indexer = self.get_indexer([key], method=method, tolerance=tolerance)\n   2901         if indexer.ndim > 1 or indexer.size > 1:\n\npandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\n\npandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()\n\npandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\n\npandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\n\nKeyError: 'Date'"
    },
    {
        "logs": "redis_1        | 4410:C 06 Feb 2020 23:50:57.045 # Failed opening the RDB file crontab (in server root dir /etc) for saving: Permission denied"
    },
    {
        "logs": "# WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128."
    },
    {
        "logs": "WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect."
    },
    {
        "logs": "redis:\n    build:\n      context: ./redis\n      dockerfile: Dockerfile\n    ports:\n      - '6379:6379'\n    volumes:\n        - ./redis.conf:/usr/local/etc/redis/redis.conf\n    sysctls:\n      net.core.somaxcomm: '511'\n    restart: on-failure"
    },
    {
        "logs": "redis_1        | 4410:C 06 Feb 2020 23:50:57.045 # Failed opening the RDB file crontab (in server root dir /etc) for saving: Permission denied"
    },
    {
        "logs": "<inboundEndpoint name=\"aaa2bbb-aaaFolder\" onError=\"aaa2bbb-errors\" protocol=\"file\" sequence=\"aaa2bbb-processFiles\" statistics=\"enable\" suspend=\"false\" trace=\"enable\" xmlns=\"http://ws.apache.org/ns/synapse\">\n    <parameters>\n        <parameter name=\"interval\">5000</parameter>\n        <parameter name=\"sequential\">true</parameter>\n        <parameter name=\"coordination\">true</parameter>\n        <parameter name=\"transport.vfs.ContentType\">text/plain</parameter>\n        <parameter name=\"transport.vfs.LockReleaseSameNode\">false</parameter>\n        <parameter name=\"transport.vfs.AutoLockRelease\">false</parameter>\n        <parameter name=\"transport.vfs.ActionAfterFailure\">MOVE</parameter>\n        <parameter name=\"transport.vfs.FailedRecordsFileName\">vfs-move-failed-records.properties</parameter>\n        <parameter name=\"transport.vfs.FailedRecordsFileDestination\">repository/conf/</parameter>\n        <parameter name=\"transport.vfs.MoveFailedRecordTimestampFormat\">dd-MM-yyyy HH:mm:ss</parameter>\n        <parameter name=\"transport.vfs.FailedRecordNextRetryDuration\">3000</parameter>\n        <parameter name=\"transport.vfs.ActionAfterProcess\">MOVE</parameter>\n        <parameter key=\"gov:/filesystem/fromAAA.txt\" name=\"transport.vfs.FileURI\"/>\n        <parameter name=\"transport.vfs.ReplyFileURI\">${registry:gov:/filesystem/fromAAA.txt}/success</parameter>\n        <parameter name=\"transport.vfs.ReplyFileName\">response.xml</parameter>\n        <parameter name=\"transport.vfs.DistributedLock\">false</parameter>\n        <parameter name=\"transport.vfs.FileNamePattern\">^CMDE.*\\.zip|^(?!tmp).*\\.xml</parameter>\n        <parameter name=\"transport.vfs.Locking\">disable</parameter>\n        <parameter name=\"transport.vfs.FileSortAttribute\">none</parameter>\n        <parameter name=\"transport.vfs.FileSortAscending\">true</parameter>\n        <parameter name=\"transport.vfs.CreateFolder\">true</parameter>\n        <parameter name=\"transport.vfs.Streaming\">false</parameter>\n        <parameter name=\"transport.vfs.Build\">false</parameter>\n    </parameters>\n</inboundEndpoint>"
    },
    {
        "logs": "<inboundEndpoint name=\"aaa2bbb-aaaFolder\" onError=\"aaa2bbb-errors\" protocol=\"file\" sequence=\"aaa2bbb-processFiles\" statistics=\"enable\" suspend=\"false\" trace=\"enable\" xmlns=\"http://ws.apache.org/ns/synapse\">\n    <parameters>\n        <parameter name=\"interval\">5000</parameter>\n        <parameter name=\"sequential\">true</parameter>\n        <parameter name=\"coordination\">true</parameter>\n        <parameter name=\"transport.vfs.ContentType\">text/plain</parameter>\n        <parameter name=\"transport.vfs.LockReleaseSameNode\">false</parameter>\n        <parameter name=\"transport.vfs.AutoLockRelease\">false</parameter>\n        <parameter name=\"transport.vfs.ActionAfterFailure\">MOVE</parameter>\n        <parameter name=\"transport.vfs.FailedRecordsFileName\">vfs-move-failed-records.properties</parameter>\n        <parameter name=\"transport.vfs.FailedRecordsFileDestination\">repository/conf/</parameter>\n        <parameter name=\"transport.vfs.MoveFailedRecordTimestampFormat\">dd-MM-yyyy HH:mm:ss</parameter>\n        <parameter name=\"transport.vfs.FailedRecordNextRetryDuration\">3000</parameter>\n        <parameter name=\"transport.vfs.ActionAfterProcess\">MOVE</parameter>\n        <parameter key=\"gov:/filesystem/fromAAA.txt\" name=\"transport.vfs.FileURI\"/>\n        <parameter name=\"transport.vfs.ReplyFileURI\">${registry:gov:/filesystem/fromAAA.txt}/success</parameter>\n        <parameter name=\"transport.vfs.ReplyFileName\">response.xml</parameter>\n        <parameter name=\"transport.vfs.DistributedLock\">false</parameter>\n        <parameter name=\"transport.vfs.FileNamePattern\">^CMDE.*\\.zip|^(?!tmp).*\\.xml</parameter>\n        <parameter name=\"transport.vfs.Locking\">disable</parameter>\n        <parameter name=\"transport.vfs.FileSortAttribute\">none</parameter>\n        <parameter name=\"transport.vfs.FileSortAscending\">true</parameter>\n        <parameter name=\"transport.vfs.CreateFolder\">true</parameter>\n        <parameter name=\"transport.vfs.Streaming\">false</parameter>\n        <parameter name=\"transport.vfs.Build\">false</parameter>\n    </parameters>\n</inboundEndpoint>"
    },
    {
        "logs": "private static byte[] cipherData(PaddedBufferedBlockCipher cipher, byte[] data)\n        throws Exception\n{\n    byte[] result=null;\n    try{\n        int minSize = cipher.getOutputSize(data.length);\n        byte[] outBuf = new byte[minSize];\n        int length1 = cipher.processBytes(data, 0, data.length, outBuf, 0);\n        int length2 = cipher.doFinal(outBuf, length1);\n        int actualLength = length1 + length2;\n        result = new byte[actualLength];\n        System.arraycopy(outBuf, 0, result, 0, result.length);\n    }catch(Exception e){\n        System.err.println(\"Encryption [0010] \"+e.getMessage());\n    }\n\n    return result;\n}\n\npublic static String decrypt(byte[] cipher, byte[] key, byte[] iv) throws Exception\n{\n    System.out.println(\"Encryption decrypt: \"+new String(cipher));\n    PaddedBufferedBlockCipher aes = new PaddedBufferedBlockCipher(new CBCBlockCipher(\n            new AESEngine()));\n    CipherParameters ivAndKey = new ParametersWithIV(new KeyParameter(key), iv);\n    try {\n        aes.init(false, ivAndKey);\n    } catch (Exception e) {\n        return \"\";\n    }\n    byte[] cip=cipherData(aes, cipher);\n    if(cip==null){\n        System.err.println(\"Encryption.decrypt [0011]: cip is null\");\n        return \"\";\n    }\n    String result=new String(cip);\n    System.out.println(\"Encryption decrypted: \"+result);\n    return result;\n}\n\npublic static String encrypt(byte[] plain, byte[] key, byte[] iv) throws Exception\n{\n    System.out.println(\"Encryption encrypt: \"+new String(plain));\n    PaddedBufferedBlockCipher aes = new PaddedBufferedBlockCipher(new CBCBlockCipher(\n            new AESEngine()));\n    CipherParameters ivAndKey = new ParametersWithIV(new KeyParameter(key), iv);\n    aes.init(true, ivAndKey);\n    return new String(cipherData(aes, plain));\n}"
    },
    {
        "logs": "private static byte[] cipherData(PaddedBufferedBlockCipher cipher, byte[] data)\n        throws Exception\n{\n    byte[] result=null;\n    try{\n        int minSize = cipher.getOutputSize(data.length);\n        byte[] outBuf = new byte[minSize];\n        int length1 = cipher.processBytes(data, 0, data.length, outBuf, 0);\n        int length2 = cipher.doFinal(outBuf, length1);\n        int actualLength = length1 + length2;\n        result = new byte[actualLength];\n        System.arraycopy(outBuf, 0, result, 0, result.length);\n    }catch(Exception e){\n        System.err.println(\"Encryption [0010] \"+e.getMessage());\n    }\n\n    return result;\n}\n\npublic static String decrypt(byte[] cipher, byte[] key, byte[] iv) throws Exception\n{\n    System.out.println(\"Encryption decrypt: \"+new String(cipher));\n    PaddedBufferedBlockCipher aes = new PaddedBufferedBlockCipher(new CBCBlockCipher(\n            new AESEngine()));\n    CipherParameters ivAndKey = new ParametersWithIV(new KeyParameter(key), iv);\n    try {\n        aes.init(false, ivAndKey);\n    } catch (Exception e) {\n        return \"\";\n    }\n    byte[] cip=cipherData(aes, cipher);\n    if(cip==null){\n        System.err.println(\"Encryption.decrypt [0011]: cip is null\");\n        return \"\";\n    }\n    String result=new String(cip);\n    System.out.println(\"Encryption decrypted: \"+result);\n    return result;\n}\n\npublic static String encrypt(byte[] plain, byte[] key, byte[] iv) throws Exception\n{\n    System.out.println(\"Encryption encrypt: \"+new String(plain));\n    PaddedBufferedBlockCipher aes = new PaddedBufferedBlockCipher(new CBCBlockCipher(\n            new AESEngine()));\n    CipherParameters ivAndKey = new ParametersWithIV(new KeyParameter(key), iv);\n    aes.init(true, ivAndKey);\n    return new String(cipherData(aes, plain));\n}"
    },
    {
        "logs": "int letterCount = 0;\n  int letterCount2 = 0;\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n        body: Column(children: <Widget>[\n      TextField(\n        onChanged: (text) {\n          setState(() {\n            letterCount = int.parse(text);\n          });\n        },\n      ),\n      TextField(\n        onChanged: (text) {\n          setState(() {\n            letterCount2 = letterCount + (int.parse(text));\n          });\n        },\n      ),\n      Text(\n        'Total - $letterCount2',\n      ),\n    ]));\n  }"
    },
    {
        "logs": "Traceback (most recent call last):\n  File \"/home/dixitgpta/byghouz/byghouz_env/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 34, in inner\n    response = get_response(request)\n  File \"/home/dixitgpta/byghouz/byghouz_env/lib/python3.7/site-packages/django/core/handlers/base.py\", line 115, in _get_response\n    response = self.process_exception_by_middleware(e, request)\n  File \"/home/dixitgpta/byghouz/byghouz_env/lib/python3.7/site-packages/django/core/handlers/base.py\", line 113, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/home/dixitgpta/byghouz/project/products/views.py\", line 575, in product_page_view\n    seller          = prod.seller\n\nException Type: AttributeError at /products/54795882652377/shipping/\nException Value: 'NoneType' object has no attribute 'seller'"
    },
    {
        "logs": "Traceback (most recent call last):\n  File \"/home/dixitgpta/byghouz/byghouz_env/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 34, in inner\n    response = get_response(request)\n  File \"/home/dixitgpta/byghouz/byghouz_env/lib/python3.7/site-packages/django/core/handlers/base.py\", line 115, in _get_response\n    response = self.process_exception_by_middleware(e, request)\n  File \"/home/dixitgpta/byghouz/byghouz_env/lib/python3.7/site-packages/django/core/handlers/base.py\", line 113, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/home/dixitgpta/byghouz/project/products/views.py\", line 575, in product_page_view\n    seller          = prod.seller\n\nException Type: AttributeError at /products/54795882652377/shipping/\nException Value: 'NoneType' object has no attribute 'seller'"
    },
    {
        "logs": "# bind to the local user with the WinNT provider\n$localUser    = 'Test'\n$ComputerName = $env:COMPUTERNAME\n\n$user = [ADSI]\"WinNT://$ComputerName/$localUser,user\"\nif ($user.UserFlags.Value -band 65536) {        # ADS_UF_DONT_EXPIRE_PASSWD\n    Write-Host \"The password for user '$localUser' never expires\"\n}\nelseif ($user.UserFlags.Value -band 64) {       # ADS_UF_PASSWD_CANT_CHANGE\n    Write-Host \"User '$localUser' is not allowed to change password\"\n}\nelseif ($user.UserFlags.Value -band 32) {       # ADS_UF_PASSWD_NOTREQD \n    Write-Host \"User '$localUser' does not require a password\"\n}\nelse {\n    $user.Put(\"PasswordExpired\", 1)\n    $user.SetInfo()\n}"
    },
    {
        "logs": "# bind to the local user with the WinNT provider\n$localUser    = 'Test'\n$ComputerName = $env:COMPUTERNAME\n\n$user = [ADSI]\"WinNT://$ComputerName/$localUser,user\"\nif ($user.UserFlags.Value -band 65536) {        # ADS_UF_DONT_EXPIRE_PASSWD\n    Write-Host \"The password for user '$localUser' never expires\"\n}\nelseif ($user.UserFlags.Value -band 64) {       # ADS_UF_PASSWD_CANT_CHANGE\n    Write-Host \"User '$localUser' is not allowed to change password\"\n}\nelseif ($user.UserFlags.Value -band 32) {       # ADS_UF_PASSWD_NOTREQD \n    Write-Host \"User '$localUser' does not require a password\"\n}\nelse {\n    $user.Put(\"PasswordExpired\", 1)\n    $user.SetInfo()\n}"
    },
    {
        "logs": "guild.retrieveBan(user).queue(\n  (success) -> {\n    // the user is banned\n  }, \n  (failure) -> {\n    // the user is not banned\n  }\n);"
    },
    {
        "logs": "<button onclick ='changeToRTL()'>Right to Left</button>\n             <button  onclick ='changeToLTR()'>Left to Right</button>\n             \n\n\n<script>\n    function changeToLTR(){\n  $('body').removeClass('direction-rtl').addClass('direction-ltr')\n  window.onload=changeToLTR();\n  // initiate();\n}\n\nfunction changeToRTL(){\n  $('body').removeClass('direction-ltr').addClass('direction-rtl');\n  window.onload=changeToRTL();\n\n  \n}"
    },
    {
        "logs": "<button onclick ='changeToRTL()'>Right to Left</button>\n             <button  onclick ='changeToLTR()'>Left to Right</button>\n             \n\n\n<script>\n    function changeToLTR(){\n  $('body').removeClass('direction-rtl').addClass('direction-ltr')\n  window.onload=changeToLTR();\n  // initiate();\n}\n\nfunction changeToRTL(){\n  $('body').removeClass('direction-ltr').addClass('direction-rtl');\n  window.onload=changeToRTL();\n\n  \n}"
    },
    {
        "logs": "stl_iterator.h:969:16: runtime error: reference binding to misaligned address 0x7fb0eace6010 for type 'B', which requires 32 byte alignment\n0x7fb0eace6010: note: pointer points here\n 00 00 00 00  b8 31 76 a9 b1 7f 00 00  b0 72 33 94 a4 9c 49 42  00 00 8f 88 b4 33 51 40  00 10 e2 8e\n              ^ \nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior stl_iterator.h:969:16 in \ndoStuff.cpp:2: runtime error: reference binding to misaligned address 0x7fb0eace6010 for type 'const B', which requires 32 byte alignment\n0x7fb0eace6010: note: pointer points here\n 00 00 00 00  b8 31 76 a9 b1 7f 00 00  b0 72 33 94 a4 9c 49 42  00 00 8f 88 b4 33 51 40  00 10 e2 8e\n              ^ \nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior doStuff.cpp:2 in \ndoStuff.cpp:3: runtime error: upcast of misaligned address 0x7fb0eace6010 for type 'B', which requires 32 byte alignment\n0x7fb0eace6010: note: pointer points here\n 00 00 00 00  b8 31 76 a9 b1 7f 00 00  b0 72 33 94 a4 9c 49 42  00 00 8f 88 b4 33 51 40  00 10 e2 8e\n              ^ \nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior doStuff.cpp:3: in \ndoStuff.cpp:3: runtime error: member access within misaligned address 0x7fb0eace6010 for type 'A', which requires 32 byte alignment\n0x7fb0eace6010: note: pointer points here\n 00 00 00 00  b8 31 76 a9 b1 7f 00 00  b0 72 33 94 a4 9c 49 42  00 00 8f 88 b4 33 51 40  00 10 e2 8e\n\n==33989==ERROR: UndefinedBehaviorSanitizer: SEGV on unknown address 0x0000000000a4 (pc 0x7fb1a8d187bf bp 0x7fb1a9763158 sp 0x7fb1727ec240 T34466)\n==33989==The signal is caused by a READ memory access.\n==33989==Hint: address points to the zero page.\n    #0 0x7fb1a8d187bf in __dynamic_cast /build/gcc/src/gcc/libstdc++-v3/libsupc++/dyncast.cc:50:15\n    #1 0x55a9ee96a6a5 in __ubsan::checkDynamicType(void*, void*, unsigned long)\n    #2 0x55a9ee9695c3 in HandleDynamicTypeCacheMiss(__ubsan::DynamicTypeCacheMissData*, unsigned long, unsigned long, __ubsan::ReportOptions)\n    #3 0x55a9ee969c70 in __ubsan_handle_dynamic_type_cache_miss\n    #4 0x7fb1ac1c75d8 in doStuff(std::vector<B, std::allocator<B> >&) doStuff.cpp:29:35"
    },
    {
        "logs": "stl_iterator.h:969:16: runtime error: reference binding to misaligned address 0x7fb0eace6010 for type 'B', which requires 32 byte alignment\n0x7fb0eace6010: note: pointer points here\n 00 00 00 00  b8 31 76 a9 b1 7f 00 00  b0 72 33 94 a4 9c 49 42  00 00 8f 88 b4 33 51 40  00 10 e2 8e\n              ^ \nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior stl_iterator.h:969:16 in \ndoStuff.cpp:2: runtime error: reference binding to misaligned address 0x7fb0eace6010 for type 'const B', which requires 32 byte alignment\n0x7fb0eace6010: note: pointer points here\n 00 00 00 00  b8 31 76 a9 b1 7f 00 00  b0 72 33 94 a4 9c 49 42  00 00 8f 88 b4 33 51 40  00 10 e2 8e\n              ^ \nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior doStuff.cpp:2 in \ndoStuff.cpp:3: runtime error: upcast of misaligned address 0x7fb0eace6010 for type 'B', which requires 32 byte alignment\n0x7fb0eace6010: note: pointer points here\n 00 00 00 00  b8 31 76 a9 b1 7f 00 00  b0 72 33 94 a4 9c 49 42  00 00 8f 88 b4 33 51 40  00 10 e2 8e\n              ^ \nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior doStuff.cpp:3: in \ndoStuff.cpp:3: runtime error: member access within misaligned address 0x7fb0eace6010 for type 'A', which requires 32 byte alignment\n0x7fb0eace6010: note: pointer points here\n 00 00 00 00  b8 31 76 a9 b1 7f 00 00  b0 72 33 94 a4 9c 49 42  00 00 8f 88 b4 33 51 40  00 10 e2 8e\n\n==33989==ERROR: UndefinedBehaviorSanitizer: SEGV on unknown address 0x0000000000a4 (pc 0x7fb1a8d187bf bp 0x7fb1a9763158 sp 0x7fb1727ec240 T34466)\n==33989==The signal is caused by a READ memory access.\n==33989==Hint: address points to the zero page.\n    #0 0x7fb1a8d187bf in __dynamic_cast /build/gcc/src/gcc/libstdc++-v3/libsupc++/dyncast.cc:50:15\n    #1 0x55a9ee96a6a5 in __ubsan::checkDynamicType(void*, void*, unsigned long)\n    #2 0x55a9ee9695c3 in HandleDynamicTypeCacheMiss(__ubsan::DynamicTypeCacheMissData*, unsigned long, unsigned long, __ubsan::ReportOptions)\n    #3 0x55a9ee969c70 in __ubsan_handle_dynamic_type_cache_miss\n    #4 0x7fb1ac1c75d8 in doStuff(std::vector<B, std::allocator<B> >&) doStuff.cpp:29:35"
    },
    {
        "logs": "getDivisions () { result in\n                    switch result {\n                    case .success(let divisions):\n                        print(divisions)\n                    case .failure(let error):\n                        print(\"Error: \\(error.localizedDescription)\")\n                    }\n                }"
    },
    {
        "logs": "async function example() {\n    try {\n        return await somethingReturningAPromise();\n    } catch (e) {\n        // ...do something with the error/rejection...\n    }\n}"
    },
    {
        "logs": "async function example() {\n    try {\n        return somethingReturningAPromise();\n    } catch (e) {\n        // ...do something with the error/rejection...\n    }\n}"
    },
    {
        "logs": "async function example() {\n    try {\n        return await somethingReturningAPromise();\n    } catch (e) {\n        // ...do something with the error/rejection...\n    }\n}"
    },
    {
        "logs": "async function example() {\n    try {\n        return somethingReturningAPromise();\n    } catch (e) {\n        // ...do something with the error/rejection...\n    }\n}"
    },
    {
        "logs": "INFO: Analyzed target //main:future (1 packages loaded, 2 targets configured).\nINFO: Found 1 target...\nERROR: /home/turtle/projects/miscellaneous/test/cpp/future/main/BUILD:3:10: Linking of rule '//main:future' failed (Exit 1): gcc failed: error executing command /usr/bin/gcc @bazel-out/k8-fastbuild/bin/main/future-2.params\n\nUse --sandbox_debug to see verbose messages from the sandbox gcc failed: error executing command /usr/bin/gcc @bazel-out/k8-fastbuild/bin/main/future-2.params\n\nUse --sandbox_debug to see verbose messages from the sandbox\n/usr/bin/ld.gold: error: cannot find -lfolly"
    },
    {
        "logs": "ExpansionPanel(\n      canTapOnHeader: true,\n      headerBuilder: (ctx, bool) => ChangeNotifierProvider.value(\n        value: item,\n        child: _buildPanelHeader(item, index),\n      ),\n      body: ChangeNotifierProvider.value(\n        value: item,\n        child: item.body,\n      ),\n      isExpanded: item.isExpanded,\n    )"
    },
    {
        "logs": "ExpansionPanel(\n      canTapOnHeader: true,\n      headerBuilder: (ctx, bool) => ChangeNotifierProvider.value(\n        value: item,\n        child: _buildPanelHeader(item, index),\n      ),\n      body: ChangeNotifierProvider.value(\n        value: item,\n        child: item.body,\n      ),\n      isExpanded: item.isExpanded,\n    )"
    },
    {
        "logs": "`Addr [ip:port] insert\nRpc error: <_MultiThreadedRendezvous of RPC that terminated with:\nstatus = StatusCode.UNAVAILABLE\ndetails = \"Broken pipe\"\ndebug_error_string = \"{\"created\":\"@1616758021.979269877\",\"description\":\"Error received from peer ipv4:IP:port\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1067,\"grpc_message\":\"Broken pipe\",\"grpc_status\":14}\""
    },
    {
        "logs": "@RequestMapping(\"/downloadFile/{fileId}\")\npublic ResponseEntity<HttpStatus> handleFileDownloadPage(HttpServletRequest request, HttpServletResponse response, @PathVariable(value = \"fileId\") Integer fileId) throws IOException, Exception {\n      \n            File file = service.getFile(fileId);\n            ServletOutputStream out = response.getOutputStream();\n\n            InputStream stream = null;\n                stream = new FileInputStream(file.getFilePath());\n\n                //write the file to the file specified\n                int bytesRead = 0;\n                byte[] buffer = new byte[8192];\n                response.setContentType(\"application/octet-stream\");\n                response.setCharacterEncoding(\"UTF-8\");\n                response.setHeader(\"Content-Disposition\", String.format(\" attachment; filename=\\\"%s\\\"\", file.getFileName()));\n\n                while ((bytesRead = stream.read(buffer, 0, 8192)) != -1) {\n                    out.write(buffer, 0, bytesRead);\n                }\n                out.flush();\n                out.close();\n        \n        return ResponseEntity.ok(HttpStatus.OK);\n\n    }"
    },
    {
        "logs": "@RequestMapping(\"/downloadFile/{fileId}\")\npublic ResponseEntity<HttpStatus> handleFileDownloadPage(HttpServletRequest request, HttpServletResponse response, @PathVariable(value = \"fileId\") Integer fileId) throws IOException, Exception {\n      \n            File file = service.getFile(fileId);\n            ServletOutputStream out = response.getOutputStream();\n\n            InputStream stream = null;\n                stream = new FileInputStream(file.getFilePath());\n\n                //write the file to the file specified\n                int bytesRead = 0;\n                byte[] buffer = new byte[8192];\n                response.setContentType(\"application/octet-stream\");\n                response.setCharacterEncoding(\"UTF-8\");\n                response.setHeader(\"Content-Disposition\", String.format(\" attachment; filename=\\\"%s\\\"\", file.getFileName()));\n\n                while ((bytesRead = stream.read(buffer, 0, 8192)) != -1) {\n                    out.write(buffer, 0, bytesRead);\n                }\n                out.flush();\n                out.close();\n        \n        return ResponseEntity.ok(HttpStatus.OK);\n\n    }"
    },
    {
        "logs": "21:59:05.755    https://nextjs.org/telemetry\n21:59:05.809    info  - Checking validity of types...\n21:59:13.352    Failed to compile.\n21:59:13.353    ./pages/about-iq.tsx:7:20\n21:59:13.353    Type error: Cannot find module '../components/navbar' or its corresponding type declarations.\n21:59:13.353       5 | import { useRouter } from 'next/router';\n21:59:13.353       6 | \n21:59:13.353    >  7 | import NavBar from '../components/navbar';\n21:59:13.353         |                    ^\n21:59:13.353       8 | import Footer from '../components/footer';"
    },
    {
        "logs": "21:59:05.755    https://nextjs.org/telemetry\n21:59:05.809    info  - Checking validity of types...\n21:59:13.352    Failed to compile.\n21:59:13.353    ./pages/about-iq.tsx:7:20\n21:59:13.353    Type error: Cannot find module '../components/navbar' or its corresponding type declarations.\n21:59:13.353       5 | import { useRouter } from 'next/router';\n21:59:13.353       6 | \n21:59:13.353    >  7 | import NavBar from '../components/navbar';\n21:59:13.353         |                    ^\n21:59:13.353       8 | import Footer from '../components/footer';"
    },
    {
        "logs": "<script type=\"text/jscript\">\n    $(function () {\n    $(\"#Departmentddl\").change(function () {\n    alert($('option:selected').val());\n    });\n    });\n</script>"
    },
    {
        "logs": "<script type=\"text/jscript\">\n    $(function () {\n        $(\"#ddlDepartments\").change(function () {\n            var selectedid = $('option:selected').val();\n            if (selectedid > 0) {\n                $.ajax({\n                    url: \"/RecordEntries/PopulateddlSubDepartments\",\n                    data: {\n                        id: selectedid\n                    },\n                    type: \"Post\",\n                    dataType: \"json\",\n                    success: function (data) {\n                        alert(data);\n                        var ddldist = $('#ddlSubDepartments');\n                            $.each(data, function (NumberValue, NameLabel) {\n\n                                 ddldist.append(\n                                     $('<option></option>').val(NumberValue).html(NameLabel)\n                            );\n                        });\n\n                    },\n                });\n            }\n        });\n    });\n</script>"
    },
    {
        "logs": "<script type=\"text/jscript\">\n    $(function () {\n    $(\"#Departmentddl\").change(function () {\n    alert($('option:selected').val());\n    });\n    });\n</script>"
    },
    {
        "logs": "var select = document.querySelector('select#id.orClass');\nselect.addEventListener('change', function(e) {\n  console.log(select.value);\n\n  // or if it changes dynamically\n  console.log(e.target.value);      \n});"
    },
    {
        "logs": "let select = document.getElementById('select_id');\n  select.addEventListener('change', function() {\n    console.log(select.value);\n    // just for test\n    alert(select.value);\n  });"
    },
    {
        "logs": "var select = document.querySelector('select#id.orClass');\nselect.addEventListener('change', function(e) {\n  console.log(select.value);\n\n  // or if it changes dynamically\n  console.log(e.target.value);      \n});"
    },
    {
        "logs": "let select = document.getElementById('select_id');\n  select.addEventListener('change', function() {\n    console.log(select.value);\n    // just for test\n    alert(select.value);\n  });"
    },
    {
        "logs": "to makePropertyAccessor(appName, propertyName)\n    (*\n       WARNING: this handler does not sanitize its inputs. \n       NEVER call from untrusted code. Severe risk of data \n       destruction from accidental errors/injection attacks.\n    *)\n    run script \"script\n        to getProperty(inObject)\n            tell application \\\"\" & appName & \"\\\"\n                return \" & propertyName & \" of inObject\n            end tell\n        end getProperty\n        \n        to setProperty(inObject, newValue)\n            tell application \\\"\" & appName & \"\\\"\n                set \" & propertyName & \" of inObject to newValue\n            end tell\n        end setProperty\n    end script\"\nend makePropertyAccessor\n\n\n-- example usage:\n\nset ContainerAccessor to makePropertyAccessor(\"Finder\", \"container\")\n\ntell application \"Finder\" to set aRecord to properties of home\n\nContainerAccessor's getProperty(aRecord)\n--> folder \"Users\" of startup disk of application \"Finder\""
    },
    {
        "logs": "axios({\n      method: 'POST',\n      url: U_R_L,  \n      data: formData,\n      transformRequest: (d) => d, \n      headers: { \n        \"Content-Type\": \"multipart/form-data; charset=utf-8; boundary=------random-boundary\",\n      }\n    })\n    .then((response) => {\n       console.log(\"response : \");  \n       console.log(response.data);    \n    }, (error) => {\n        console.log(\"error : \"); \n        console.log(error); \n    })\n    .then(() => {\n      setProgress(false);\n    });"
    },
    {
        "logs": "axios({\n      method: 'POST',\n      url: U_R_L,  \n      data: formData,\n      transformRequest: (d) => d, \n      headers: { \n        \"Content-Type\": \"multipart/form-data; charset=utf-8; boundary=------random-boundary\",\n      }\n    })\n    .then((response) => {\n       console.log(\"response : \");  \n       console.log(response.data);    \n    }, (error) => {\n        console.log(\"error : \"); \n        console.log(error); \n    })\n    .then(() => {\n      setProgress(false);\n    });"
    },
    {
        "logs": "// working no error\nvar query = context.Category.Where(c => c != null && ListOfIds.Contains(c.Id)).ToList();\nvar count = context.Category.Include(x => x.Products).Count();\n\n// error null\nvar query = context.Category.Include(x => x.Products).Where(c => c != null && ListOfIds.Contains(c.Id)).ToList();"
    },
    {
        "logs": "// working no error\nvar query = context.Category.Where(c => c != null && ListOfIds.Contains(c.Id)).ToList();\nvar count = context.Category.Include(x => x.Products).Count();\n\n// error null\nvar query = context.Category.Include(x => x.Products).Where(c => c != null && ListOfIds.Contains(c.Id)).ToList();"
    },
    {
        "logs": ")\n\n   var formData = new FormData()\n   formData.append('file', compressedFile)\n   var url = URL.BASE + URL.STORAGE_UPLOAD + 'profileImage'\n  var result = await post(url, formData, 'multipart/form-data')\n\n  if (result.is_success === false) {\n      addNotification(result.error_message, 'danger');\n    }\n\n   else{      \n   var url= reader.readAsDataURL(file)\n   reader.readAsDataURL(file)\n\n    reader.onloadend = function (e) {\n    setSelectedImgUrl(reader.result);\n      setProfileImage(result.data.fileName);    \n   }\n   .bind(this)\n} }\n\n\n\n  profileImgUrl: Yup\n         .mixed()\n        .nullable() \n        .notRequired()      \n         .test(\n                 \"filesize\",\n                 requiredMessages.file_size_validation,\n                  (file) => !file || (file && file.size <= 2000000)\n              )      \n         .test(\n                 \"fileformat\",\n                 requiredMessages.file_type_validation,\n                 (file) => !file || (file && SUPPORTED_FORMATS.includes(file.type))\n             ),\n\n\n\n  <input className=\"fileInput hidden\" type=\"file\"  name=\"profileImgUrl\"  id=\"profileImgUrl\" accept=\"image/*  onBlur={handleBlur} onChange={(event) => { setFieldValue(\"profileImgUrl\",event.target.files[0])onFileChange(event.target.files[0])}}/>"
    },
    {
        "logs": "SELECT  \n    [Account Name]\n    , SUM([Extended Price]) [EP_Sum]\n    , TRY_PARSE([Service Month] AS DATE) [ServiceMonthClean] -- handles exception by adding 'null' to bad data, and thus does not require where clause filters.\n    , LAG(SUM([Extended Price]), 1, 0) OVER (PARTITION by [Account Name] order by [Service Month] asc) as [ExtPrice Lag Prior Month]\n    , [Bill Date]        \nFROM tables_with_joins        \nWHERE 1 = 1        \nGROUP BY [Service Month], [Account Name], [Account Number], [Bill Date]\nORDER BY [Service Month] desc, [Account Name] asc"
    },
    {
        "logs": "SELECT  \n    [Account Name]\n    , SUM([Extended Price]) [EP_Sum]\n    , TRY_PARSE([Service Month] AS DATE) [ServiceMonthClean] -- handles exception by adding 'null' to bad data, and thus does not require where clause filters.\n    , LAG(SUM([Extended Price]), 1, 0) OVER (PARTITION by [Account Name] order by [Service Month] asc) as [ExtPrice Lag Prior Month]\n    , [Bill Date]        \nFROM tables_with_joins        \nWHERE 1 = 1        \nGROUP BY [Service Month], [Account Name], [Account Number], [Bill Date]\nORDER BY [Service Month] desc, [Account Name] asc"
    },
    {
        "logs": "import play.api.libs.json._\n\nval inputJsonStr = \"\"\"{\n    \"id\": 1001,\n    \"processes\": [\n        {\n            \"process_id\": 301,\n            \"status\": \"accepted\"\n        },\n        {\n            \"process_id\": 302,\n            \"status\": \"accepted\"\n        },\n        {\n            \"process_id\": 303,\n            \"status\": \"failed\"\n        },\n        {\n            \"process_id\": 304,\n            \"status\": \"failed\"\n        }\n    ]\n}\"\"\"\nval inputJsonObj = Json.parse(inputJsonStr)\n\nval transformer = (__ \\ \"processes\").json.update(\n  __.read[JsArray].map { case JsArray(arr) =>\n    JsArray(\n      arr.filter(\n        info => (info \\ \"status\").as[String].equals(\"accepted\")\n      )\n    )\n  }\n)\n\ninputJsonObj\n  .transform(transformer)\n  .map(Json.prettyPrint)"
    },
    {
        "logs": "import play.api.libs.json._\n\nval inputJsonStr = \"\"\"{\n    \"id\": 1001,\n    \"processes\": [\n        {\n            \"process_id\": 301,\n            \"status\": \"accepted\"\n        },\n        {\n            \"process_id\": 302,\n            \"status\": \"accepted\"\n        },\n        {\n            \"process_id\": 303,\n            \"status\": \"failed\"\n        },\n        {\n            \"process_id\": 304,\n            \"status\": \"failed\"\n        }\n    ]\n}\"\"\"\nval inputJsonObj = Json.parse(inputJsonStr)\n\nval transformer = (__ \\ \"processes\").json.update(\n  __.read[JsArray].map { case JsArray(arr) =>\n    JsArray(\n      arr.filter(\n        info => (info \\ \"status\").as[String].equals(\"accepted\")\n      )\n    )\n  }\n)\n\ninputJsonObj\n  .transform(transformer)\n  .map(Json.prettyPrint)"
    },
    {
        "logs": "def first_player_input():    \n    value = input(\"Enter the desired coordinates (or M or Z): \")\n    if \"M\" in value:\n        handle_M()\n    elif \"Z\" in value:\n        handle_Z()\n    elif \",\" in value:\n        return value.split()\n    raise ValueError(f\"improper input: {value}\")"
    },
    {
        "logs": "...\ndef func(t: Type[T]) -> T:\n    if not isinstance(t, type) or not issubclass(t, Foo):\n        raise TypeError(f\"{t} is not a subclass of "
    },
    {
        "logs": "...\ndef func(t: Type[T]) -> T:\n    if not isinstance(t, type) or not issubclass(t, Foo):\n        raise TypeError(f\"{t} is not a subclass of `Foo`\")\n    return t()"
    },
    {
        "logs": "def get_product_details(request, category_slug, slug):\n    # Change <Category> field name to <category> \n    product = get_object_or_404(Product, category__slug=category_slug, slug=slug)\n    context = dict(product=product)\n    return response(response, \"product_detail.html\", context)"
    },
    {
        "logs": "def get_product_details(request, category_slug, slug):\n    # Change <Category> field name to <category> \n    product = get_object_or_404(Product, category__slug=category_slug, slug=slug)\n    context = dict(product=product)\n    return response(response, \"product_detail.html\", context)"
    },
    {
        "logs": "private void settext(string val)\n    {\n        richTextBox1.AppendText(val);\n    }\n\n    private void serialPort1_DataReceived(object sender, SerialDataReceivedEventArgs e)\n    {\n        string incomstring = serialPort1.ReadLine();\n        settext(incomstring);\n    }\nprivate void button5_Click_1(object sender, EventArgs e)\n    {\n        try\n        {\n            Cursor.Current = Cursors.WaitCursor;\n            if (serialPort1.IsOpen)\n            {\n                serialPort1.WriteLine(\"1\");\n            }\n            else\n            {\n                MessageBox.Show(\"Open Port FIrst.\", \"Port not open.\", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);\n            }\n        }\n        catch (Exception ex)\n        {\n            MessageBox.Show(ex.Message);\n        }\n        finally\n        {\n            Cursor.Current = Cursors.Default;\n        }\n        \n    }"
    },
    {
        "logs": "<div className='card' syle='max-height:300px'>\n  <img onError=\"this.src= 'https://d27jswm5an3efw.cloudfront.net/app/uploads/2019/07/insert-image-html.jpg'\" className=\"card-img top max-height:50px\" src={item.img !== undefined ? item.img : \"https://d27jswm5an3efw.cloudfront.net/app/uploads/2019/07/insert-image-html.jpg\"}/>\n    <div className=\"card-body\" syle='max-height:300px'>\n      <h3 className=\"card-title\">{item.subject}</h3>\n      <p className=\"card-text\">{item.description}</p>\n      <div className=\"col-8-center\">\n      <div className=\"row justify-content-center\">\n      <div className='col-3 text-center'>Likes: <strong>{item.likes}</strong></div>\n    </div>\n      <button type='button' className='col-4 border bg-danger justify-content-center text-white btn-lg'>Dislike</button>\n      <button type='button'className='col-4 border bg-success text-center text-white'>Like</button>\n    </div>\n    </div>\n</div>"
    },
    {
        "logs": "<div className='card' syle='max-height:300px'>\n  <img onError=\"this.src= 'https://d27jswm5an3efw.cloudfront.net/app/uploads/2019/07/insert-image-html.jpg'\" className=\"card-img top max-height:50px\" src={item.img !== undefined ? item.img : \"https://d27jswm5an3efw.cloudfront.net/app/uploads/2019/07/insert-image-html.jpg\"}/>\n    <div className=\"card-body\" syle='max-height:300px'>\n      <h3 className=\"card-title\">{item.subject}</h3>\n      <p className=\"card-text\">{item.description}</p>\n      <div className=\"col-8-center\">\n      <div className=\"row justify-content-center\">\n      <div className='col-3 text-center'>Likes: <strong>{item.likes}</strong></div>\n    </div>\n      <button type='button' className='col-4 border bg-danger justify-content-center text-white btn-lg'>Dislike</button>\n      <button type='button'className='col-4 border bg-success text-center text-white'>Like</button>\n    </div>\n    </div>\n</div>"
    },
    {
        "logs": "@Component({ changeDetection: ChangeDetectionStrategy.OnPush, selector: 'app-table', templateUrl: './table.component.html', styleUrls: ['./table.component.scss'], })"
    },
    {
        "logs": "// in plugin/RubriquesManager/Model/Table/BlocsTable.php\nnamespace RubriquesManager\\Model\\Table;\n\nclass BlocsTable extends AbstractBlocsTable\n{\n    public function initialize(array $config): void\n        {\n            parent::initialize($config);\n\n            $this->belongsTo('RubriquesManager.Rubriques');\n\n            $rubriques = $this->Rubriques->find(); // Trigger the error : \"Table class for alias Rubriques could not be found.\"\n            // [...]\n        }"
    },
    {
        "logs": "// in plugin/RubriquesManager/Model/Table/BlocsTable.php\nnamespace RubriquesManager\\Model\\Table;\n\nclass BlocsTable extends AbstractBlocsTable\n{\n    public function initialize(array $config): void\n        {\n            parent::initialize($config);\n\n            $this->belongsTo('RubriquesManager.Rubriques');\n\n            $rubriques = $this->Rubriques->find(); // Trigger the error : \"Table class for alias Rubriques could not be found.\"\n            // [...]\n        }"
    }
]